(version 1)
(deny default)
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library"))
	(require-all
		(regex #"^/private/var/mobile/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/euser[0-9]+/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/[-0-9A-F]+/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/Users/[^/]+/Library/Caches/CloudKit/[^/]+/[^/]+")
		(prefix "${HOME}")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(regex #"^/private/var/mobile/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit")
		(prefix "${HOME}")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(regex #"^/private/var/mobile/Containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit")
		(prefix "${HOME}")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(regex #"/private/var/containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit" #".+/private/var/containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-all
				(require-any
					(require-all
						(require-entitlement "com.apple.security.system-group-containers"))
					(require-all
						(require-entitlement "com.apple.security.system-groups")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-all
				(require-any
					(require-all
						(require-entitlement "com.apple.security.system-groups"))
					(require-all
						(require-entitlement "com.apple.security.system-group-containers")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
	(require-all
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write"))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly"))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly"))
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container")))
	(require-all
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read-write"))
			(require-all
				(extension-class "com.apple.app-sandbox.read"))
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container")))
	(require-all
		(require-any
			(require-all
				(extension-class "com.apple.mediaserverd.read-write"))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly"))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly"))
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-all
						(require-any
							(require-all
								(require-entitlement "com.apple.security.system-groups"))
							(require-all
								(require-entitlement "com.apple.security.system-group-containers")
									(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))))))
	(require-all
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read-write"))
			(require-all
				(extension-class "com.apple.app-sandbox.read"))
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-all
						(require-any
							(require-all
								(require-entitlement "com.apple.security.system-groups"))
							(require-all
								(require-entitlement "com.apple.security.system-group-containers")
									(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))))))
(allow file-map-executable)
(allow file-read*
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
	(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
	(prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.MobileGestalt.plist")
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(literal "/dev/zero")
	(literal "/dev/random")
	(subpath "/Developer")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(extension "com.apple.sandbox.executable")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(subpath "/private/var/db/timezone")
	(literal "/Library/Preferences/SystemConfiguration/preferences.plist")
	(literal "/Library/Preferences/com.apple.security.plist")
	(literal "/private/var/db/DetachedSignatures")
	(literal "/private/var/db/mds/messages/se_SecurityMessages")
	(literal "/private/var/db/mds/system/mdsDirectory.db")
	(literal "/private/var/run/diagnosticd/dyld_shared_cache_x86_64")
	(prefix "${HOME}/Library/Caches")
	(prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(mount-relative-regex #"^/\.TemporaryItems$" #"^/\.TemporaryItems/")
	(mount-relative-regex #"^/\.DocumentRevisions-V100$" #"^/\.DocumentRevisions-V100/")
	(mount-relative-regex #"^/\.DocumentRevisions-V100-bad-[0-9]+$" #"^/\.DocumentRevisions-V100-bad-[0-9]+/")
	(literal "/private/var/logs/Ubiquity")
	(prefix "${HOME}/Library/Logs/Ubiquity")
	(prefix "${HOME}/Library/Logs/ProtectedCloudStorage.log")
	(prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
	(prefix "${HOME}/Library/Logs/awd")
	(regex #"^/private/var/tmp/CKTraffic$" #"^/private/var/tmp/CKTraffic[^/]+$")
	(literal "/")
	(regex #"^/var/tmp$" #"^/var/tmp/" #"^/private/var/tmp$" #"^/private/var/tmp/")
	(prefix "${HOME}/Library/Caches/CloudKit")
	(prefix "${HOME}/Library/Caches/com.apple.cloudd")
	(regex #"^/Library/Keychains/System.keychain")
	(prefix "${HOME}/Library/Keychains")
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.migration.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.iokit.IOMobileGraphicsFamily.plist")
	(prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
	(prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
	(prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.persistentconnection.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.CoreDuet.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.DataMigration.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.icloud.findmydeviced.public.notbackedup.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.icloud.findmydeviced.postwipe.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AppSupport.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AOSNotification.public.notbackedup.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.PeoplePicker.plist")
	(prefix "${HOME}/Media/com.apple.itunes.lock_sync")
	(literal "/dev/null")
	(literal "/dev/urandom")
	(literal "/dev/dtracehelper")
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-all
				(require-any
					(require-all
						(require-entitlement "com.apple.security.system-groups"))
					(require-all
						(require-entitlement "com.apple.security.system-group-containers")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-all
				(require-any
					(require-all
						(require-entitlement "com.apple.security.system-groups"))
					(require-all
						(require-entitlement "com.apple.security.system-group-containers")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
	(require-all
		(regex #"^/private/var/mobile/Library/ConfigurationProfiles/PublicInfo$" #"^/private/var/mobile/Library/ConfigurationProfiles/PublicInfo/" #"^/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo$" #"^/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo/" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/PublicInfo/" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/PublicInfo/" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/PublicInfo/")
		(prefix "${FRONT_USER_HOME}"))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE))
	(require-all
		(prefix "${HOME}/XcodeBuiltProducts")
		(debug-mode))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_log" #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.+log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.*log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.*log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.*log")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Library/ConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/mobile/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/CloudConfigurationDetails.plist$")
		(prefix "${FRONT_USER_HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com\.apple\.cloudd" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com\.apple\.cloudd" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.cloudd" #"^/private/var/[-0-9A-F]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.cloudd" #"^/private/var/Users/[^/]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.cloudd")
		(prefix "${FRONT_USER_HOME}"))
	(require-all
		(require-any
			(require-all
				(prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
			(require-all
				(prefix "${HOME}/Library/AddressBook"))
				(extension "com.apple.tcc.kTCCServiceAddressBook"))))
(allow file-read-metadata
	(prefix "${HOME}/Library/Caches/powerlog.launchd")
	(prefix "${HOME}")
	(prefix "${HOME}/Library/Preferences")
	(vnode-type DIRECTORY)
	(vnode-type SYMLINK)
	(literal "/AppleInternal")
	(literal "/Library")
	(literal "/Library/Security/Trust Settings/Admin.plist")
	(literal "/private/var/run/systemkeychaincheck.done")
	(literal "/Library/Logs")
	(literal "/private/tmp")
	(regex #"^/var$" #"^/private/var$")
	(regex #"^/var/tmp$" #"^/private/var/tmp$")
	(prefix "${HOME}/Library")
	(prefix "${HOME}/Library/Caches")
	(literal "/Library/Keychains")
	(prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
	(prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal "/private/var/run/syslog")
	(literal "/etc")
	(literal "/tmp")
	(literal "/private/etc/localtime")
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
			(prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(require-any
			(require-all
				(prefix "${HOME}/Library/Preferences"))
			(require-all
				(prefix "${HOME}"))
				(require-entitlement "com.apple.bulletinboard.dataprovider"))))
(allow file-write*
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(prefix "${HOME}/Library/Caches")
	(prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
	(mount-relative-regex #"^/\.TemporaryItems$" #"^/\.TemporaryItems/")
	(literal "/private/var/logs/Ubiquity")
	(prefix "${HOME}/Library/Logs/Ubiquity")
	(prefix "${HOME}/Library/Logs/ProtectedCloudStorage.log")
	(prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
	(prefix "${HOME}/Library/Logs/awd")
	(regex #"^/private/var/tmp/CKTraffic$" #"^/private/var/tmp/CKTraffic[^/]+$")
	(literal "/")
	(regex #"^/var/tmp$" #"^/var/tmp/" #"^/private/var/tmp$" #"^/private/var/tmp/")
	(prefix "${HOME}/Library/Caches/CloudKit")
	(prefix "${HOME}/Library/Caches/com.apple.cloudd")
	(regex #"^/Library/Keychains/System.keychain")
	(prefix "${HOME}/Library/Keychains")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.plist")
	(prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
	(prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
	(prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.PeoplePicker.plist")
	(prefix "${HOME}/Media/com.apple.itunes.lock_sync")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_log" #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.+log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.*log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.*log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/CFNetwork_com\.apple\.cloudd_.*log")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/CloudKit")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/CloudKit")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com\.apple\.cloudd" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com\.apple\.cloudd" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.cloudd" #"^/private/var/[-0-9A-F]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.cloudd" #"^/private/var/Users/[^/]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.cloudd")
		(prefix "${FRONT_USER_HOME}"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-all
				(require-any
					(require-all
						(require-entitlement "com.apple.security.system-groups"))
					(require-all
						(require-entitlement "com.apple.security.system-group-containers")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))))
	(require-all
		(require-not (vnode-type BLOCK-DEVICE))
		(require-not (vnode-type CHARACTER-DEVICE))
		(require-any
			(require-all
				(prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal")
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(regex #"^/cores/")
				(require-not (file-mode #o0000)))))
	(require-all
		(require-any
			(require-all
				(prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
			(require-all
				(prefix "${HOME}/Library/AddressBook"))
				(extension "com.apple.tcc.kTCCServiceAddressBook"))))
(allow file-write-create
	(prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_com.apple.cloudd")
	(require-all
		(require-not (prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
					(prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(require-not (literal "/dev/random"))
		(require-not (literal "/dev/urandom"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/null")
			(literal "/dev/zero")
			(require-all
				(prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
				(require-entitlement "com.apple.coreduetd.people")))))
(allow file-write-mode
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-write-xattr
	(mount-relative-regex #"^/\.DocumentRevisions-V100$" #"^/\.DocumentRevisions-V100/")
	(mount-relative-regex #"^/\.DocumentRevisions-V100-bad-[0-9]+$" #"^/\.DocumentRevisions-V100-bad-[0-9]+/"))
(allow iokit-open
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "AppleMobileFileIntegrityUserClient"))
(allow iokit-get-properties)
(allow ipc-posix-shm-read-data
	(ipc-posix-name "com.apple.AppleDatabaseChanged")
	(ipc-posix-name-regex #"^/tmp/com\.apple\.csseed\.[0-9]+$")
	(ipc-posix-name "FNetwork.defaultStorageSession"))
(allow ipc-posix-shm-write-data
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.hangtracerd")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.AssetCacheLocatorService")
	(global-name "com.apple.CoreServices.coreservicesd")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.SecurityServer")
	(global-name "com.apple.coreservices.quarantine-resolver")
	(global-name "com.apple.ocspd")
	(global-name "com.apple.windowserver.active")
	(global-name "com.apple.awdd")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.cookied")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.datamigrator")
	(global-name "com.apple.apsd")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.CoreAuthentication.daemon.libxpc")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.assertiond.processassertionconnection")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.lsd.icons")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.lsd")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.cfprefsd.daemon")
	(global-name "com.apple.cfprefsd.agent")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.tccd")
	(global-name "com.apple.appsupport.cplogd")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.xpcd")
	(global-name "com.apple.system.DirectoryService.libinfo_v1")
	(global-name "com.apple.ReportCrash.SimulateCrash")
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "platform-application")
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "platform-application")
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-entitlement "com.apple.networkd_privileged"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people")))
(allow network-outbound
	(require-all
		(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$"))
		(require-any
			(remote tcp "*:*")
			(literal "/private/var/run/mDNSResponder")
			(control-name "com.apple.network.statistics")
			(control-name "com.apple.netsrc")
			(literal "/private/var/run/syslog")
			(literal "/private/var/run/asl_input"))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(extension "com.apple.security.exception.shared-preference.read-write")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.cloudd")
	(preference-domain "com.apple.CloudKit.BehaviorOptions")
	(preference-domain "com.apple.migration")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.PeoplePicker")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.cloudd")
	(preference-domain "com.apple.CloudKit.BehaviorOptions")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.PeoplePicker"))
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow sysctl-read)
(allow system-privilege)
