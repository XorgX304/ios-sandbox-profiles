(version 1)
(deny default)
(allow file-issue-extension
	(extension-class "com.apple.quicklook.readonly")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(prefix "${HOME}/Media/Purchases")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Podcasts")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Books")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(require-any
			(require-all
				(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(require-all
				(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(prefix "${HOME}/Media/DCIM")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(prefix "${HOME}/Library/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-only")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-only")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))))
	(require-all
		(prefix "${HOME}/Library/Mail")
		(extension-class "com.apple.mediaserverd.read")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(prefix "${HOME}/Library/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(prefix "${HOME}/Library/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(prefix "${HOME}/Library/ReplayKit")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ReplayKit.RPVideoEditorExtension")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(prefix "${HOME}/Library/OnDemandResources/AssetPacks")
				(extension "com.apple.odr-assets"))
			(require-all
				(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
				(extension "com.apple.odr-assets"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(prefix "${HOME}/Library/OnDemandResources/AssetPacks")
				(extension "com.apple.odr-assets"))
			(require-all
				(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
				(extension "com.apple.odr-assets"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(prefix "${HOME}/Library/Assets")
		(extension "com.apple.assets.read")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(subpath "/private/var/MobileAsset")
		(extension "com.apple.assets.read")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(prefix "${HOME}/Library/Mobile Documents")
		(extension "com.apple.librarian.ubiquity-container")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-only")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-only")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))))
	(require-all
		(prefix "${HOME}/Media")
		(extension "com.apple.avasset.read-only")
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(prefix "${HOME}/Library/Mobile Documents")
		(extension "com.apple.librarian.ubiquity-container")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/Library/Caches$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(extension "com.apple.sandbox.container")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$")
				(prefix "${HOME}"))
			(require-all
				(extension "com.apple.sandbox.container")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$")
				(prefix "${HOME}"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library"))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
		(require-any
			(require-entitlement "com.apple.container2")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.itunesu")
					(entitlement-value "com.apple.iBooks")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
		(require-any
			(require-entitlement "com.apple.container2")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.itunesu")
					(entitlement-value "com.apple.iBooks"))))))
(allow file-map-executable)
(allow file-read*
	(prefix "${HOME}/Library/Carrier Bundles/Overlay")
	(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
	(prefix "${HOME}/Library/Preferences/com.apple.carrier.plist")
	(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
	(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
	(subpath "/Developer")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(extension "com.apple.sandbox.executable")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(subpath "/private/var/db/timezone")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
		(prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
		(prefix "${HOME}"))
	(require-all
		(prefix "${HOME}/Library/Carrier Bundles")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))
			(require-entitlement "com.apple.security.exception.carrier-bundle.read")))
	(require-all
		(prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
		(extension "com.apple.librarian.ubiquity-revision"))
	(require-all
		(prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
		(vnode-type REGULAR-FILE)
		(extension "com.apple.clouddocs.version"))
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(subpath "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(subpath "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+$")
		(prefix "${HOME}"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/StoreKit$")
		(prefix "${HOME}"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesArtwork$")
		(prefix "${HOME}"))
	(require-all
		(prefix "${HOME}/XcodeBuiltProducts")
		(debug-mode))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "platform-application"))
	(require-all
		(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
		(require-entitlement "platform-application"))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(prefix "${HOME}/Media/Purchases")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/Ringtones")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(prefix "${HOME}/Media/Purchases")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/Ringtones")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/LockVideo.mov")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/HomeVideo.mov")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/OriginalLockVideo.mov")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/OriginalHomeVideo.mov")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/LockBackground.cpbitmap")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/SpringBoard/HomeBackground.cpbitmap")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Purchases")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Podcasts")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Books")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(regex #"^/private/var/mobile/Library/ConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/mobile/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/CloudConfigurationDetails.plist$" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/CloudConfigurationDetails.plist$")
		(prefix "${FRONT_USER_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.Maps")
				(entitlement-value "com.apple.SafariViewService")
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.Maps")
				(entitlement-value "com.apple.SafariViewService")
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(prefix "${HOME}/Library/WebClips")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(prefix "${HOME}/Media/DCIM")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(prefix "${HOME}/Media/Safari")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(prefix "${HOME}/Library/Safari")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper")
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Notes")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Media")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com\.apple\.mobilemail" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com\.apple\.mobilemail" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.mobilemail" #"^/private/var/[-0-9A-F]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.mobilemail" #"^/private/var/Users/[^/]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.mobilemail")
		(prefix "${FRONT_USER_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Caches/DataAccess")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(subpath "/Library/Application Support/Mail/Plugins")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/ConfigurationProfiles$" #"^/private/var/mobile/Library/ConfigurationProfiles/" #"^/private/var/mobile/Library/UserConfigurationProfiles$" #"^/private/var/mobile/Library/UserConfigurationProfiles/" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles$" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles$" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/")
		(prefix "${FRONT_USER_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Logs/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/DataAccess")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Calendar")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${HOME}/Library/SMS")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/GeoJSON")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-wal")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-shm")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-journal")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.apsalerts.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.apsalerts.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.apsalerts.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.apsalerts.plist"))
		(require-any
			(prefix "${HOME}/Media/com.apple.itunes.lock_sync")
			(prefix "${HOME}/Media/iTunes_Control/Artwork")
			(prefix "${HOME}/Media/iTunes_Control/iTunes")
			(subpath "/AppleInternal")
			(subpath "/Applications")
			(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
			(prefix "${HOME}/Library/Carrier Bundles/Overlay")
			(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
			(prefix "${HOME}/Library/Preferences/com.apple.carrier.plist")
			(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
				(prefix "${HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
				(prefix "${HOME}"))
			(require-all
				(prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
				(extension "com.apple.tcc.kTCCServiceAddressBook"))
			(require-all
				(prefix "${HOME}/Library/AddressBook")
				(extension "com.apple.tcc.kTCCServiceAddressBook"))
			(require-all
				(extension "com.apple.sandbox.application-group")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
				(prefix "${HOME}"))
			(require-all
				(extension "com.apple.sandbox.application-group")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+$")
				(prefix "${HOME}"))
			(require-all
				(require-not (prefix "${HOME}/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
					(prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
					(subpath "/private/var/containers/Data/System/com.apple.geod")
					(prefix "${HOME}/Library/Caches/DateFormats.plist")
					(subpath "/Library/Dictionaries")
					(prefix "${HOME}/Library/Dictionaries")
					(literal "/private/var/preferences/com.apple.security.plist")
					(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
					(prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
					(prefix "${HOME}/Library/Caches/com.apple.IconsCache")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.sinaweibo.plist")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.twitter.plist")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.facebook.plist")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.linkedin.plist")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")
					(prefix "${HOME}/Library/Fonts")
					(extension "com.apple.app-sandbox.read-write")
					(extension "com.apple.app-sandbox.read")
					(literal "/com.apple.xpc.launchd.bootstrap.plist")
					(prefix "${HOME}/Library/Caches/com.apple.keyboards")
					(prefix "${HOME}/Library/Keyboard/LocalDictionary")
					(prefix "${HOME}/Library/VoiceServices/Assets")
					(prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice")
					(prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
					(prefix "${HOME}/Media/com.apple.itunes.lock_sync")
					(prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
					(subpath "/Library/Ringtones")
					(prefix "${HOME}/Library/Caches/Checkpoint.plist")
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
						(prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
						(prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$")
						(prefix "${HOME}"))
					(require-all
						(prefix "${HOME}/Library/OnDemandResources/AssetPacks")
						(extension "com.apple.odr-assets"))
					(require-all
						(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
						(extension "com.apple.odr-assets"))
					(require-all
						(prefix "${HOME}/Library/Assets")
						(extension "com.apple.assets.read"))
					(require-all
						(subpath "/private/var/MobileAsset")
						(extension "com.apple.assets.read"))
					(require-all
						(prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
						(extension "com.apple.librarian.ubiquity-revision"))
					(require-all
						(prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(extension "com.apple.librarian.ubiquity-container")
							(require-entitlement "com.apple.private.librarian.container-proxy")))
					(require-all
						(prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE)
						(extension "com.apple.clouddocs.version"))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath "/private/var/.DocumentRevisions-V100/staging")
						(extension "com.apple.revisiond.staging"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath "/private/var/.DocumentRevisions-V100/staging")
						(extension "com.apple.revisiond.staging"))
					(require-all
						(vnode-type SYMLINK)
						(subpath "/private/var/.DocumentRevisions-V100/staging")
						(extension "com.apple.revisiond.staging"))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath "/private/var/.DocumentRevisions-V100/PerUID")
						(extension "com.apple.revisiond.revision"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath "/private/var/.DocumentRevisions-V100/PerUID")
						(extension "com.apple.revisiond.revision"))
					(require-all
						(vnode-type SYMLINK)
						(subpath "/private/var/.DocumentRevisions-V100/PerUID")
						(extension "com.apple.revisiond.revision"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$")
						(prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media")
						(extension "com.apple.avasset.read-only")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/syncInfo.plist")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Thumbnails")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Sync/FaceAlbumThumbnails")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Metadata")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Photos.sqlite-wal")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Photos.sqlite-shm")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Photos.sqlite-journal")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(prefix "${HOME}/Media/PhotoData/Photos.sqlite")
						(extension "com.apple.tcc.kTCCServicePhotos"))
					(require-all
						(require-not (prefix "${HOME}/Library/FairPlay"))
						(require-not (literal "/usr/sbin/fairplayd"))
						(require-not (prefix "${HOME}/Media"))
						(require-any
							(literal "/dev/ptmx")
							(literal "/dev/aes_0")
							(literal "/dev/urandom")
							(literal "/dev/null")
							(literal "/dev/random")
							(literal "/dev/zero")
							(literal "/dev/dtracehelper")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
							(prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.MobileGestalt.plist")
							(require-all
								(extension "com.apple.sandbox.system-container")
								(require-entitlement "com.apple.security.system-container"))
							(require-all
								(extension "com.apple.sandbox.system-container")
								(require-entitlement "com.apple.security.system-container"))
							(require-all
								(extension "com.apple.sandbox.system-group")
								(require-any
									(require-entitlement "com.apple.security.system-groups")
									(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
									(require-entitlement "com.apple.security.system-group-containers")
									(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
							(require-all
								(extension "com.apple.sandbox.system-group")
								(require-any
									(require-entitlement "com.apple.security.system-groups")
									(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
									(require-entitlement "com.apple.security.system-group-containers")
									(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
							(require-all
								(regex #"^/private/var/mobile/Library/ConfigurationProfiles/PublicInfo$" #"^/private/var/mobile/Library/ConfigurationProfiles/PublicInfo/" #"^/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo$" #"^/private/var/mobile/Library/UserConfigurationProfiles/PublicInfo/" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/euser[0-9]+/Library/(User)?ConfigurationProfiles/PublicInfo/" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/[-0-9A-F]+/Library/(User)?ConfigurationProfiles/PublicInfo/" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/PublicInfo$" #"^/private/var/Users/[^/]+/Library/(User)?ConfigurationProfiles/PublicInfo/")
								(prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/Managed Preferences/mobile/com\.apple\..+\.plist$")
								(require-entitlement "com.apple.bulletinboard.dataprovider"))
							(require-all
								(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
								(extension "com.apple.sandbox.pty"))
							(require-all
								(vnode-type TTY)
								(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE)
								(require-any
									(literal "/private/etc/group")
									(literal "/private/etc/passwd")
									(literal "/private/etc/protocols")
									(literal "/private/etc/services")
									(literal "/")
									(literal "/private/etc/hosts")
									(require-all
										(prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
										(require-entitlement "com.apple.coreduetd.people"))
									(require-all
										(prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")
										(require-entitlement "com.apple.coreduetd.people"))
									(require-all
										(prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal")
										(require-entitlement "com.apple.coreduetd.people"))
									(require-all
										(prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
										(require-entitlement "com.apple.coreduetd.people"))
									(require-all
										(prefix "${HOME}/Library/CoreDuet/People")
										(require-entitlement "com.apple.coreduetd.people")))))))))))
(allow file-read-data
	(require-all
		(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")
		(prefix "${FRONT_USER_HOME}")))
(allow file-read-metadata
	(prefix "${HOME}/Library/Carrier Bundles")
	(prefix "${HOME}/Library")
	(prefix "${HOME}/Library/Mobile Documents")
	(prefix "${HOME}")
	(prefix "${HOME}/Library/Preferences")
	(prefix "${HOME}/Library/DeviceRegistry")
	(prefix "${HOME}/Library/Caches/powerlog.launchd")
	(vnode-type DIRECTORY)
	(vnode-type SYMLINK)
	(literal "/private/var")
	(prefix "${HOME}/Library/GameKit/Data")
	(literal "/private/var/run/printd")
	(prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")
	(prefix "${HOME}/Library/PPTDevice")
	(prefix "${HOME}/Media")
	(literal "/private/var/run/syslog")
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesMetadata\.plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesMetadata\.plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesMetadata\.plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/iTunesMetadata\.plist$")
		(prefix "${HOME}"))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(prefix "${HOME}/Library/DeviceRegistry")
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(prefix "${HOME}"))))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(prefix "${HOME}"))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "platform-application"))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "platform-application"))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(prefix "${HOME}")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Caches/sharedCaches")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Caches/sharedCaches")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(prefix "${HOME}/Library/com.apple.iTunesStore")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any
							(entitlement-value "com.apple.iBooks")
							(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any
							(entitlement-value "com.apple.iBooks")
							(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))))
	(require-all
		(prefix "${HOME}/Library/com.apple.iTunesStore")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Caches")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Caches")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Caches/com.apple.storeservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(prefix "${HOME}")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(prefix "${HOME}/Media/PhotoData/Thumbnails")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(prefix "${HOME}/Media/PhotoData")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(prefix "${HOME}")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow file-write*
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.PeoplePicker.plist")
	(prefix "${HOME}/Media/com.apple.itunes.lock_sync")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(subpath "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.springboard.plist")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(prefix "${HOME}/Media/Purchases")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/Ringtones")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.itunesstored.plist")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Books")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.cloud.quota.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Media/iTunes_Control/iTunes")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.mobileipod.plist")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.itunesstored.plist")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(vnode-type DIRECTORY)
		(prefix "${HOME}/Library/Cookies")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/WebClips")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.youtube.dp.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(prefix "${HOME}/Library/Cookies")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(prefix "${HOME}/Library/Safari")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper")
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Notes")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com\.apple\.mobilemail" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com\.apple\.mobilemail" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.mobilemail" #"^/private/var/[-0-9A-F]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.mobilemail" #"^/private/var/Users/[^/]+/Library/Logs/(CrashReporter/)?PersistentConnection/com\.apple\.mobilemail")
		(prefix "${FRONT_USER_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Logs/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/DataAccess")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Calendar")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Mail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.OTASyncState.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.OTASyncAgent.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.MailAccount-ExtProperties.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.mail.composition.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.cloud.quota.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.internal.Voltaire.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.assistant.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.skyhookwireless.wps.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.NanoMailKit.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.GMM.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${HOME}/Library/SMS")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/GeoJSON")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-journal")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")
		(prefix "${HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")))
	(require-all
		(prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
		(extension "com.apple.tcc.kTCCServiceAddressBook"))
	(require-all
		(prefix "${HOME}/Library/AddressBook")
		(extension "com.apple.tcc.kTCCServiceAddressBook"))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}"))
	(require-all
		(require-not (prefix "${HOME}/Library/Preferences/com.apple.springboard.plist"))
		(require-not (prefix "${HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-not (prefix "${HOME}/Library/Caches/DateFormats.plist"))
		(require-any
			(prefix "${HOME}/Media/com.apple.itunes.lock_sync")
			(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.EmojiPreferences.plist")
			(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.Preferences.plist")
			(extension "com.apple.app-sandbox.read-write")
			(prefix "${HOME}/Library/Caches/com.apple.keyboards")
			(prefix "${HOME}/Library/Keyboard/LocalDictionary")
			(prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.mediaaccessibility.public.plist")
			(require-all
				(prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension "com.apple.librarian.ubiquity-container")
					(require-entitlement "com.apple.private.librarian.container-proxy")))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath "/private/var/.DocumentRevisions-V100/staging")
				(extension "com.apple.revisiond.staging"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath "/private/var/.DocumentRevisions-V100/staging")
				(extension "com.apple.revisiond.staging"))
			(require-all
				(vnode-type SYMLINK)
				(subpath "/private/var/.DocumentRevisions-V100/staging")
				(extension "com.apple.revisiond.staging"))
			(require-all
				(prefix "${HOME}/Media")
				(require-any
					(require-all
						(extension "com.apple.sandbox.system-container")
						(require-entitlement "com.apple.security.system-container"))
					(require-all
						(extension "com.apple.sandbox.system-group")
						(require-any
							(require-entitlement "com.apple.security.system-groups")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
							(require-entitlement "com.apple.security.system-group-containers")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
					(require-all
						(vnode-type BLOCK-DEVICE)
						(vnode-type CHARACTER-DEVICE)
						(prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal")
						(require-entitlement "com.apple.coreduetd.people"))))))
	(require-all
		(prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy"))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(prefix "${HOME}/Library/DeviceRegistry")
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(prefix "${HOME}"))))
	(require-all
		(require-not (prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(prefix "${HOME}/Library/Caches/sharedCaches")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any
							(entitlement-value "com.apple.iBooks")
							(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(vnode-type DIRECTORY)
				(prefix "${HOME}/Library/Caches/sharedCaches")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(prefix "${HOME}/Library/com.apple.iTunesStore")
						(require-any
							(require-entitlement "com.apple.private.signing-identifier"
								(entitlement-value "com.apple.mobilesafari"))
							(require-entitlement "com.apple.private.signing-identifier"
								(require-any
									(entitlement-value "com.apple.iBooks")
									(entitlement-value "com.apple.itunesu")))
							(require-entitlement "com.apple.container2")))
					(require-all
						(prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage")
						(require-any
							(require-entitlement "com.apple.private.signing-identifier"
								(entitlement-value "com.apple.mobilesafari"))
							(require-entitlement "com.apple.private.signing-identifier"
								(require-any
									(entitlement-value "com.apple.iBooks")
									(entitlement-value "com.apple.itunesu")))
							(require-entitlement "com.apple.container2")))))
			(require-all
				(vnode-type DIRECTORY)
				(prefix "${HOME}/Library/Caches")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilemail")
						(entitlement-value "com.apple.mobilenotes"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
						(require-entitlement "com.apple.private.signing-identifier"
							(entitlement-value "com.apple.mobilemail")))
					(require-all
						(prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
						(require-entitlement "com.apple.private.signing-identifier"
							(entitlement-value "com.apple.mobilemail")))))
			(require-all
				(prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(vnode-type DIRECTORY)
				(prefix "${HOME}/Library/Caches/com.apple.storeservices")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.ios.StoreKitUIService")))
			(require-all
				(vnode-type DIRECTORY)
				(prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
			(require-all
				(require-not (prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist"))
				(require-not (prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist"))
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(prefix "${HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")
		(prefix "${FRONT_USER_HOME}"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(require-not (literal "/dev/random"))
		(require-not (literal "/dev/urandom"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/null")
			(literal "/dev/zero")
			(require-all
				(prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
				(require-entitlement "com.apple.coreduetd.people")))))
(allow file-write-mode
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/Inbox$")
		(prefix "${HOME}"))
	(require-all
		(prefix "${HOME}/Media/Purchases")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Media/Podcasts")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-open
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "IOHIDLibUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOAccelContext")
	(iokit-user-client-class "IOAccelDevice")
	(iokit-user-client-class "IOAccelSharedUserClient")
	(iokit-user-client-class "IOAccelSubmitter2")
	(iokit-user-client-class "IOAccelContext2")
	(iokit-user-client-class "IOAccelDevice2")
	(iokit-user-client-class "IOAccelSharedUserClient2")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "IOSurfaceSendRight")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(require-all
		(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(iokit-user-client-class "RootDomainUserClient")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail"))))
(allow iokit-get-properties
	(iokit-property "compass-calibration")
	(iokit-property "gyro-interrupt-calibration")
	(require-not (iokit-property-regex #"-mac-address" #"mac-address-" #".+-mac-address" #".+mac-address-"))
	(require-entitlement "com.apple.wifi.manager-access")
	(require-entitlement "fairplay-client")
	(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
	(require-entitlement "com.apple.system.get-hardware-identifiers"))
(allow ipc-posix-sem
	(extension "com.apple.sandbox.application-group")
	(semaphore-owner self))
(allow ipc-posix-shm*
	(ipc-posix-name-regex #"^stack-logs")
	(ipc-posix-name-regex #"^OA-")
	(ipc-posix-name-regex #"^/FSM-")
	(extension "com.apple.sandbox.application-group"))
(allow ipc-posix-shm-read*
	(ipc-posix-name-regex #"^Apple MIDI in [0-9]+$" #"^Apple MIDI out [0-9]+$")
	(ipc-posix-name "apple.shm.notification_center")
	(ipc-posix-name-regex #"^apple\.shm\.cfprefsd\.")
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(require-all
		(ipc-posix-name-regex #"^AppleABL\.." #"^AppleABL\..+")
		(require-entitlement "inter-app-audio")))
(allow ipc-posix-shm-write-create
	(ipc-posix-name-regex #"^/mono\.[0-9]+$"))
(allow ipc-posix-shm-write-data
	(ipc-posix-name-regex #"^Apple MIDI in [0-9]+$" #"^Apple MIDI out [0-9]+$")
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(require-all
		(ipc-posix-name-regex #"^AppleABL\.." #"^AppleABL\..+")
		(require-entitlement "inter-app-audio")))
(allow ipc-posix-shm-write-unlink
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$"))
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.fig.movie")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.asset")
	(global-name "com.apple.coremedia.assetimagegenerator")
	(global-name "com.apple.coremedia.capturesession")
	(global-name "com.apple.coremedia.capturesource")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.recorder")
	(global-name "com.apple.coremedia.remaker")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.FileProvider")
	(global-name "com.apple.bird")
	(global-name "com.apple.bird.token")
	(global-name "com.apple.librariand")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.hangtracerd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.cookied")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(global-name "PurplePPTServer")
	(global-name "PurpleSystemAppPort")
	(global-name "PurpleSystemEventPort")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.AdSheetPad.server")
	(global-name "com.apple.AdSheetPhone.server")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.FSEvents")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.GameController.gamecontrollerd")
	(global-name "com.apple.MediaControl.daemon")
	(global-name "com.apple.MobileAccessoryUpdater")
	(global-name "com.apple.MobileFileIntegrity")
	(global-name "com.apple.MobileInternetSharing")
	(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
	(global-name "com.apple.Music.MPMusicPlayerMigServer")
	(global-name "com.apple.Music.MPMusicPlayerMigServerExists")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.ReportCrash")
	(global-name "com.apple.ReportCrash.DirectoryService")
	(global-name "com.apple.ReportCrash.Jetsam")
	(global-name "com.apple.ReportCrash.SafetyNet")
	(global-name "com.apple.ReportCrash.StackShot")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.VoiceOverTouch")
	(global-name "com.apple.VoiceOverTouch.xpc")
	(global-name "com.apple.WebBookmarks.webbookmarksd")
	(global-name "com.apple.accountsd.accessmanager")
	(global-name "com.apple.accountsd.authmanager")
	(global-name "com.apple.accountsd.oauthsigner")
	(global-name "com.apple.airplay.sender.xpc")
	(global-name "com.apple.ait.client")
	(global-name "com.apple.appleprofilepolicyd")
	(global-name "com.apple.apsd")
	(global-name "com.apple.assertiond.extension")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.assetsd.keepDaemonAlive")
	(global-name "com.apple.assetsd.messagingServer")
	(global-name "com.apple.assetsd.notificationServer")
	(global-name "com.apple.atc")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.audio.AudioConverterServer")
	(global-name "com.apple.audio.AudioFileServer")
	(global-name "com.apple.audio.AudioUnitServer")
	(global-name "com.apple.awdd")
	(global-name "com.apple.backboard.checkin")
	(global-name "com.apple.backboard.watchdog")
	(global-name "com.apple.backboard.workspaceserverconnection")
	(global-name "com.apple.bypassBasebandAutoBooter.msgport")
	(global-name "com.apple.calaccessd")
	(global-name "com.apple.calaccessd.xpc")
	(global-name "com.apple.certui.relay")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.clouddbd")
	(global-name "com.apple.commcenter.dm-helper")
	(global-name "com.apple.commcenter.mobile-helper")
	(global-name "com.apple.coremedia.audiodeviceclock")
	(global-name "com.apple.coremedia.audioprocessingtap")
	(global-name "com.apple.coremedia.compressionsession")
	(global-name "com.apple.coremedia.cpe")
	(global-name "com.apple.coremedia.cpeprotector")
	(global-name "com.apple.coremedia.decompressionsession")
	(global-name "com.apple.coremedia.formatreader")
	(global-name "com.apple.coremedia.mutablecomposition")
	(global-name "com.apple.coremedia.videoqueue")
	(global-name "com.apple.coremedia.wirelessdisplay")
	(global-name "com.apple.coremedia.wirelessdisplayserver")
	(global-name "com.apple.corerecents.recentsd")
	(global-name "com.apple.coreservices.appleid.authentication")
	(global-name "com.apple.coresymbolicationd")
	(global-name "com.apple.cvmsCompAgent_armv7")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.dataaccess.dataaccessd")
	(global-name "com.apple.dataaccess.dataaccessd.active")
	(global-name "com.apple.datamigrator.dz")
	(global-name "com.apple.distributed_notifications@0v3")
	(global-name "com.apple.gamecenter")
	(global-name "com.apple.gamed")
	(global-name "com.apple.gamed.note")
	(global-name "com.apple.gizmoappd")
	(global-name "com.apple.healthd.restriction")
	(global-name "com.apple.healthd.server")
	(global-name "com.apple.homed.xpc")
	(global-name "com.apple.iTunesStore.daemon.notifications.public")
	(global-name "com.apple.iTunesStore.daemon.public")
	(global-name "com.apple.iap2d")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iap2d.distributednotification.server")
	(global-name "com.apple.iap2d.xpc")
	(global-name "com.apple.iapauthd")
	(global-name "com.apple.iapauthd.xpc")
	(global-name "com.apple.iapd")
	(global-name "com.apple.iapd.distributednotification.server")
	(global-name "com.apple.iapd.xpc")
	(global-name "com.apple.iaptransportd")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iaptransportd.xpc")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.imavagent.embedded.auth")
	(global-name "com.apple.instruments.server.mig")
	(global-name "com.apple.itdbprep.server")
	(global-name "com.apple.mDNSResponder")
	(global-name "com.apple.mDNSResponderHelper")
	(global-name "com.apple.managedconfiguration.mdmdpush-dev")
	(global-name "com.apple.managedconfiguration.mdmdpush-prod")
	(global-name "com.apple.managedconfiguration.mdmdservice")
	(global-name "com.apple.medialibraryd.xpc")
	(global-name "com.apple.mediastream.sharing")
	(global-name "com.apple.mediastream.sharing-nowake")
	(global-name "com.apple.midiserver")
	(global-name "com.apple.midiserver.io")
	(global-name "com.apple.mobile.installd")
	(global-name "com.apple.mobile.softwareupdated")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.mobileipod.MPMusicPlayerControllerInternal")
	(global-name "com.apple.mobileipod.MPMusicPlayerMigServer")
	(global-name "com.apple.mobileipod.MPMusicPlayerMigServerExists")
	(global-name "com.apple.mobilemail.services.xpc")
	(global-name "com.apple.networking.captivenetworksupport")
	(global-name "com.apple.notificationcenter.widgetcontrollerconnection")
	(global-name "com.apple.passd.in-app-payment")
	(global-name "com.apple.passd.assertions")
	(global-name "com.apple.passd.library")
	(global-name "com.apple.prdaily")
	(global-name "com.apple.safarifetcherd")
	(global-name "com.apple.sandboxd")
	(global-name "com.apple.scrod")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(global-name "com.apple.server.bluetooth.le.pipe.xpc")
	(global-name "com.apple.springboard")
	(global-name "com.apple.springboard.UIKit.migserver")
	(global-name "com.apple.springboard.alerts")
	(global-name "com.apple.springboard.blockableservices")
	(global-name "com.apple.springboard.icongeneration")
	(global-name "com.apple.springboard.processinvalidation")
	(global-name "com.apple.springboard.remotenotifications")
	(global-name "com.apple.springboard.watchdogserver")
	(global-name "com.apple.syncdefaultsd")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.voip")
	(global-name "com.apple.telephonyutilities.remotelogdaemon")
	(global-name "com.apple.testmanagerd")
	(global-name "com.apple.twitterd.server")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.videoconference.avconference")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.vsassetd")
	(global-name "com.apple.wapi.client")
	(global-name "com.apple.wcd")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.webfilterd")
	(global-name "com.apple.webinspector")
	(global-name "com.apple.weibod.server")
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.watchconnectivity.complication")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(extension "com.apple.sandbox.application-group")
	(global-name "com.apple.iTunesStore.daemon")
	(global-name "com.apple.iTunesStore.daemon-notifications")
	(global-name "com.apple.iTunesStore.daemon.deatchwatch")
	(global-name "com.apple.geod")
	(global-name "com.apple.nanomaps.xpc.GeoServices")
	(global-name "com.apple.gpumemd.source")
	(global-name "com.apple.marco")
	(global-name "com.apple.sharingd")
	(global-name "com.apple.sharingd.nsxpc")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.usernotification.notificationregistrar")
	(global-name "com.apple.usernotification.notificationscheduler")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.UIKit.statusbarserver")
	(global-name "com.apple.uikit.GestureServer")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.assertiond.expiration")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.backboard.TouchDeliveryPolicyServer")
	(global-name "com.apple.backboard.animation-fence-arbiter")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.iphone.axserver-systemwide")
	(global-name "com.apple.frontboard.workspace")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.UIKit.pasteboardd")
	(global-name "com.apple.assistant.dictation")
	(global-name "com.apple.dictationd.recognition")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.airplaydiagnostics.server")
	(global-name "com.apple.ondemandd.client")
	(local-name-regex #"^com\.apple\.assistant\.contextprovider\.")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.voiceservices.keepalive")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.accessibility.AXBackBoardServer")
	(global-name "UIASTNotificationCenter")
	(global-name "com.apple.accessibility.gax.backboard")
	(global-name "com.apple.TextInput")
	(global-name "com.apple.TextInput.lexicon-server")
	(global-name "com.apple.TextInput.rdt")
	(global-name "com.apple.TextInput.shortcuts")
	(global-name "ScripterServer")
	(global-name "com.apple.UIKit.KeyboardManagement")
	(global-name "com.apple.UIKit.KeyboardManagement.hosted")
	(global-name-regex #"^com\.apple\.uikit\.viewservice\..+")
	(global-name "com.apple.NPKCompanionAgent.library")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.MediaRemote.daemon")
	(global-name "com.apple.MediaRemote.isrunning")
	(global-name "com.apple.MediaRemote.nowplayingserver")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.CoreAuthentication.daemon.libxpc")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.assertiond.processassertionconnection")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.lsd.icons")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.lsd")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.cfprefsd.daemon")
	(global-name "com.apple.cfprefsd.agent")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.tccd")
	(global-name "com.apple.appsupport.cplogd")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.xpcd")
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "platform-application")
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "platform-application")
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-entitlement "com.apple.networkd_privileged"))
	(require-all
		(global-name "com.apple.replayd")
		(require-not (process-attribute is-plugin)))
	(require-all
		(global-name "com.apple.biometrickitd")
		(require-entitlement "com.apple.private.bmk.allow"))
	(require-all
		(global-name "com.apple.bulletinboard.utilitiesconnection")
		(require-entitlement "com.apple.bulletinboard.utilities"))
	(require-all
		(global-name "com.apple.bulletinboard.systemstateconnection")
		(require-entitlement "com.apple.bulletinboard.systemstate"))
	(require-all
		(global-name "com.apple.bulletinboard.settingsconnection")
		(require-entitlement "com.apple.bulletinboard.settings"))
	(require-all
		(global-name "com.apple.bulletinboard.observerconnection")
		(require-entitlement "com.apple.bulletinboard.observer"))
	(require-all
		(local-name "com.apple.iphone.axserver")
		(require-entitlement "com.apple.accessibility.api"))
	(require-all
		(global-name "com.apple.icfcallserver")
		(require-entitlement "com.apple.private.icfcallserver"))
	(require-all
		(global-name "com.apple.adid")
		(require-entitlement "adi-client"
			(entitlement-value-regex #".+")))
	(require-all
		(global-name "com.apple.absd")
		(require-entitlement "abs-client"
			(entitlement-value-regex #".+")))
	(require-all
		(global-name "com.apple.absinthed")
		(require-entitlement "absinthe-client"
			(entitlement-value-regex #".+")))
	(require-all
		(global-name "com.apple.absd")
		(require-entitlement "absinthe-client"
			(entitlement-value-regex #".+")))
	(require-all
		(global-name "com.apple.managedconfiguration.profiled")
		(require-entitlement "com.apple.managedconfiguration.profiled-access"))
	(require-all
		(global-name "com.apple.unfreed")
		(require-entitlement "platform-application"))
	(require-all
		(global-name "com.apple.lskdd")
		(require-entitlement "platform-application"))
	(require-all
		(global-name "com.apple.coreduetd")
		(require-entitlement "platform-application"))
	(require-all
		(global-name "com.apple.aps.alertprovider.xpc")
		(require-entitlement "platform-application"))
	(require-all
		(global-name "com.apple.mobile.keybagd.xpc")
		(require-entitlement "platform-application"))
	(require-all
		(global-name "com.apple.mobile.keybagd.UserManager.xpc")
		(require-entitlement "platform-application"))
	(require-all
		(global-name "com.apple.SystemConfiguration.PPPController-priv")
		(require-entitlement "com.apple.networking.vpn.configuration"))
	(require-all
		(global-name "com.apple.siri.vocabularyupdates")
		(require-entitlement "com.apple.siri.synapse"))
	(require-all
		(global-name "com.apple.familycircle.agent")
		(require-entitlement "com.apple.private.familycircle"))
	(require-all
		(global-name "com.apple.icloud.findmydeviced")
		(require-any
			(require-entitlement "com.apple.aosnotification.aosnotifyd-access")
			(require-entitlement "com.apple.icloud.findmydeviced.access")))
	(require-all
		(global-name "com.apple.AOSNotification")
		(require-entitlement "com.apple.aosnotification.aosnotifyd-access"))
	(require-all
		(global-name "com.apple.mobilestoredemod")
		(require-entitlement "com.apple.private.mobilestoredemo.enabledemo"))
	(require-all
		(global-name "com.apple.parsec.subscriptionservice.internal")
		(require-entitlement "com.apple.private.subscriptionservice.internal"))
	(require-all
		(global-name "com.apple.parsec.subscriptionservice")
		(require-entitlement "com.apple.smoot.subscriptionservice"))
	(require-all
		(global-name "com.apple.suggestd.suggestionmanager")
		(require-entitlement "com.apple.private.suggestions"))
	(require-all
		(global-name "com.apple.suggestd.spotlight")
		(require-entitlement "com.apple.private.suggestions"))
	(require-all
		(global-name "com.apple.suggestd.mail")
		(require-entitlement "com.apple.private.suggestions"))
	(require-all
		(global-name "com.apple.suggestd.events")
		(require-entitlement "com.apple.private.suggestions"))
	(require-all
		(global-name "com.apple.suggestd.contacts")
		(require-entitlement "com.apple.private.suggestions"))
	(require-all
		(global-name "com.apple.spotlight.SearchAgent")
		(require-entitlement "com.apple.spotlight.search"))
	(require-all
		(global-name "com.apple.cache_delete")
		(require-any
			(require-entitlement "com.apple.mobile.deleted.AllowFreeSpace")
			(require-entitlement "com.apple.private.CacheDelete")))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.allow"))
	(require-all
		(global-name "com.apple.coreduetd")
		(require-entitlement "com.apple.coreduetd.allow"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(global-name "com.apple.itunescloudd.xpc")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(global-name "com.apple.medialibraryd.xpc")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(global-name "com.apple.mobilesafari-settings")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebSheet")))
	(require-all
		(global-name "com.apple.rtcreportingd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(global-name "com.apple.safarifetcherd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(global-name "com.apple.routined.registration")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.itunescloudd.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.springboard.backgroundappservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.audio.AudioSession")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.pegasus")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.videocompositor")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.sandboxserver")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.remaker")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.recorder")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.endpoint.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.capturesource")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.capturesession")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.assetimagegenerator")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.asset")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.admin")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.mediaserverd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.fig.movie")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.harvestd.manager")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.backupd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.mobilemail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.FileCoordination")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.identityservicesd.embedded.auth")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.bulletindistributord.server")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.routined.registration")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.Maps.SpringBoard")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.Maps.mapspushd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.nanomaps.xpc.Maps")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.assistant.analytics")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.mobile.keybagd.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(global-name "com.apple.FileCoordination")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(global-name "com.apple.springboard.statusbarservices")
		(require-entitlement "com.apple.springboard.statusbarstyleoverrides"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.itunescloudd.xpc")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.springboard.backgroundappservices")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.audio.AudioSession")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.pegasus")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.videocompositor")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.sandboxserver")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.remaker")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.recorder")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.endpoint.xpc")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.capturesource")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.capturesession")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.assetimagegenerator")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.asset")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.admin")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.mediaserverd")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.fig.movie")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people")))
(allow mach-register
	(require-all
		(require-not (global-name-regex #"-idswake$" #".+-idswake$"))
		(require-any
			(extension "com.apple.sandbox.application-group")
			(local-name-regex #"^com\.apple\.assistant\.contextprovider\.")
			(local-name "com.apple.iphone.axserver")
			(local-name "com.apple.accessibility.gax.client")
			(require-all
				(global-name "com.apple.Music.MPMusicPlayerMigServerExists")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))))
	(require-all
		(extension "com.apple.security.exception.mach-register.local-name")
		(local-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-register.global-name")
		(global-name-regex #".+")))
(allow network-inbound
	(local ip "*:*")
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
		(prefix "${HOME}"))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
		(prefix "${HOME}")))
(allow network-outbound
	(require-all
		(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$"))
		(require-any
			(require-all
				(extension "com.apple.sandbox.container")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[-0-9A-Z]+/((tmp|Library)|Documents)$")
				(prefix "${HOME}"))
			(require-all
				(literal "/private/var/run/lockdown.sock")
				(require-entitlement "platform-application"))
			(require-all
				(require-not (remote tcp "localhost:22"))
				(require-not (remote tcp "localhost:23"))
				(require-not (remote tcp "localhost:873"))
				(require-not (remote tcp "localhost:62078"))
				(require-any
					(literal "/private/var/run/mDNSResponder")
					(control-name "com.apple.network.statistics")
					(control-name "com.apple.netsrc")
					(remote ip "*:*")
					(literal "/private/var/run/printd")
					(literal "/private/var/run/syslog")
					(require-all
						(extension "com.apple.sandbox.application-group")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[-0-9A-Z]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[-0-9A-Z]+/")
						(prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")
						(prefix "${FRONT_USER_HOME}")))))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.pairedsync")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.AdLib")
	(preference-domain "com.apple.ConfigServer")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.GMM")
	(preference-domain "com.apple.InputModePreferences")
	(preference-domain "com.apple.LaunchServices")
	(preference-domain "com.apple.MapKit.internal")
	(preference-domain "com.apple.MobileAddressBook")
	(preference-domain "com.apple.OTASyncState")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.Preferences")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.VoiceMemos")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.XCTest")
	(preference-domain "com.apple.adtracking")
	(preference-domain "com.apple.aggregated")
	(preference-domain "com.apple.appleaccount")
	(preference-domain "com.apple.apsd")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.atc")
	(preference-domain "com.apple.camera")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.certui")
	(preference-domain "com.apple.compass")
	(preference-domain "com.apple.dataaccess.dataaccessd")
	(preference-domain "com.apple.gamed")
	(preference-domain "com.apple.gamekit")
	(preference-domain "com.apple.imagent")
	(preference-domain "com.apple.imdsmsrecordstore")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.iqagent")
	(preference-domain "com.apple.itdbprep.server")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.madrid")
	(preference-domain "com.apple.managedconfiguration.janitor")
	(preference-domain "com.apple.messagesbadgecontroller")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.mms_override")
	(preference-domain "com.apple.mobile.SyncMigrator")
	(preference-domain "com.apple.mobilecal.alarmengine")
	(preference-domain "com.apple.mobilecal")
	(preference-domain "com.apple.mobileme.fmf.assistant")
	(preference-domain "com.apple.mobilenotes")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.mobilestoresettings")
	(preference-domain "com.apple.mobiletimer")
	(preference-domain "com.apple.mobilevpn")
	(preference-domain "com.apple.network.eapclient.tls.TrustExceptions")
	(preference-domain "com.apple.nike")
	(preference-domain "com.apple.persistentconnection-mcc")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.preferences.datetime")
	(preference-domain "com.apple.preferences.network")
	(preference-domain "com.apple.preferences.sounds")
	(preference-domain "com.apple.preferences-sounds")
	(preference-domain "com.apple.softwareupdateservicesd")
	(preference-domain "com.apple.twitterd")
	(preference-domain "com.apple.ubd")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.voicemail")
	(preference-domain "com.apple.youtubeframework")
	(preference-domain "itdbprepserver")
	(preference-domain "mediaremote")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.mediaaccessibility")
	(preference-domain "com.apple.marco")
	(preference-domain ".GlobalPreferences")
	(preference-domain "com.apple.WebUI")
	(preference-domain "com.apple.coreanimation")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.Sharing")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.mediaaccessibility.public")
	(preference-domain "com.apple.SpeakSelection")
	(preference-domain "com.apple.VoiceOverTouch")
	(preference-domain "com.apple.voiceservices")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.logging")
	(require-all
		(preference-domain "com.apple.demo-settings")
		(require-entitlement "platform-application"))
	(require-all
		(preference-domain "com.apple.DataAccess.BehaviorOptions")
		(require-entitlement "platform-application"))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.AppStore")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(preference-domain "com.apple.MobileStore")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(preference-domain "com.apple.books")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(preference-domain "com.apple.homesharing")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.medialibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(preference-domain "com.apple.WebFoundation")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.coremedia")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.corevideo")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.mail.composition")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.MailAccount-ExtProperties")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.OTASyncAgent")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.OTASyncState")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.nanoprefsyncd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.GMM")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.NanoMailKit")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.skyhookwireless.wps")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.assistant")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.internal.Voltaire")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.weather")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.nanoprefsyncd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.coremedia")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.corevideo")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.Preferences")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.mediaaccessibility.public")
	(require-all
		(preference-domain "com.apple.springboard")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any
					(entitlement-value "com.apple.iBooks")
					(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.mail.composition")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.MailAccount-ExtProperties")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.OTASyncAgent")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.OTASyncState")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.GMM")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.NanoMailKit")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.skyhookwireless.wps")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.assistant")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.internal.Voltaire")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps"))))
(allow process-info-codesignature
	(require-entitlement "platform-application"))
(allow process-info-dirtycontrol
	(target self))
(allow process-info-rusage
	(require-entitlement "com.apple.security.exception.process-info"))
(allow process-info-pidinfo
	(require-entitlement "com.apple.security.exception.process-info")
	(require-all
		(target others)
		(require-entitlement "com.apple.DiagnosticExtensions.extension")))
(allow pseudo-tty)
(allow signal
	(target self)
	(require-all
		(target others)
		(require-entitlement "com.apple.DiagnosticExtensions.extension"))
	(require-all
		(target others)
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.webbookmarksd"))))
(allow sysctl-read
	(require-all
		(sysctl-name-regex #"^kern\.proc\.")
		(require-entitlement "com.apple.security.exception.process-info"))
	(require-all
		(require-not (sysctl-name "kern.proc.pid.1"))
		(require-any
			(require-not (sysctl-name "kern.proc."))
			(require-entitlement "com.apple.DiagnosticExtensions.extension"))))
(allow system-info
	(require-all
		(info-type "net.link.addr")
		(require-entitlement "fairplay-client")
		(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))))
(allow system-privilege)
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2))
	(require-all
		(socket-domain 39)
		(require-any
			(require-entitlement "com.apple.network.multipath-tcp")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.Maps")))))
