(version 1)
(deny default)
(allow file-ioctl
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/aes_0")
			(literal "/dev/ptmx"))))
(allow file-issue-extension
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd$"))
			(require-all
				(extension-class "com.apple.nsurlstorage.extension-cache")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/private/var/mobile/Library/Cookies"))
			(require-all
				(extension "com.apple.sandbox.executable")
				(extension-class "com.apple.nsurlsessiond.readonly"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.sandbox.executable"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices$"))
			(require-all
				(extension-class "com.apple.nsurlstorage.extension-cache")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices$")))))
(allow file-read*
	(literal "/private/var/mobile/Library/Preferences/com.apple.mediaremote.plist")
	(subpath "/private/var/mobile/Library/Assistant")
	(subpath "/private/var/tmp")
	(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]siri[.]")
	(subpath "/private/var/mobile/siri_recordings")
	(subpath "/Library/Audio/Tunings")
	(subpath "/usr/local/lib")
	(subpath "/private/var/Managed Preferences/mobile")
	(literal "/private/var/mobile/Library/Preferences/com.apple.DataMigration.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.avfoundation.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.avfoundation.avvc.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coreaudio.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coremedia.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.iokit.IOMobileGraphicsFamily.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.logging.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.springboard.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.voicetrigger.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.AssistantServices.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.backedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.logging.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.support.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.token.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.siri.backedup.encrypted.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.weather.plist")
	(subpath "/private/var/mobile/Library/Logs/CrashReporter/Assistant")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(regex #"^/private/var/mobile/Library/Logs/awd/awd-assistantd[.]log")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(subpath "/private/var/db/timezone")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(literal "/private/var/mobile/Library/Preferences/.GlobalPreferences.plist")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(subpath "/System/Library/Frameworks")
	(subpath "/System/Library/PrivateFrameworks")
	(require-all
		(subpath "/Developer")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(subpath "/private/var/tmp")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(subpath "/private/var/mobile/XcodeBuiltProducts")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(require-not (literal "/private/var/mobile/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(literal "/dev/zero")
			(literal "/dev/random")
			(literal "/dev/urandom")
			(literal "/dev/aes_0")
			(literal "/dev/ptmx")
			(literal "/dev/dtracehelper")
			(subpath "/private/var/mobile/Library/Cookies")
			(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd$" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices$")
			(subpath "/private/var/Managed Preferences/mobile")
			(literal "/private/var/mobile/Library/Preferences/com.apple.WebFoundation.plist")
			(literal "/private/var/mobile/Media/com.apple.itunes.lock_sync")
			(literal "/private/var/mobile/Library/Preferences/com.apple.PeoplePicker.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.AOSNotification.public.notbackedup.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.AppSupport.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.TelephonyUtilities.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.postwipe.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.public.notbackedup.plist")
			(literal "/private/var/mobile/Library/Preferences/com.apple.carrier.plist")
			(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$")
			(subpath "/private/var/mobile/Library/Carrier Bundles/Overlay")
			(subpath "/private/var/mobile/Library/Caches/GeoServices")
			(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$")
			(literal "/private/var/mobile/Library/Preferences/com.apple.GEO.plist")
			(literal "/dev/null")
			(require-all
				(vnode-type TTY)
				(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(vnode-type REGULAR-FILE)
				(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices$"))
			(require-all
				(vnode-type DIRECTORY)
				(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices$"))
			(require-all
				(vnode-type REGULAR-FILE)
				(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd$"))
			(require-all
				(vnode-type DIRECTORY)
				(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd$"))
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist")
				(extension "com.apple.tcc.kTCCServiceAddressBook"))
			(require-all
				(subpath "/private/var/mobile/Library/AddressBook")
				(extension "com.apple.tcc.kTCCServiceAddressBook"))
			(require-all
				(require-not (subpath "/dev"))
				(require-any
					(literal "/private/etc/group")
					(literal "/private/etc/passwd")
					(literal "/private/etc/protocols")
					(literal "/private/etc/services")
					(literal "/")
					(literal "/private/var/mobile/Library/Caches/com.apple.MobileGestalt.plist")
					(subpath "/private/var/mobile/Library/ConfigurationProfiles/PublicInfo")
					(literal "/private/etc/hosts")
					(require-all
						(subpath "/private/var/Managed Preferences/mobile")
						(require-entitlement "com.apple.bulletinboard.dataprovider"))
					(require-all
						(literal "/private/var/mobile/Library/Preferences/com.apple.bulletinboard.plist")
						(require-entitlement "com.apple.bulletinboard.dataprovider")))))))
(allow file-read-metadata
	(literal "/private/var/run/syslog")
	(literal "/private/var/mobile/Library/Caches")
	(literal "/private/var/mobile")
	(literal "/private/var/mobile/Library/Preferences")
	(subpath "/private/var/mobile/Library/Carrier Bundles")
	(vnode-type SYMLINK)
	(vnode-type DIRECTORY)
	(literal "/private/var/mobile/Library/Caches/powerlog.launchd")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/private/var/mobile/Library/Caches"))
	(require-all
		(literal "/private/var/mobile/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal "/private/var/mobile")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow file-write*
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(subpath "/private/var/mobile/Library/Logs/CrashReporter/Assistant")
			(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]AssistantServices[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistant[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistant[.]backedup[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistant[.]logging[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistant[.]support[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistant[.]token[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]siri[.]backedup[.]encrypted[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]weather[.]plist")
			(regex #"^/private/var/mobile/Library/Logs/awd/awd-assistantd[.]log")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(subpath "/private/var/mobile/Library/Assistant")
			(subpath "/private/var/tmp")
			(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]siri[.]")
			(require-all
				(subpath "/private/var/tmp")
				(require-any
					(debug-mode)
					(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
			(require-all
				(require-not (literal "/private/var/mobile/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(literal "/dev/ptmx")
					(literal "/dev/dtracehelper")
					(literal "/private/var/mobile/Media/com.apple.itunes.lock_sync")
					(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]assistantd$" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]AssistantServices$")
					(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist")
					(literal "/dev/aes_0")
					(require-all
						(vnode-type TTY)
						(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
					(require-all
						(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
						(extension "com.apple.sandbox.pty"))
					(require-all
						(vnode-type REGULAR-FILE)
						(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices$"))
					(require-all
						(vnode-type DIRECTORY)
						(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]AssistantServices$"))
					(require-all
						(vnode-type REGULAR-FILE)
						(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd$"))
					(require-all
						(vnode-type DIRECTORY)
						(regex #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd/" #"^/private/var/mobile/Library/Caches/com.apple.nsurlsessiond/Downloads/com[.]apple[.]assistantd$"))
					(require-all
						(literal "/private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist")
						(extension "com.apple.tcc.kTCCServiceAddressBook"))
					(require-all
						(subpath "/private/var/mobile/Library/AddressBook")
						(extension "com.apple.tcc.kTCCServiceAddressBook"))
					(require-all
						(require-not (literal "/dev/urandom"))
						(require-not (literal "/dev/random"))
						(require-any
							(literal "/dev/null")
							(literal "/dev/zero"))))))))
(allow file-write-create
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(literal "/private/var/mobile/Library/Caches"))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send")))))
(allow file-write-data
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send")))
(allow file-write-unlink
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-open
	(iokit-user-client-class "RootDomainUserClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "AppleMobileFileIntegrityUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient"))
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(require-all
		(regex #"^/FSM-" #"^OA-" #"^stack-logs" #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow ipc-posix-shm-read*
	(ipc-posix-name "apple.shm.notification_center")
	(regex #"^apple[.]shm[.]cfprefsd[.]"))
(allow mach-bootstrap)
(allow mach-lookup
	(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.cookied")
	(global-name "com.apple.GSSCred")
	(regex #"^com[.]apple[.]assistant[.]contextprovider[.]")
	(global-name "com.apple.BTLEAudioController.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.marco")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.coremedia.endpoint")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.assistant_service")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.accountsd.oauthsigner")
	(global-name "com.apple.absd")
	(global-name "com.apple.absinthed")
	(global-name "com.apple.hangtracerd")
	(global-name "com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.xpcd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.cfprefsd.daemon")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.lsd")
	(global-name "com.apple.assertiond.processassertionconnection")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.geod")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.MediaRemote.nowplayingserver")
	(global-name "com.apple.MediaRemote.isrunning")
	(global-name "com.apple.MediaRemote.daemon")
	(global-name "com.apple.appsupport.cplogd")
	(global-name "com.apple.awdd")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.securityd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.networkd")
	(global-name "com.apple.nsurlsessiond")
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(regex #"." #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(regex #"." #".+"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow network-outbound
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/" #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$"))
		(require-not (literal "/private/var/tmp/launchd/sock"))))
(allow user-preference-read
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.TelephonyUtilities")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.voicetrigger")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.avfoundation.avvc")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.weather")
	(preference-domain "com.apple.AssistantServices")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.assistant.logging")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.assistant.token")
	(preference-domain "com.apple.siri.backedup.encrypted")
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(preference-domain "com.apple.weather")
	(preference-domain "com.apple.AssistantServices")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.assistant.logging")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.assistant.token")
	(preference-domain "com.apple.siri.backedup.encrypted")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.PeoplePicker"))
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow signal
	(target self))
(allow sysctl-read)
(allow system-privilege)
(allow system-sched
	(require-entitlement "com.apple.private.kernel.override-cpumon"))
(allow system-socket
	(socket-domain AF_ROUTE)
	(socket-domain 39)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
