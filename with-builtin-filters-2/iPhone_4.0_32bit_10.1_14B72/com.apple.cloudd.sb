(version 1)
(deny default)
(allow file-ioctl
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(literal "/dev/dtracehelper"))
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(regex #"^/private/var/mobile/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/euser[0-9]+/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/[-0-9A-F]+/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/Users/[^/]+/Library/Caches/CloudKit/[^/]+/[^/]+")
		(subpath-prefix "${HOME}")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(regex #"^/private/var/mobile/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit")
		(subpath-prefix "${HOME}")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
		(subpath-prefix "${HOME}")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(regex #"/private/var/containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit" #".+/private/var/containers/[^/]+/[^/]+/[^/]+/Library/Caches/CloudKit")
		(require-any
			(extension-class "com.apple.nsurlstorage.extension-cache")
			(extension-class "com.apple.app-sandbox.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly")))
(allow file-link
	(require-not (subpath-prefix "${HOME}/Library/AddressBook")))
(allow file-map-executable
	(require-any (subpath "/System/Library/Frameworks")
(subpath "/System/Library/PrivateFrameworks"))
	(extension "com.apple.sandbox.executable")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/Developer")
	(require-all
		(subpath "/AppleInternal")
		(debug-mode))
	(require-all
		(subpath "/usr/local/lib")
		(debug-mode))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
		(debug-mode)))
(allow file-read*
	(literal "/dev/dtracehelper")
	(require-any (literal "/dev/null")
(literal "/dev/zero"))
	(require-not (vnode-type CHARACTER-DEVICE))
	(require-any (subpath "/private/var/db/datadetectors/sys")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library"))
	(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
	(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.MobileGestalt.plist")
	(literal "/dev/aes_0")
	(require-any (literal "/dev/random")
(literal "/dev/urandom"))
	(literal "/dev/ptmx")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.cloudd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.cloudd")
(literal "/private/var/logs/Ubiquity")
(subpath-prefix "${HOME}/Library/Logs/Ubiquity")
(literal-prefix "${HOME}/Library/Logs/ProtectedCloudStorage.log")
(subpath-prefix "${HOME}/Library/Logs/awd")
(subpath-prefix "${HOME}/Library/Caches/CloudKit")
(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
	(subpath "/Developer")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.PeoplePicker.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.CoreDuet.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.PeoplePicker.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.CoreDuet.plist"))
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.DataMigration.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.DataMigration.plist"))
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.icloud.findmydeviced.postwipe.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.icloud.findmydeviced.public.notbackedup.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.icloud.findmydeviced.public.notbackedup.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.icloud.findmydeviced.postwipe.plist"))
	(literal "/private/var/Managed Preferences/mobile/com.apple.persistentconnection.plist")
	(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.AppSupport.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AppSupport.plist"))
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(literal "/private/var/Managed Preferences/mobile/com.apple.AOSNotification.public.notbackedup.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AOSNotification.public.notbackedup.plist")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(subpath-prefix "${HOME}/Library/Fonts")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/usr/share")
	(subpath "/private/var/db/timezone")
	(regex #"^/private/var/tmp/CKTraffic$" #"^/private/var/tmp/CKTraffic[^/]+$")
	(regex #"^/private/var/[.]DocumentRevisions-V100/" #"^/private/var/[.]DocumentRevisions-V100$" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+$")
	(literal-prefix "${HOME}/Library/Caches")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
	(subpath "/private/var/tmp")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.purplebuddy.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.plist"))
	(extension "com.apple.sandbox.executable")
	(literal "/private/var/Managed Preferences/mobile/com.apple.mmcs.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.mmcs.plist")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.CloudKit.BehaviorOptions.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.CloudKit.BehaviorOptions.plist"))
	(subpath "/.TemporaryItems")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.cloudd.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.cloudd.plist"))
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(literal "/private/var/Managed Preferences/mobile/com.apple.keyboard.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.keyboard.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.UIKit.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.UIKit.plist")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.springboard.plist"))
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.persistentconnection.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.itunesstored.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.mobileipod.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.corevideo.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.coremedia.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.coreaudio.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.avfoundation.plist")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.iokit.IOMobileGraphicsFamily.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.iokit.IOMobileGraphicsFamily.plist")
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.migration.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.migration.plist"))
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(subpath "/private/var/preferences/Logging")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(vnode-type TTY)
		(require-any (regex #"/dev/ttyp[a-f0-9]")
(regex #"/dev/ptyp[a-f0-9]")))
	(require-all
		(literal "/private/var/Managed Preferences/mobile/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
		(extension "com.apple.tcc.kTCCServiceAddressBook")
		(require-not (require-entitlement "com.apple.Contacts.database-deny")))
	(require-all
		(subpath-prefix "${HOME}/Library/AddressBook")
		(extension "com.apple.tcc.kTCCServiceAddressBook")
		(require-not (require-entitlement "com.apple.Contacts.database-deny")))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_log" #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.+log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log")
		(subpath-prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/CloudKit")
		(subpath-prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
		(subpath-prefix "${HOME}"))
	(require-all
		(subpath "/AppleInternal")
		(debug-mode))
	(require-all
		(subpath "/usr/local/lib")
		(debug-mode))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
		(debug-mode)))
(allow file-read-metadata
	(vnode-type DIRECTORY)
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
	(literal "/private/var/run/syslog")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(literal-prefix "${HOME}")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-read-times
	(require-all
		(process-attribute 4)
		(require-any
			(vnode-type DIRECTORY)
			(vnode-type SYMLINK))))
(allow file-write*
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.cloudd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.cloudd")
(literal "/private/var/logs/Ubiquity")
(subpath-prefix "${HOME}/Library/Logs/Ubiquity")
(literal-prefix "${HOME}/Library/Logs/ProtectedCloudStorage.log")
(subpath-prefix "${HOME}/Library/Logs/awd")
(subpath-prefix "${HOME}/Library/Caches/CloudKit")
(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.mmcs.plist")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.cloudd.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.CloudKit.BehaviorOptions.plist"))
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter")
	(regex #"^/private/var/tmp/CKTraffic$" #"^/private/var/tmp/CKTraffic[^/]+$")
	(literal-prefix "${HOME}/Library/Caches")
	(subpath "/.TemporaryItems")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
	(subpath "/private/var/tmp")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.plist")
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal-prefix "${HOME}/Library/AddressBook/")
		(extension "com.apple.tcc.kTCCServiceAddressBook")
		(require-not (require-entitlement "com.apple.Contacts.database-deny")))
	(require-all
		(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_log" #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.+log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log")
		(subpath-prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/CloudKit")
		(subpath-prefix "${HOME}"))
	(require-all
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
		(subpath-prefix "${HOME}")))
(allow file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_com.apple.cloudd")
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(require-any (regex #"/dev/ttyp[a-f0-9]")
(regex #"/dev/ptyp[a-f0-9]")))
	(require-all
		(require-all (require-not (literal "/dev/random"))
(require-not (literal "/dev/urandom")))
		(require-any
			(literal "/dev/dtracehelper")
			(require-any (literal "/dev/null")
(literal "/dev/zero"))))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send")))
(allow file-write-mode
	(require-all
		(extension "com.apple.sandbox.pty")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
(allow file-write-unlink
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-write-xattr
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/[.]DocumentRevisions-V100/" #"^/private/var/[.]DocumentRevisions-V100$" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
(allow iokit-open
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "IOSurfaceRootUserClient"))
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(require-any (ipc-posix-name "stack-logs")
(ipc-posix-name "OA-")
(ipc-posix-name "/FSM-")))
(allow ipc-posix-shm-read*
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(require-any (ipc-posix-name "apple.shm.notification_center")
(ipc-posix-name "apple.cfprefs.")))
(allow ipc-posix-shm-read-data
	(ipc-posix-name-regex #"^/tmp/com[.]apple[.]csseed[.][0-9]+$")
	(ipc-posix-name "FNetwork.defaultStorageSession")
	(ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow ipc-posix-shm-write-data
	(ipc-posix-name "com.apple.AppleDatabaseChanged")
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$"))
(allow ipc-posix-shm-write-unlink
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$"))
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.ReportCrash.SimulateCrash")
(global-name "com.apple.hangtracerd"))
	(require-any (global-name "com.apple.logd")
(global-name "com.apple.system.logger")
(global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.agent"))
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(require-any (global-name "com.apple.tccd")
(global-name "com.apple.lsd.advertisingidentifiers")
(global-name "com.apple.lsd.openurl"))
	(global-name "com.apple.spotlight.IndexAgent")
	(require-any (global-name "com.apple.logd.events")
(global-name "com.apple.containermanagerd"))
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.assertiond.processassertionconnection")
(global-name "com.apple.xpcd")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.lsd.open")
(global-name "com.apple.lsd")
(global-name "com.apple.duetknowledged.activity"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.AssetCacheLocatorService")
	(global-name "com.apple.CoreServices.coreservicesd")
	(global-name "com.apple.PowerManagement.control")
	(require-any (global-name "com.apple.SecurityServer")
(global-name "com.apple.coreservices.quarantine-resolver"))
	(global-name "com.apple.absd")
	(global-name "com.apple.absinthed")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.duetactivityscheduler")
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.ocspd")
	(global-name "com.apple.pluginkit.pkd")
	(require-any (global-name "com.apple.protectedcloudstorage.protectedcloudkeysyncing")
(global-name "com.apple.windowserver.active"))
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.awdd")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.fig.movie")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.coremedia.admin")
	(require-any (global-name "com.apple.coremedia.asset")
(global-name "com.apple.coremedia.asset.xpc"))
	(global-name "com.apple.apsd")
	(require-any (global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.capturesession")
(global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.videocompositor")
(global-name "com.apple.coremedia.recorder"))
	(require-any (global-name "com.apple.coremedia.assetimagegenerator")
(global-name "com.apple.coremedia.assetimagegenerator.xpc")
(global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.remotequeue"))
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.datamigrator")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.nehelper")
	(require-any (global-name "com.apple.GSSCred")
(global-name "com.apple.cookied")
(global-name "com.apple.cfnetwork.AuthBrokerAgent")
(global-name "com.apple.cfnetwork.cfnetworkagent")
(global-name "com.apple.nsurlstorage-cache"))
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(require-any (global-name "com.apple.usymptomsd")
(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
(global-name "com.apple.SystemConfiguration.DNSConfiguration")
(global-name "com.apple.SystemConfiguration.NetworkInformation"))
	(require-any (global-name "com.apple.symptomsd")
(global-name "com.apple.trustd")
(global-name "com.apple.commcenter.cupolicy.xpc")
(global-name "com.apple.SystemConfiguration.helper")
(global-name "com.apple.SystemConfiguration.PPPController"))
	(global-name "com.apple.securityd")
	(require-any (global-name "com.apple.ctkd.token-client")
(global-name "com.apple.CoreAuthentication.daemon.libxpc")
(global-name "com.apple.managedconfiguration.profiled.public"))
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.SystemConfiguration.configd")
	(require-any (global-name "com.apple.ABDatabaseDoctor")
(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities"))
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.updates"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(require-entitlement "com.apple.networkd.advisory_socket")
			(require-entitlement "com.apple.networkd.disable_opportunistic")
			(require-entitlement "com.apple.networkd.modify_settings")
			(require-entitlement "com.apple.networkd.persistent_interface")
			(require-entitlement "com.apple.networkd_privileged")))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+")))
(allow mach-register
	(require-all
		(extension "com.apple.security.exception.mach-register.global-name")
		(global-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-register.local-name")
		(local-name-regex #".+")))
(allow mach-task-name
	(target self))
(allow network-outbound
	(require-all
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-any
			(require-all
				(remote tcp "*:*")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(literal "/private/var/run/mDNSResponder")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(require-any (control-name "com.apple.network.statistics")
(control-name "com.apple.netsrc"))
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(literal "/private/var/run/syslog")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$"))))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.AppSupport")
	(require-any (preference-domain "com.apple.CoreDuet")
(preference-domain "com.apple.PeoplePicker"))
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.cloudd")
	(preference-domain "com.apple.CloudKit.BehaviorOptions")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.migration")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.DataMigration")
	(require-any (preference-domain "com.apple.icloud.findmydeviced.postwipe")
(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(preference-domain "com.apple.cloudd")
	(preference-domain "com.apple.CloudKit.BehaviorOptions")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.purplebuddy")
	(extension "com.apple.security.exception.shared-preference.read-write"))
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow pseudo-tty)
(allow sysctl*
	(extension "com.apple.security.exception.sysctl.read-write"))
(allow sysctl-read
	(sysctl-name "net.statistics")
	(require-any (sysctl-name "kern.ipc.maxsockbuf")
(sysctl-name "kern.nisdomainname"))
	(sysctl-name "net.routetable.")
	(extension "com.apple.security.exception.sysctl.read-only")
	(extension "com.apple.security.exception.sysctl.read-write")
	(require-all
		(require-not (sysctl-name "sysctl.proc_native"))
		(require-any
			(sysctl-name "kern.hostname")
			(sysctl-name "hw.machine")
			(require-any (sysctl-name "vm.loadavg")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.activecpu")
(sysctl-name "hw.cachelinesize")
(sysctl-name "hw.cachelinesize_compat")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpufrequency_max")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufamily")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.vectorunit")
(sysctl-name "hw.usermem")
(sysctl-name "hw.tbfrequency_compat")
(sysctl-name "hw.tbfrequency")
(sysctl-name "hw.physmem")
(sysctl-name "hw.physicalcpu_max")
(sysctl-name "hw.physicalcpu")
(sysctl-name "hw.pagesize_compat")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.ncpu")
(sysctl-name "hw.model")
(sysctl-name "hw.memsize")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.l3cachesize_compat")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l2cachesize_compat")
(sysctl-name "hw.l2cachesize")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.l1dcachesize_compat")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "sysctl.name2oid")
(sysctl-name "security.mac.sandbox.sentinel")
(sysctl-name "kern.waketime")
(sysctl-name "kern.version")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.secure_kernel")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.osversion")
(sysctl-name "kern.ostype")
(sysctl-name "kern.osrelease")
(sysctl-name "kern.ngroups")
(sysctl-name "kern.monotoniclock_offset_usecs")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.memorystatus_level")
(sysctl-name "kern.maxfilesperproc")
(sysctl-name "kern.hostid")
(sysctl-name "kern.development")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.boottime")
(sysctl-name "kern.bootargs"))
			(sysctl-name "kern.usrstack64")
			(sysctl-name "kern.maxvnodes")))
	(require-all
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2."))
		(require-entitlement "com.apple.security.exception.process-info"))
	(require-all
		(sysctl-name "kern.proc.pid.")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow system-info
	(info-type "net.link.addr"))
(allow system-privilege)
(allow system-sched
	(require-entitlement "com.apple.private.kernel.override-cpumon"))
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
