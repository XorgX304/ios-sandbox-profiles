(version 1)
(deny default)
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.rtcreporting.upload")
		(subpath-prefix "${HOME}/Library/Caches/com.apple.VideoConference/logs"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath-prefix "${HOME}/Library/Cookies"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath-prefix "${HOME}/Library/Cookies"))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(subpath-prefix "${HOME}/Library/Caches/com.apple.mediaserverd"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath-prefix "${HOME}/Library/Caches/com.apple.mediaserverd"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath-prefix "${HOME}/Library/Caches/com.apple.mediaserverd")))
(allow file-link)
(allow file-map-executable
	(require-any (subpath "/System/Library/Frameworks")
(subpath "/System/Library/PrivateFrameworks"))
	(extension "com.apple.sandbox.executable")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/Library/Audio/Plug-Ins")
	(literal "/usr/local/lib/libAudioDiagnostics.dylib")
	(subpath "/Developer"))
(allow file-read*
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/private/var/preferences/Logging")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(subpath "/private/var/db/timezone")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(require-any (literal-prefix "${HOME}/Library/Logs/awd/awd-mediaserverd.log")
(subpath-prefix "${HOME}/Library/Logs/CrashReporter/VoiceTrigger")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/mediaserverd")
(literal-prefix "${HOME}/Library/Logs/AirPlay.log")
(literal-prefix "${HOME}/Library/Caches/CoreMotion/CoreMotion.log")
(subpath-prefix "${HOME}/Library/Caches/CoreMotion/CoreMotion.logMedia/iTunes_Control/Music")
(subpath-prefix "${HOME}/Library/Caches/CoreMotion/CoreMotion.logMedia/PhotoData/OutboundSharingTmp")
(literal-prefix "${HOME}/Library/")
(literal "/private/var/tmp/mediaserverd")
(subpath "/private/var/logs/mediaserverd"))
	(subpath-prefix "${HOME}/Library/VoiceTrigger")
	(subpath "/private/var/wireless/Library/Logs/awd")
	(subpath-prefix "${HOME}/Library/Fonts")
	(extension "com.apple.mediaserverd.read-write")
	(extension "com.apple.mediaserverd.read")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.VideoConference")
	(subpath-prefix "${HOME}/Media/DCIM")
	(subpath-prefix "${HOME}/Media/Downloads")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(require-any (subpath-prefix "${HOME}/Media/iTunes_Control/Ringtones")
(subpath-prefix "${HOME}/Media/Purchases"))
	(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(subpath-prefix "${HOME}/Media/Recordings")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(subpath-prefix "${HOME}/Media/PhotoStreamsData")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(extension "com.apple.logd.read-only")
	(subpath-prefix "${HOME}/Library/Cookies")
	(subpath "/Developer")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(require-any (subpath "/Library")
(subpath "/usr/local/share/firmware/isp")
(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
(literal "/AppleInternal/Library/Conference/Environments.plist"))
	(subpath "/usr/local/lib")
	(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
	(subpath "/usr/sbin")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.mobilegestalt.plist")
	(literal "/AppleInternal/Library/Preferences/com.apple.airplay.dashboard.plist")
	(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
	(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo"))
	(subpath-prefix "${HOME}/Media/Podcasts")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(subpath-prefix "${HOME}/Library/Assets")
		(extension "com.apple.assets.read"))
	(require-all
		(subpath "/private/var/MobileAsset")
		(extension "com.apple.assets.read"))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mediaserverd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mediaserverd"))
			(subpath-prefix "${HOME}/Library/Caches/com.apple.mediaserverd")
			(subpath "/private/var/containers/Data/System/com.apple.geod")
			(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
			(literal "/dev/aes_0")
			(require-any (literal "/dev/urandom")
(literal "/dev/random"))
			(literal "/dev/dtracehelper")
			(require-any (literal "/dev/null")
(literal "/dev/zero"))
			(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo"))
			(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
(subpath "/private/var/db/datadetectors/sys"))
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/ptmx")
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mediaserverd"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mediaserverd"))
			(require-all
				(literal "/private/etc/master.passwd")
				(uid 0))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
				(subpath-prefix "${HOME}"))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
			(require-all
				(subpath "/private/var/db/diagnostics")
				(require-any
					(require-entitlement "com.apple.private.logging.diagnostic")
					(require-entitlement "com.apple.diagnosticd.diagnostic")))
			(require-all
				(subpath "/private/var/db/uuidtext")
				(require-any
					(require-entitlement "com.apple.private.logging.diagnostic")
					(require-entitlement "com.apple.diagnosticd.diagnostic")))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
			(require-all
				(vnode-type TTY)
				(require-any (regex #"/dev/ttyp[a-f0-9]")
(regex #"/dev/ptyp[a-f0-9]")))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(require-any
					(literal "/private/etc/hosts")
					(require-any (literal "/private/etc/group")
(literal "/private/etc/passwd")
(literal "/private/etc/protocols")
(literal "/private/etc/services"))
					(literal "/")
					(require-all
						(require-any (literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People"))
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal"))
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
						(process-attribute 4)
						(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))
					(require-all
						(require-any (literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist"))
						(process-attribute 4)
						(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))))
	(require-all
		(subpath "/AppleInternal")
		(debug-mode))
	(require-all
		(subpath "/usr/local/lib")
		(debug-mode))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
		(debug-mode)))
(allow file-read-data
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/Caches")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.mediaserverd")
	(require-any (literal-prefix "${HOME}/Library/Logs")
(literal-prefix "${HOME}/Library/Caches/CoreMotion"))
	(literal-prefix "${HOME}/Library/PPTDevice")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(subpath-prefix "${HOME}/Library/Cookies")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection"))
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal "/private/var/run/syslog")
	(literal-prefix "${HOME}/Library/Logs/awd")
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(vnode-type DIRECTORY)
		(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Caches"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(literal-prefix "${HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal-prefix "${HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(subpath-prefix "${HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Logs/awd"))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Caches/CoreMotion"))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Logs/CrashReporter"))
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/Logs")))
(allow file-write*
	(subpath-prefix "${HOME}/Library/Cookies")
	(subpath-prefix "${HOME}/Media/Podcasts")
	(require-any (subpath-prefix "${HOME}/Media/iTunes_Control/Ringtones")
(subpath-prefix "${HOME}/Media/Purchases"))
	(subpath-prefix "${HOME}/Media/Recordings")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(require-any (literal-prefix "${HOME}/Library/Logs/awd/awd-mediaserverd.log")
(subpath-prefix "${HOME}/Library/Logs/CrashReporter/VoiceTrigger")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/mediaserverd")
(literal-prefix "${HOME}/Library/Logs/AirPlay.log")
(literal-prefix "${HOME}/Library/Caches/CoreMotion/CoreMotion.log")
(subpath-prefix "${HOME}/Library/Caches/CoreMotion/CoreMotion.logMedia/iTunes_Control/Music")
(subpath-prefix "${HOME}/Library/Caches/CoreMotion/CoreMotion.logMedia/PhotoData/OutboundSharingTmp")
(literal-prefix "${HOME}/Library/")
(literal "/private/var/tmp/mediaserverd")
(subpath "/private/var/logs/mediaserverd"))
	(subpath-prefix "${HOME}/Library/VoiceTrigger")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.mediaserverd.read")
	(subpath "/private/var/wireless/Library/Logs/awd")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(subpath-prefix "${HOME}/Media/PhotoStreamsData")
	(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
	(extension "com.apple.mediaserverd.read-write")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.VideoConference")
	(subpath-prefix "${HOME}/Media/DCIM")
	(subpath-prefix "${HOME}/Media/Downloads")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mediaserverd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mediaserverd"))
			(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
			(subpath-prefix "${HOME}/Library/Caches/com.apple.mediaserverd")
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mediaserverd"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mediaserverd"))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(literal-prefix "${HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Logs/CrashReporter"))
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Logs"))
			(require-all
				(vnode-type DIRECTORY)
				(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Caches"))
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Logs/awd"))
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Caches/CoreMotion")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(require-any (regex #"/dev/ttyp[a-f0-9]")
(regex #"/dev/ptyp[a-f0-9]")))
	(require-all
		(require-all (require-not (literal "/dev/urandom"))
(require-not (literal "/dev/random")))
		(require-any
			(require-any (literal "/dev/null")
(literal "/dev/zero"))
			(literal "/dev/dtracehelper"))))
(allow file-write-mode
	(require-all
		(extension "com.apple.sandbox.pty")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
(allow file-write-xattr
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
(allow iokit-open
	(require-any (iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelSharedUserClient")
(iokit-user-client-class "IOAccelSharedUserClient2")
(iokit-user-client-class "IOAccelSubmitter2"))
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(require-any (iokit-user-client-class "com_apple_audio_IOBorealisOwlUserClient")
(iokit-user-client-class "AppleAVEUserClient")
(iokit-user-client-class "AppleAVE2UserClient")
(iokit-user-client-class "AppleD5500UserClient")
(iokit-user-client-class "AppleExternalAmpControllerUserClient")
(iokit-user-client-class "AppleH2CamInUserClient")
(iokit-user-client-class "AppleH3CamInUserClient")
(iokit-user-client-class "AppleH4CamInUserClient")
(iokit-user-client-class "AppleH6CamInUserClient")
(iokit-user-client-class "AppleH9CamInUserClient")
(iokit-user-client-class "AppleSPUHIDDriverUserClient")
(iokit-user-client-class "AppleSRSDriverUserClient")
(iokit-user-client-class "AppleVXD375UserClient")
(iokit-user-client-class "AppleVXD390UserClient")
(iokit-user-client-class "AppleVXD393UserClient")
(iokit-user-client-class "AppleVXE380UserClient")
(iokit-user-client-class "IOUSBDeviceInterfaceUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient")
(iokit-user-client-class "IOTimeSyncUserClient")
(iokit-user-client-class "IOStreamAudioUserClient")
(iokit-user-client-class "IOReportUserClient")
(iokit-user-client-class "IOAudioCodecsUserClient")
(iokit-user-client-class "IOAudio2TransformerUserClient")
(iokit-user-client-class "IOAudio2DeviceUserClient")
(iokit-user-client-class "H3H264VideoEncoderDriverUserClient"))
	(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "IOSurfaceSendRight")
	(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
	(iokit-user-client-class "IOHIDLibUserClient")
	(iokit-user-client-class "IOHIDResourceDeviceUserClient")
	(require-any (iokit-user-client-class "AppleUSBHostInterfaceUserClient")
(iokit-user-client-class "IOAccessoryManagerUserClient"))
	(iokit-user-client-class "RootDomainUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient"))
(allow iokit-set-properties)
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(require-any (ipc-posix-name "shm_pcm_audio_sco_write")
(ipc-posix-name "shm_pcm_audio_sco_read"))
	(require-any (ipc-posix-name "shm_pcm_audio_acl")
(ipc-posix-name "com.apple.audio.abl."))
	(regex #"^AppleAudioQueue[.]." #"^AppleAudioQueue[.].+")
	(require-any (ipc-posix-name "stack-logs")
(ipc-posix-name "OA-")
(ipc-posix-name "/FSM-"))
	(regex #"^AppleABL[.]." #"^AppleABL[.].+")
	(regex #"^shm_notif[.][^.]+[.][RW]$")
	(regex #"^AppleAURemoteIO[.]." #"^AppleAURemoteIO[.].+")
	(regex #"^[0-9A-F][0-9A-F]:+[0-9A-F][0-9A-F]-tacl$"))
(allow ipc-posix-shm-read*
	(regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(require-any (ipc-posix-name "apple.shm.notification_center")
(ipc-posix-name "apple.cfprefs.")))
(allow ipc-posix-shm-write-data
	(regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$"))
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.apsd")
	(require-any (global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
(global-name "com.apple.pairedsyncd.syncstate"))
	(require-any (global-name "com.apple.hangtracerd")
(global-name "com.apple.ReportCrash.SimulateCrash"))
	(global-name "com.apple.lsd.mapdb")
	(require-any (global-name "com.apple.duetknowledged.activity")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.lsd.open")
(global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.assertiond.processassertionconnection")
(global-name "com.apple.xpcd")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
	(require-any (global-name "com.apple.containermanagerd")
(global-name "com.apple.logd.events"))
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.agent")
(global-name "com.apple.logd")
(global-name "com.apple.system.logger"))
	(require-any (global-name "com.apple.tccd")
(global-name "com.apple.lsd.advertisingidentifiers")
(global-name "com.apple.lsd.openurl"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(require-any (global-name "com.apple.SystemConfiguration.helper")
(global-name "com.apple.SystemConfiguration.PPPController"))
	(require-any (global-name "com.apple.SystemConfiguration.SCNetworkReachability")
(global-name "com.apple.SystemConfiguration.DNSConfiguration")
(global-name "com.apple.SystemConfiguration.NetworkInformation"))
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.nehelper")
	(require-any (global-name "com.apple.GSSCred")
(global-name "com.apple.cookied")
(global-name "com.apple.nsurlstorage-cache"))
	(global-name "com.apple.accountsd.accountmanager")
	(require-any (global-name "com.apple.cfnetwork.AuthBrokerAgent")
(global-name "com.apple.cfnetwork.cfnetworkagent"))
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(global-name "com.apple.awdd")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "PurpleSystemAppPort")
	(global-name "PurpleSystemEventPort")
	(global-name "com.apple.BTServer.le")
	(global-name "com.apple.CARenderServer")
	(require-any (global-name "com.apple.NetworkLinkConditioner")
(global-name "com.apple.airplay.receiver.controller")
(global-name "com.apple.applecamerad")
(global-name "com.apple.audio.AUPBRegistrar")
(global-name "com.apple.b184_mcu_commd")
(global-name "com.apple.b184_monitord")
(global-name "com.apple.carkit.monitoring.service")
(global-name "com.apple.coremedia.virtualdisplayserver")
(global-name "com.apple.filesystems.userfsd")
(global-name "com.apple.internal.mediaserverdtracerd")
(global-name "com.apple.lskdmsed")
(global-name "com.apple.securekeyvaultd"))
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.SharingServices")
	(global-name "com.apple.WirelessCoexManager")
	(global-name "com.apple.accessibility.AXSpringBoardServer")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.assistant.analytics")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(require-any (global-name "com.apple.audio.AURemoteIOServer")
(global-name "com.apple.assistant.dictation")
(global-name "com.apple.accessibility.mediaaccessibilityd"))
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(require-any (global-name "com.apple.audio.hapticd")
(global-name "com.apple.backboard.animation-fence-arbiter"))
	(require-any (global-name "com.apple.ctkd.token-client")
(global-name "com.apple.CoreAuthentication.daemon.libxpc")
(global-name "com.apple.managedconfiguration.profiled.public"))
	(require-any (global-name "com.apple.cvmsServ")
(global-name "com.apple.gpumemd.source"))
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.carkit.service")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.coresymbolicationd")
	(global-name "com.apple.fairplayd.versioned")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(global-name "com.apple.frontboard.systemappservices")
	(require-any (global-name "com.apple.homed.xpc")
(global-name "com.apple.iap2d.distributednotification.server")
(global-name "com.apple.iapd.distributednotification.server")
(global-name "com.apple.iaptransportd.xpc"))
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.PowerManagement.control")
	(require-any (global-name "com.apple.iTunesStore.daemon")
(global-name "com.apple.iTunesStore.daemon-notifications")
(global-name "com.apple.iTunesStore.daemon.deatchwatch"))
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.lskdd")
	(require-any (global-name "com.apple.MediaRemote.daemon")
(global-name "com.apple.MediaRemote.isrunning")
(global-name "com.apple.MediaRemote.nowplayingserver"))
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.rtcreportingd")
	(global-name "com.apple.marco")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.springboard.processinvalidation")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.mobileassetd")
	(require-any (global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
(global-name "com.apple.ExternalAccessory.distributednotification.server"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(global-name "com.apple.logd.admin")
		(require-any
			(require-entitlement "com.apple.private.logging.diagnostic")
			(require-entitlement "com.apple.diagnosticd.diagnostic")))
	(require-all
		(global-name "com.apple.symptom_diagnostics")
		(require-entitlement "com.apple.symptom_diagnostics.report"))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.request"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.passd.trusted-device-enrollment-info-provider")
		(require-entitlement "com.apple.private.passkit.trusted-device-enrollment-info"))
	(require-all
		(global-name "com.apple.springboard.statusbarservices")
		(require-entitlement "com.apple.springboard.statusbarstyleoverrides"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.request"))
		(require-entitlement "com.apple.appstored.install-apps"))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(require-entitlement "com.apple.networkd.advisory_socket")
			(require-entitlement "com.apple.networkd.disable_opportunistic")
			(require-entitlement "com.apple.networkd.modify_settings")
			(require-entitlement "com.apple.networkd.persistent_interface")
			(require-entitlement "com.apple.networkd_privileged")))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.appstored.update-apps"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+")))
(allow mach-register
	(global-name "com.apple.coremedia.")
	(global-name "com.apple.midiserver.io")
	(require-all
		(extension "com.apple.security.exception.mach-register.local-name")
		(local-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-register.global-name")
		(global-name-regex #".+")))
(allow network-inbound
	(local tcp "*:*"))
(allow network-outbound
	(require-all
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-any
			(require-all
				(literal "/private/var/run/lockdown.sock")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(literal "/private/var/run/mDNSResponder")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(require-any (control-name "com.apple.network.statistics")
(control-name "com.apple.netsrc"))
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(literal "/private/var/run/syslog")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(remote tcp "*:*")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$")))
			(require-all
				(remote udp "*:*")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$"))))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.assistant.logging")
	(preference-domain "com.apple.carplay")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.preferences-sounds")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.rtcreporting")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.settings.bluetooth.audio-route")
	(require-any (preference-domain "com.apple.demo-settings")
(preference-domain "com.apple.pairedsync")
(preference-domain "com.apple.NanoRegistry"))
	(preference-domain "com.apple.logging")
	(require-any (preference-domain "com.apple.opengl")
(preference-domain "com.apple.Metal"))
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.voicetrigger")
	(require-any (preference-domain "com.apple.voicetrigger.notbackedup")
(preference-domain "com.apple.audio.puffin")
(preference-domain "com.apple.audio.virtualaudio")
(preference-domain "com.apple.coremedia.bag")
(preference-domain "com.apple.facetime"))
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coremedia")
	(require-any (preference-domain "com.apple.mediaaccessibility")
(preference-domain "com.apple.coreanimation")
(preference-domain "com.apple.preferences.sounds"))
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.mediaserverd")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.VideoProcessing")
	(preference-domain "com.apple.VideoConference")
	(require-all
		(preference-domain "com.apple.demo-settings")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(preference-domain "com.apple.mediaserverd")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.voicetrigger")
	(require-any (preference-domain "com.apple.voicetrigger.notbackedup")
(preference-domain "com.apple.audio.puffin")
(preference-domain "com.apple.audio.virtualaudio")
(preference-domain "com.apple.coremedia.bag")
(preference-domain "com.apple.facetime"))
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coremedia")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.facetime.bag"))
(allow process-exec*
	(literal "/usr/sbin/mediaserverd")
	(require-all
		(require-any (literal "/usr/bin/trace")
(literal "/usr/bin/syslog"))
		(debug-mode)))
(allow process-fork
	(debug-mode))
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow pseudo-tty)
(allow sysctl*
	(sysctl-name "kern.min_audio_buffer_usec"))
(allow sysctl-read
	(sysctl-name "net.routetable.")
	(extension "com.apple.security.exception.sysctl.read-only")
	(extension "com.apple.security.exception.sysctl.read-write")
	(sysctl-name "sysctl.proc_native")
	(sysctl-name "kern.bootsessionuuid")
	(require-any (sysctl-name "kern.ipc.maxsockbuf")
(sysctl-name "kern.nisdomainname"))
	(sysctl-name "net.statistics")
	(sysctl-name "vm.vm_page_free_target")
	(sysctl-name "kern.min_audio_buffer_usec")
	(require-all
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2."))
		(require-entitlement "com.apple.security.exception.process-info"))
	(require-all
		(require-any (sysctl-name "kern.argmax")
(sysctl-name "kern.proc.pid."))
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow system-privilege)
(allow system-suspend-resume)
