(version 1)
(deny default)
(allow file-ioctl
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/dev/ptmx")
			(literal "/dev/dtracehelper")
			(literal "/dev/aes_0"))))
(allow file-issue-extension
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/System/Library"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.sandbox.executable"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.security.exception.files.absolute-path.read-only"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "com.apple.security.exception.files.absolute-path.read-write"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.security.exception.files.absolute-path.read-write"))
			(require-all
				(extension "com.apple.sandbox.executable")
				(extension-class "com.apple.nsurlsessiond.readonly")))))
(allow file-read*
	(literal "/dev/zero")
	(literal "/dev/dtracehelper")
	(literal "/dev/random")
	(literal "/dev/urandom")
	(literal "/dev/aes_0")
	(literal "/dev/ptmx")
	(literal "/private/var/mobile/Library/Caches/com.apple.MobileGestalt.plist")
	(subpath "/private/var/mobile/Library/ConfigurationProfiles/PublicInfo")
	(literal "/private/var/mobile/Media/com.apple.itunes.lock_sync")
	(subpath "/private/var/Managed Preferences/mobile")
	(literal "/private/var/mobile/Library/Preferences/com.apple.PeoplePicker.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.AOSNotification.public.notbackedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.AppSupport.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.TelephonyUtilities.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.postwipe.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.public.notbackedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.carrier.plist")
	(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$")
	(subpath "/private/var/mobile/Library/Carrier Bundles/Overlay")
	(literal "/private/var/mobile/Library/Preferences/com.apple.homesharing.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.avfoundation.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coreaudio.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coremedia.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.corevideo.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.itunesstored.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.mediaremote.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.Accessibility.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.iapd.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.iap2d.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.iaptransportd.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.mobileipod.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.videos.plist")
	(literal "/private/var/mobile/Library/Preferences/.GlobalPreferences.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.EmojiPreferences.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.Preferences.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.UIKit.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.backedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.support.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.da.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.logging.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.medialibrary.plist")
	(subpath "/private/var/mobile/Library/ConfigurationProfiles")
	(subpath "/usr/sbin")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.mobilegestalt.plist")
	(subpath "/private/var/mobile/Library/Caches/com.apple.iap2d")
	(regex #"^/private/var/mobile/Library/Logs/CrashReporter/iapd" #"^/private/var/mobile/Library/Logs/CrashReporter/iap2d" #"^/private/var/mobile/Library/Logs/CrashReporter/mp" #"^/private/var/mobile/Library/Logs/CrashReporter/haywire" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistivetouchd[.]enabled[.]launchd")
	(subpath "/private/var/mobile/Media/iTunes_Control")
	(subpath "/private/var/mobile/Media/Radio")
	(subpath "/private/var/mobile/Library/Logs/CrashReporter/Panics")
	(subpath "/private/var/mobile/Library/CallHistoryDB")
	(literal "/private/var/ea")
	(regex #"^/private/var/ea/ea[.0-9]+$")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(subpath "/private/var/db/timezone")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(subpath "/System/Library")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(subpath "/System/Library/Frameworks")
	(subpath "/System/Library/PrivateFrameworks")
	(literal "/dev/null")
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(subpath "/private/var/Managed Preferences/mobile")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal "/private/var/mobile/Library/Preferences/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal "/private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist")
		(extension "com.apple.tcc.kTCCServiceAddressBook"))
	(require-all
		(subpath "/private/var/mobile/Library/AddressBook")
		(extension "com.apple.tcc.kTCCServiceAddressBook"))
	(require-all
		(subpath "/Developer")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(subpath "/private/var/tmp")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(subpath "/private/var/mobile/XcodeBuiltProducts")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(require-not (vnode-type BLOCK-DEVICE))
		(require-not (vnode-type CHARACTER-DEVICE))
		(require-any
			(literal "/")
			(literal "/private/etc/hosts")
			(literal "/private/etc/group")
			(literal "/private/etc/passwd")
			(literal "/private/etc/protocols")
			(literal "/private/etc/services"))))
(allow file-read-metadata)
(allow file-write*
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/private/var/mobile/Media/com.apple.itunes.lock_sync")
			(subpath "/private/var/mobile/Library/Caches/com.apple.iap2d")
			(regex #"^/private/var/mobile/Library/Logs/CrashReporter/iapd" #"^/private/var/mobile/Library/Logs/CrashReporter/iap2d" #"^/private/var/mobile/Library/Logs/CrashReporter/mp" #"^/private/var/mobile/Library/Logs/CrashReporter/haywire" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]assistivetouchd[.]enabled[.]launchd" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]Accessibility[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]iapd[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]iap2d[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]iaptransportd[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]mediaremote[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]mobileipod[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]videos[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist")
			(subpath "/private/var/mobile/Media/iTunes_Control")
			(subpath "/private/var/mobile/Media/Radio")
			(subpath "/private/var/mobile/Library/Logs/CrashReporter/Panics")
			(subpath "/private/var/mobile/Library/CallHistoryDB")
			(regex #"^/private/var/ea/ea[.0-9]+$")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(require-all
				(subpath "/private/var/tmp")
				(require-any
					(debug-mode)
					(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist")
				(extension "com.apple.tcc.kTCCServiceAddressBook"))
			(require-all
				(subpath "/private/var/mobile/Library/AddressBook")
				(extension "com.apple.tcc.kTCCServiceAddressBook")))))
(allow file-write-create
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send")))
(allow file-write-data
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/dev/aes_0")
			(literal "/dev/ptmx")
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send"))
			(require-all
				(require-not (literal "/dev/urandom"))
				(require-not (literal "/dev/random"))
				(require-any
					(literal "/dev/zero")
					(literal "/dev/dtracehelper")
					(literal "/dev/null")))
			(require-all
				(vnode-type TTY)
				(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty")))))
(allow file-write-mode
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-open)
(allow iokit-set-properties)
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(require-all
		(regex #"^/FSM-" #"^OA-" #"^stack-logs" #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow ipc-posix-shm-read*
	(regex #"^apple[.]shm[.]cfprefsd[.]")
	(ipc-posix-name "apple.shm.notification_center"))
(allow mach-bootstrap)
(allow mach-lookup)
(allow mach-register
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
(allow network-inbound
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(local udp "*:*")))
(allow network-bind
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(regex #"^/private/var/ea/ea[.0-9]+$")))
(allow network-outbound
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/" #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$"))
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-any
			(literal "/private/var/run/lockdown.sock")
			(control-name "com.apple.network.statistics")
			(control-name "com.apple.netsrc")
			(literal "/private/var/run/mDNSResponder")
			(remote tcp "*:*")
			(remote udp "*:*")
			(literal "/private/var/run/syslog"))))
(allow user-preference-read
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.TelephonyUtilities")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.homesharing")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.iap2d")
	(preference-domain "com.apple.iaptransportd")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.medialibrary")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.Preferences")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.logging")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.iap2d")
	(preference-domain "com.apple.iaptransportd")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.mobileipod")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.PeoplePicker"))
(allow process-exec*
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/System/Library/PrivateFrameworks/IAP.framework/Support/iap2d")
			(literal "/System/Library/PrivateFrameworks/IAP.framework/Support/iapd"))))
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow signal
	(target self))
(allow sysctl-read)
(allow system-kext-load
	(kext-bundle-id "com.apple.driver.AppleUSBNCM")
	(kext-bundle-id "com.apple.iokit.IOUSBHIDDriver")
	(kext-bundle-id "com.apple.driver.AppleUSBAudio"))
(allow system-privilege)
(allow system-sched
	(require-entitlement "com.apple.private.kernel.override-cpumon"))
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
