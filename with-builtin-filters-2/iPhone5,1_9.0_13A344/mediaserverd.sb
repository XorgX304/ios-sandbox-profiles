(version 1)
(deny default)
(allow file-ioctl
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/ptmx")
			(literal "/dev/aes_0"))))
(allow file-issue-extension
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/System/Library"))
			(require-all
				(extension "com.apple.sandbox.executable")
				(extension-class "com.apple.nsurlsessiond.readonly"))
			(require-all
				(extension-class "com.apple.rtcreporting.upload")
				(subpath "/private/var/mobile/Library/Caches/com.apple.VideoConference/logs/mediaserverd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath "/private/var/mobile/Library/Cookies"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath "/private/var/mobile/Library/Cookies"))
			(require-all
				(extension-class "com.apple.nsurlstorage.extension-cache")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd$"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "com.apple.security.exception.files.absolute-path.read-write")
					(extension "com.apple.security.exception.files.home-relative-path.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "com.apple.security.exception.files.absolute-path.read-write")
					(extension "com.apple.security.exception.files.home-relative-path.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "com.apple.security.exception.files.absolute-path.read-only")
					(extension "com.apple.security.exception.files.home-relative-path.read-only")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "com.apple.sandbox.executable"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath "/System/Library")))))
(allow file-map-executable
	(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/")))
(allow file-read*
	(literal "/private/var/mobile/Library/Preferences/com.apple.logging.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.demo-settings.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.NanoRegistry.plist")
	(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(extension "com.apple.sandbox.executable")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "/private/var/mobile/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/System/Library")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(subpath "/private/var/db/timezone")
	(literal "/AppleInternal/Library/Conference/Environments.plist")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(subpath "/private/var/mobile/Library/Logs/awd")
	(literal "/private/var/mobile/Library/Preferences/com.apple.airplay.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.MobileAsset.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.support.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.voicetrigger.notbackedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.voicetrigger.plist")
	(subpath "/private/var/mobile/Library/VoiceTrigger")
	(subpath "/private/var/mobile/Library/Logs/CrashReporter/VoiceTrigger")
	(literal "/private/var/mobile/Library/Caches/CoreMotion/CoreMotion.log")
	(subpath "/private/var/wireless/Library/Logs/awd")
	(subpath "/private/var/mobile/Library/Fonts")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coremedia.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.avfoundation.plist")
	(regex #"^/private/var/mobile/Library/Logs/CrashReporter/mediaserverd")
	(regex #"^/private/var/mobile/Library/Logs/AirPlay[.]log")
	(subpath "/private/var/logs/mediaserverd")
	(subpath "/private/var/mobile/Library/Caches/com.apple.VideoConference")
	(subpath "/private/var/mobile/Media/DCIM")
	(subpath "/private/var/mobile/Media/Downloads")
	(subpath "/private/var/mobile/Media/iTunes_Control/Music")
	(subpath "/private/var/mobile/Media/iTunes_Control/Ringtones")
	(subpath "/private/var/mobile/Media/PhotoData/CPLAssets")
	(subpath "/private/var/mobile/Media/PhotoData/OutboundSharingTmp")
	(subpath "/private/var/mobile/Media/PhotoData/Sync")
	(subpath "/private/var/mobile/Media/PhotoData/Mutations")
	(subpath "/private/var/mobile/Media/PhotoStreamsData")
	(subpath "/private/var/mobile/Media/Podcasts")
	(subpath "/private/var/mobile/Media/Purchases")
	(subpath "/private/var/mobile/Media/Recordings")
	(subpath "/private/var/tmp")
	(extension "com.apple.mediaserverd.read-write")
	(extension "com.apple.mediaserverd.read")
	(subpath "/Developer")
	(subpath "/Library")
	(subpath "/usr/local/lib")
	(subpath "/usr/local/share/firmware/isp")
	(subpath "/usr/sbin")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.mobilegestalt.plist")
	(literal "/AppleInternal/Library/Preferences/com.apple.airplay.dashboard.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.mediaaccessibility.public.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.mediaaccessibility.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.imessage.bag.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.facetime.bag.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.facetime.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coremedia.bag.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coreaudio.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.conference.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.celestial.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.audio.virtualaudio.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.audio.penguin.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.VideoConference.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.springboard.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.settings.bluetooth.audio-route.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.rtcreporting.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.preferences.sounds.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.preferences-sounds.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.mobileipod.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.itunesstored.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.ids.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.da.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.corevideo.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coreanimation.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.CoreMotion.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.backedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.VideoProcessing.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.Accessibility.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.locationd.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.GEO.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.AppSupport.plist")
	(subpath "/private/var/mobile/Library/Carrier Bundles/Overlay")
	(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
	(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$")
	(literal "/private/var/mobile/Library/Preferences/com.apple.carrier.plist")
	(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
	(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$")
	(literal "/private/var/mobile/Library/Preferences/com.apple.iokit.IOMobileGraphicsFamily.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.WebFoundation.plist")
	(subpath "/private/var/mobile/Library/Cookies")
	(literal "/private/var/mobile/Library/Preferences/com.apple.mediaremote.plist")
	(require-all
		(subpath "/private/var/mobile/XcodeBuiltProducts")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(subpath "/Developer")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(subpath "/private/var/mobile/Library/Assets")
		(extension "com.apple.assets.read"))
	(require-all
		(require-not (literal "/private/var/mobile/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(literal "/private/var/mobile/Library/Preferences/com.apple.GEO.plist")
			(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
			(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
			(subpath "/private/var/mobile/Library/Caches/GeoServices")
			(literal "/private/var/mobile/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
			(literal "/private/var/mobile/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
			(literal "/private/var/mobile/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
			(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com[.]apple[.]mediaserverd" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com[.]apple[.]mediaserverd")
			(literal "/private/var/mobile/Library/Preferences/com.apple.persistentconnection.plist")
			(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd$")
			(subpath "/private/var/mobile/Library/ConfigurationProfiles/PublicInfo")
			(literal "/private/var/mobile/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/ptmx")
			(literal "/dev/aes_0")
			(literal "/dev/random")
			(literal "/dev/urandom")
			(literal "/dev/dtracehelper")
			(literal "/dev/null")
			(literal "/dev/zero")
			(require-all
				(require-not (vnode-type BLOCK-DEVICE))
				(require-not (vnode-type CHARACTER-DEVICE))
				(require-any
					(literal "/private/etc/protocols")
					(literal "/private/etc/services")
					(literal "/")
					(literal "/private/etc/hosts")
					(literal "/private/etc/group")
					(literal "/private/etc/passwd")
					(require-all
						(literal "/private/var/mobile/Library/CoreDuet/People/interactionC.db-wal")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/mobile/Library/CoreDuet/People/interactionC.db-shm")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/mobile/Library/CoreDuet/People/interactionC.db-journal")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/mobile/Library/CoreDuet/People/interactionC.db")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/mobile/Library/CoreDuet/People")
						(require-entitlement "com.apple.coreduetd.people"))))
			(require-all
				(vnode-type REGULAR-FILE)
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd$"))
			(require-all
				(vnode-type DIRECTORY)
				(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd$"))
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.bulletinboard.plist")
				(require-entitlement "com.apple.bulletinboard.dataprovider"))
			(require-all
				(regex #"^/private/var/Managed Preferences/mobile/com[.]apple[.].+[.]plist$")
				(require-entitlement "com.apple.bulletinboard.dataprovider"))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(vnode-type TTY)
				(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$")))))
(allow file-read-data
	(regex #"^/private/var/ea/ea[.0-9]+$"))
(allow file-read-metadata)
(allow file-write*
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")
			(subpath "/private/var/mobile/Library/Logs/awd")
			(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]airplay[.]plist")
			(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]voicetrigger[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]voicetrigger[.]notbackedup[.]plist")
			(subpath "/private/var/mobile/Library/VoiceTrigger")
			(subpath "/private/var/mobile/Library/Logs/CrashReporter/VoiceTrigger")
			(literal "/private/var/mobile/Library/Caches/CoreMotion/CoreMotion.log")
			(subpath "/private/var/wireless/Library/Logs/awd")
			(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]avfoundation[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]coremedia[.]plist")
			(regex #"^/private/var/mobile/Library/Logs/CrashReporter/mediaserverd")
			(regex #"^/private/var/mobile/Library/Logs/AirPlay[.]log")
			(subpath "/private/var/logs/mediaserverd")
			(subpath "/private/var/mobile/Library/Caches/com.apple.VideoConference")
			(subpath "/private/var/mobile/Media/DCIM")
			(subpath "/private/var/mobile/Media/Downloads")
			(subpath "/private/var/mobile/Media/iTunes_Control/Music")
			(subpath "/private/var/mobile/Media/iTunes_Control/Ringtones")
			(subpath "/private/var/mobile/Media/PhotoData/CPLAssets")
			(subpath "/private/var/mobile/Media/PhotoData/OutboundSharingTmp")
			(subpath "/private/var/mobile/Media/PhotoData/Sync")
			(subpath "/private/var/mobile/Media/PhotoData/Mutations")
			(subpath "/private/var/mobile/Media/PhotoStreamsData")
			(subpath "/private/var/mobile/Media/Podcasts")
			(subpath "/private/var/mobile/Media/Purchases")
			(subpath "/private/var/mobile/Media/Recordings")
			(subpath "/private/var/tmp")
			(extension "com.apple.mediaserverd.read-write")
			(extension "com.apple.mediaserverd.read")
			(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]mediaaccessibility[.]public[.]plist")
			(regex #"^/private/var/mobile/Library/Preferences/com[.]apple[.]audio[.]penguin[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]audio[.]virtualaudio[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]celestial[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]conference[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]coreaudio[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]coremedia[.]bag[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]facetime[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]facetime[.]bag[.]plist" #"^/private/var/mobile/Library/Preferences/com[.]apple[.]imessage[.]bag[.]plist")
			(subpath "/private/var/mobile/Library/Cookies")
			(require-all
				(require-not (literal "/private/var/mobile/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]mediaserverd$")
					(literal "/private/var/mobile/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
					(literal "/private/var/mobile/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
					(literal "/private/var/mobile/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
					(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/com[.]apple[.]mediaserverd" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/com[.]apple[.]mediaserverd")
					(require-all
						(require-not (vnode-type BLOCK-DEVICE))
						(require-not (vnode-type CHARACTER-DEVICE))
						(literal "/private/var/mobile/Library/CoreDuet/People/interactionC.db-journal")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(vnode-type REGULAR-FILE)
						(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd$"))
					(require-all
						(vnode-type DIRECTORY)
						(regex #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd/" #"^/private/var/mobile/Library/Caches/com[.]apple[.]nsurlsessiond/Downloads/com[.]apple[.]mediaserverd$")))))))
(allow file-write-create
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal "/private/var/mobile/Library/DeviceRegistry")
					(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$")))
			(require-all
				(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_"))
				(require-any
					(require-all
						(vnode-type DIRECTORY)
						(literal "/private/var/mobile/Library/Caches/CoreMotion"))
					(require-all
						(vnode-type DIRECTORY)
						(literal "/private/var/mobile/Library/Logs/CrashReporter"))
					(require-all
						(vnode-type DIRECTORY)
						(literal "/private/var/mobile/Library/Logs"))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(literal "/private/var/mobile/Library/Logs/PersistentConnection")
							(literal "/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection")))
					(require-all
						(vnode-type DIRECTORY)
						(literal "/private/var/mobile/Library/Caches"))
					(require-all
						(vnode-type REGULAR-FILE)
						(extension "com.apple.private.safe-move.send")))))))
(allow file-write-data
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(regex #"^/private/var/ea/ea[.0-9]+$")
			(literal "/dev/ptmx")
			(literal "/dev/aes_0")
			(require-all
				(require-not (literal "/dev/random"))
				(require-not (literal "/dev/urandom"))
				(require-any
					(literal "/dev/dtracehelper")
					(literal "/dev/null")
					(literal "/dev/zero")
					(require-all
						(literal "/private/var/mobile/Library/CoreDuet/People/interactionC.db")
						(require-entitlement "com.apple.coreduetd.people"))))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send"))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(vnode-type TTY)
				(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$")))))
(allow file-write-mode
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-open
	(iokit-user-client-class "IOStreamAudioUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "IOSurfaceSendRight")
	(iokit-user-client-class "IOUSBDeviceInterfaceUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "RootDomainUserClient")
	(iokit-user-client-class "IOAccelContext")
	(iokit-user-client-class "IOAccelDevice")
	(iokit-user-client-class "IOAccelSharedUserClient")
	(iokit-user-client-class "IOAccelSubmitter2")
	(iokit-user-client-class "IOAccelContext2")
	(iokit-user-client-class "IOAccelDevice2")
	(iokit-user-client-class "IOAccelSharedUserClient2")
	(iokit-user-client-class "AppleMobileFileIntegrityUserClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "com_apple_audio_IOBorealisOwlUserClient")
	(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
	(iokit-user-client-class "AppleAVEUserClient")
	(iokit-user-client-class "AppleD5500UserClient")
	(iokit-user-client-class "AppleH2CamInUserClient")
	(iokit-user-client-class "AppleH3CamInUserClient")
	(iokit-user-client-class "AppleH4CamInUserClient")
	(iokit-user-client-class "AppleH6CamInUserClient")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "AppleSPUHIDDriverUserClient")
	(iokit-user-client-class "AppleUSBHostInterfaceUserClient")
	(iokit-user-client-class "AppleVXD375UserClient")
	(iokit-user-client-class "AppleVXE380UserClient")
	(iokit-user-client-class "AppleVXD390UserClient")
	(iokit-user-client-class "AppleVXD393UserClient")
	(iokit-user-client-class "H3H264VideoEncoderDriverUserClient")
	(iokit-user-client-class "IOAccessoryManagerUserClient")
	(iokit-user-client-class "IOAudio2DeviceUserClient")
	(iokit-user-client-class "IOAudio2TransformerUserClient")
	(iokit-user-client-class "IOAudioCodecsUserClient")
	(iokit-user-client-class "IOHIDLibUserClient")
	(iokit-user-client-class "IOHIDResourceDeviceUserClient")
	(iokit-user-client-class "IOReportUserClient"))
(allow iokit-set-properties)
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(ipc-posix-name "shm_pcm_audio_sco_write")
	(ipc-posix-name-regex #"^AppleABL[.]." #"^AppleABL[.].+")
	(ipc-posix-name-regex #"^AppleAURemoteIO[.]." #"^AppleAURemoteIO[.].+")
	(ipc-posix-name-regex #"^AppleAudioQueue[.]." #"^AppleAudioQueue[.].+")
	(ipc-posix-name-regex #"^com[.]apple[.]audio[.]abl[.]")
	(ipc-posix-name-regex #"^shm_notif[.][^.]+[.][RW]$")
	(ipc-posix-name-regex #"^[0-9A-F][0-9A-F]:+[0-9A-F][0-9A-F]-tacl$")
	(ipc-posix-name "shm_pcm_audio_acl")
	(ipc-posix-name "shm_pcm_audio_sco_read")
	(require-all
		(ipc-posix-name-regex #"^/FSM-")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(ipc-posix-name-regex #"^OA-")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(ipc-posix-name-regex #"^stack-logs")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow ipc-posix-shm-read*
	(ipc-posix-name "apple.shm.notification_center")
	(ipc-posix-name-regex #"^apple[.]shm[.]cfprefsd[.]")
	(require-all
		(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow ipc-posix-shm-write-data
	(require-all
		(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow mach-bootstrap)
(allow mach-lookup
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iaptransportd.xpc")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(global-name "com.apple.internal.mediaserverdtracerd")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.lskdd")
	(global-name "com.apple.lskdmsed")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.rtcreportingd")
	(global-name "com.apple.securekeyvaultd")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.springboard.processinvalidation")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.marco")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iTunesStore.daemon")
	(global-name "com.apple.iTunesStore.daemon-notifications")
	(global-name "com.apple.iTunesStore.daemon.deatchwatch")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.gpumemd.source")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.MediaRemote.daemon")
	(global-name "com.apple.MediaRemote.isrunning")
	(global-name "com.apple.MediaRemote.nowplayingserver")
	(global-name "com.apple.geod")
	(global-name "com.apple.nanomaps.xpc.GeoServices")
	(global-name "com.apple.apsd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.CoreAuthentication.daemon.libxpc")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.assertiond.processassertionconnection")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.lsd.icons")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.lsd")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.cfprefsd.daemon")
	(global-name "com.apple.cfprefsd.agent")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.tccd")
	(global-name "com.apple.appsupport.cplogd")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.xpcd")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.hangtracerd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.cookied")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(global-name "com.apple.awdd")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.usernotification.notificationregistrar")
	(global-name "com.apple.usernotification.notificationscheduler")
	(global-name "PurpleSystemAppPort")
	(global-name "PurpleSystemEventPort")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.NetworkLinkConditioner")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.WirelessCoexManager")
	(global-name "com.apple.audio.AUPBRegistrar")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.b184_mcu_commd")
	(global-name "com.apple.b184_monitord")
	(global-name "com.apple.backboard.animation-fence-arbiter")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.carkit.service")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.coremedia.virtualdisplayserver")
	(global-name "com.apple.coresymbolicationd")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.filesystems.userfsd")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iap2d.distributednotification.server")
	(global-name "com.apple.iap2d.xpc")
	(global-name "com.apple.iapd.distributednotification.server")
	(global-name "com.apple.iapd.xpc")
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "platform-application")
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "platform-application")
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-entitlement "com.apple.networkd_privileged")))
(allow mach-register
	(global-name-regex #"^com[.]apple[.]coremedia[.]")
	(global-name "com.apple.midiserver.io"))
(allow network-inbound
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(local tcp "*:*")
			(local udp "*:*"))))
(allow network-outbound
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-not (regex #"^/private/tmp/launchd-[0-9]+[.][^/]+/sock$"))
		(require-any
			(literal "/private/var/run/lockdown.sock")
			(literal "/private/var/run/mDNSResponder")
			(control-name "com.apple.network.statistics")
			(control-name "com.apple.netsrc")
			(remote tcp "*:*")
			(remote udp "*:*")
			(regex #"^/private/var/ea/ea[.0-9]+$")
			(literal "/private/var/run/syslog"))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.audio.penguin")
	(preference-domain "com.apple.audio.virtualaudio")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia.bag")
	(preference-domain "com.apple.facetime")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.VideoProcessing")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.coreanimation")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.preferences-sounds")
	(preference-domain "com.apple.preferences.sounds")
	(preference-domain "com.apple.rtcreporting")
	(preference-domain "com.apple.settings.bluetooth.audio-route")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.VideoConference")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.logging")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.voicetrigger")
	(preference-domain "com.apple.voicetrigger.notbackedup")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.mediaaccessibility.public")
	(preference-domain "com.apple.mediaaccessibility")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.voicetrigger")
	(preference-domain "com.apple.voicetrigger.notbackedup")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.mediaaccessibility.public")
	(preference-domain "com.apple.audio.penguin")
	(preference-domain "com.apple.audio.virtualaudio")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia.bag")
	(preference-domain "com.apple.facetime")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.imessage.bag"))
(allow process-exec*
	(require-all
		(require-not (regex #"/com[.]apple[.]sandbox$" #"/com[.]apple[.]sandbox/" #".+/com[.]apple[.]sandbox$" #".+/com[.]apple[.]sandbox/"))
		(require-any
			(literal "/usr/sbin/mediaserverd")
			(require-all
				(debug-mode)
				(require-any
					(literal "/usr/bin/trace")
					(literal "/usr/bin/syslog"))))))
(allow process-fork
	(debug-mode))
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow signal
	(target self))
(allow sysctl-read)
(allow system-info
	(info-type "net.link.addr"))
(allow system-privilege)
(allow system-sched
	(require-entitlement "com.apple.private.kernel.override-cpumon"))
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
(allow system-suspend-resume)
