(version 1)
(deny default)
(allow file-ioctl
	(literal "/dev/ptmx")
	(literal "/dev/dtracehelper")
	(literal "/dev/uart.log")
	(literal "/dev/aes_0"))
(allow file-issue-extension
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.security.exception.files.absolute-path.read-only"))
	(require-all
		(extension-class "com.apple.sandbox.pty")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+"))
	(require-all
		(require-any
			(require-all
				(extension-class "com.apple.app-sandbox.read-write"))
			(require-all
				(extension-class "com.apple.app-sandbox.read"))
				(extension "com.apple.security.exception.files.absolute-path.read-write"))))
(allow file-read*
	(literal "/dev/zero")
	(literal "/dev/random")
	(literal "/dev/urandom")
	(literal "/dev/aes_0")
	(literal "/dev/ptmx")
	(literal "/dev/dtracehelper")
	(literal "/private/var/mobile/Media/com.apple.itunes.lock_sync")
	(subpath "/private/var/Managed Preferences/mobile")
	(literal "/private/var/mobile/Library/Preferences/com.apple.PeoplePicker.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.AOSNotification.public.notbackedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.AppSupport.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.TelephonyUtilities.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.postwipe.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.public.notbackedup.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.MobileAsset.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.logging.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.conference.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.ids.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.BTServer.airplane.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.BTServer.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.MobileBluetooth.devices.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.MobileBluetooth.ledevices.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.MobileBluetooth.services.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.MobileBluetooth.debug.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.assistant.support.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coreaudio.plist")
	(literal "/private/var/mobile/Library/Preferences/com.apple.coremedia.plist")
	(literal "/private/var/wireless/Library/CallHistory")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db-journal")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db-shm")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db-wal")
	(literal "/Library/Application Support/BTServer")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db-journal")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db-shm")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db-wal")
	(subpath "/private/var/mobile/Library/Logs/Bluetooth")
	(subpath "/private/var/mobile/Library/MobileBluetooth")
	(subpath "/private/var/tmp")
	(literal "/dev/uart.log")
	(subpath "/private/var/wireless/Library/Logs/awd")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(subpath "/private/var/db/timezone")
	(subpath "/usr/lib")
	(subpath "/usr/share")
	(subpath "/System/Library")
	(literal "/private/var/mobile/Library/Preferences/.GlobalPreferences.plist")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(subpath "/System/Library/Frameworks")
	(subpath "/System/Library/PrivateFrameworks")
	(literal "/dev/null")
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(subpath "/private/var/mobile/Library/Assets")
		(extension "com.apple.assets.read"))
	(require-all
		(extension "com.apple.app-sandbox.read-write")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/"))
	(require-all
		(subpath "/Developer")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application"))))
	(require-all
		(subpath "/private/var/tmp")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(subpath "/private/var/mobile/XcodeBuiltProducts")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(require-not (subpath "/dev"))
		(require-any
			(literal "/private/var/mobile/Library/Caches/com.apple.MobileGestalt.plist")
			(subpath "/private/var/mobile/Library/ConfigurationProfiles/PublicInfo")
			(literal "/private/etc/hosts")
			(literal "/private/etc/group")
			(literal "/private/etc/passwd")
			(literal "/private/etc/protocols")
			(literal "/private/etc/services")
			(literal "/")
			(require-all
				(subpath "/private/var/Managed Preferences/mobile")
				(require-entitlement "com.apple.bulletinboard.dataprovider"))
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.bulletinboard.plist")
				(require-entitlement "com.apple.bulletinboard.dataprovider"))))
	(require-all
		(require-any
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
			(require-all
				(subpath "/private/var/mobile/Library/AddressBook"))
				(extension "com.apple.tcc.kTCCServiceAddressBook"))))
(allow file-read-data
	(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
	(literal "/usr/sbin")
	(literal "/usr/sbin/BTServer")
	(subpath "/System")
	(literal "/dev/btwake"))
(allow file-read-metadata
	(literal "/private/var/run/syslog")
	(literal "/private/var/mobile")
	(literal "/private/var/mobile/Library/Preferences")
	(literal "/private/var/mobile/Library/PPTDevice")
	(literal "/Library/Preferences")
	(literal "/usr/sbin/BTServer")
	(literal "/usr/sbin")
	(literal "/private/var/wireless/Library")
	(literal "/private/var/wireless")
	(literal "/private/var/mobile/Library/Preferences/com.apple.carrier.plist")
	(literal "/private/var")
	(vnode-type SYMLINK)
	(vnode-type DIRECTORY)
	(literal "/private/var/mobile/Library/Caches/powerlog.launchd")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive"))
	(require-all
		(require-any
			(require-all
				(literal "/private/var/mobile"))
			(require-all
				(literal "/private/var/mobile/Library/Preferences"))
				(require-entitlement "com.apple.bulletinboard.dataprovider"))))
(allow file-write*
	(literal "/dev/ptmx")
	(literal "/dev/dtracehelper")
	(literal "/private/var/mobile/Media/com.apple.itunes.lock_sync")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db-journal")
	(regex #"^/private/var/mobile/Library/Preferences/com\.apple\.BTServer\.airplane\.plist" #"^/private/var/mobile/Library/Preferences/com\.apple\.BTServer\.plist" #"^/private/var/mobile/Library/Preferences/com\.apple\.MobileBluetooth\.devices\.plist" #"^/private/var/mobile/Library/Preferences/com\.apple\.MobileBluetooth\.ledevices\.plist" #"^/private/var/mobile/Library/Preferences/com\.apple\.MobileBluetooth\.services\.plist" #"^/private/var/mobile/Library/Preferences/com\.apple\.PeoplePicker\.plist")
	(literal "/private/var/wireless/Library/CallHistory")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db-shm")
	(literal "/private/var/wireless/Library/CallHistory/call_history.db-wal")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db-journal")
	(literal "/Library/Application Support/BTServer")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db-shm")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db-wal")
	(subpath "/private/var/mobile/Library/Logs/Bluetooth")
	(subpath "/private/var/mobile/Library/MobileBluetooth")
	(subpath "/private/var/tmp")
	(literal "/private/var/mobile/Library/Logs/CrashReporter/hci")
	(subpath "/private/var/wireless/Library/Logs/awd")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(literal "/dev/aes_0")
	(require-all
		(vnode-type TTY)
		(regex #"^/dev/ttyp[0-9a-f]$" #"^/dev/ptyp[0-9a-f]$"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/private/var/wireless/Library/CallHistory"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "/Library/Application Support/BTServer"))
	(require-all
		(extension "com.apple.app-sandbox.read-write")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[-0-9A-Z]+/"))
	(require-all
		(subpath "/private/var/tmp")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/zero")
			(literal "/dev/null")))
	(require-all
		(require-any
			(require-all
				(literal "/private/var/mobile/Library/Preferences/com.apple.mobilephone.speeddial.plist"))
			(require-all
				(subpath "/private/var/mobile/Library/AddressBook"))
				(extension "com.apple.tcc.kTCCServiceAddressBook"))))
(allow file-write-create
	(require-all
		(require-not (regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send")))
(allow file-write-data
	(literal "/private/var/wireless/Library/CallHistory/call_history.db")
	(literal "/Library/Application Support/BTServer/pincode_defaults.db")
	(literal "/dev/uart.log")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send")))
(allow file-write-unlink
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow iokit-open
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "AppleBasebandUserClient")
	(iokit-user-client-class "RootDomainUserClient")
	(iokit-user-client-class "IOUserEthernetResourceUserClient")
	(iokit-user-client-class "IOHIDResourceDeviceUserClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "AppleMobileFileIntegrityUserClient"))
(allow iokit-get-properties)
(allow ipc-posix-shm*
	(ipc-posix-name "shm_pcm_audio_sco_write")
	(ipc-posix-name-regex #"^..:..:..:..:..:..-tacl$")
	(ipc-posix-name "com.apple.BTServer.magnet.shm")
	(ipc-posix-name "shm_notif.tacl.R")
	(ipc-posix-name "shm_notif.tacl.W")
	(ipc-posix-name "shm_notif.tsco.R")
	(ipc-posix-name "shm_notif.tsco.W")
	(ipc-posix-name "shm_pcm_audio_sco_read")
	(require-all
		(ipc-posix-name-regex #"^/FSM-" #"^OA-" #"^stack-logs" #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
		(require-any
			(debug-mode)
			(require-entitlement "com.apple.private.security.sandbox.debug-mode")
			(require-not (require-entitlement "platform-application")))))
(allow ipc-posix-shm-read*
	(ipc-posix-name "apple.shm.notification_center")
	(ipc-posix-name-regex #"^apple\.shm\.cfprefsd\."))
(allow mach-bootstrap)
(allow mach-lookup
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.networkd")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.cookied")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.hangtracerd")
	(global-name "com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.xpcd")
	(global-name "com.apple.appsupport.cplogd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.cfprefsd.daemon")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.lsd")
	(global-name "com.apple.assertiond.processassertionconnection")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.marco")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.BlueTool")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.springboard.processinvalidation")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.securityd")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.lsd.xpc")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.coremedia.asset")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.awdd")
	(global-name "com.apple.WirelessCoexManager")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.MobileInternetSharing")
	(global-name "com.apple.BTServer.pbap")
	(global-name "com.apple.BTServer.map")
	(global-name "com.apple.BTServer.le")
	(global-name "com.apple.BTServer.avrcp")
	(global-name "com.apple.BTAudioHALPlugin.xpc")
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow network-inbound)
(allow network-outbound)
(allow user-preference-read
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.TelephonyUtilities")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.MobileBluetooth.services")
	(preference-domain "com.apple.BTServer.airplane")
	(preference-domain "com.apple.BTServer")
	(preference-domain "com.apple.MobileBluetooth.devices")
	(preference-domain "com.apple.MobileBluetooth.ledevices")
	(preference-domain "com.apple.icloud.findmydeviced")
	(preference-domain "com.apple.MobileBluetooth.debug")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow user-preference-write
	(preference-domain "com.apple.MobileBluetooth.services")
	(preference-domain "com.apple.BTServer.airplane")
	(preference-domain "com.apple.BTServer")
	(preference-domain "com.apple.MobileBluetooth.devices")
	(preference-domain "com.apple.MobileBluetooth.ledevices")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.PeoplePicker"))
(allow process-info*)
(allow process-info-listpids)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow process-info-dirtycontrol)
(allow process-info-rusage)
(allow pseudo-tty)
(allow signal
	(target self))
(allow sysctl-read)
(allow system-privilege)
(allow system-sched
	(require-entitlement "com.apple.private.kernel.override-cpumon"))
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2)))
