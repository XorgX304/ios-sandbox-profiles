(version 1)
(deny default)
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(literal "/System/Library/")
(literal "/System/Library"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "/System/Library/")
(literal "/System/Library"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.home-relative-path.read-write")
			(extension "com.apple.security.exception.files.absolute-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(extension "com.apple.librarian.ubiquity-container")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(require-any
			(literal "${PROCESS_TEMP_DIR}/")
(literal "${PROCESS_TEMP_DIR}")
			(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit")))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))
(allow file-link
	(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit"))
(allow file-read*
	(extension "com.apple.logd.read-only")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(literal "${FRONTEND_HOME}/Library/Logs/awd/awd-homed.log")
(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/HomeKit")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.VideoConference/logs/homed_")
(literal "${FRONTEND_HOME}/Library/Application Support/com.apple.Home/")
(literal "${FRONTEND_HOME}/Library/Application Support/com.apple.Home")
(literal "${FRONTEND_HOME}/Library/HomeConfiguration/")
(literal "${FRONTEND_HOME}/Library/HomeConfiguration")
(literal "${FRONTEND_HOME}/Library/homed/")
(literal "${FRONTEND_HOME}/Library/homed")
	(literal "/Developer/")
(literal "/Developer")
	(literal "/usr/share/")
(literal "/usr/share")
	(literal "/private/var/db/timezone/")
(literal "/private/var/db/timezone")
	(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
	(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
	(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit")
	(literal "${PROCESS_TEMP_DIR}/")
(literal "${PROCESS_TEMP_DIR}")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "${HOME}/Library/Carrier Bundles/Overlay/")
(literal "${HOME}/Library/Carrier Bundles/Overlay")
	(literal "${HOME}/Library/Preferences/com.apple.carrier.plist")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "${HOME}/Library/Preferences/.GlobalPreferences.plist")
	(literal "/private/var/preferences/Logging/")
(literal "/private/var/preferences/Logging")
	(literal "/System/Library/")
(literal "/System/Library")
	(literal "/usr/lib/")
(literal "/usr/lib")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(extension "com.apple.sandbox.executable")
	(require-all
		(literal "${FRONTEND_HOME}/Library/Application Support/Ubiquity/genstore/")
(literal "${FRONTEND_HOME}/Library/Application Support/Ubiquity/genstore")
		(extension "com.apple.librarian.ubiquity-revision"))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
		(literal "${HOME}/")
(literal "${HOME}"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Application Support/CloudDocs/session/r/")
(literal "${FRONTEND_HOME}/Library/Application Support/CloudDocs/session/r")
		(vnode-type REGULAR-FILE)
		(extension "com.apple.clouddocs.version"))
	(require-all
		(literal "/AppleInternal/")
(literal "/AppleInternal")
		(debug-mode))
	(require-all
		(literal "/usr/local/lib/")
(literal "/usr/local/lib")
		(debug-mode))
	(require-all
		(literal "${HOME}/XcodeBuiltProducts/")
(literal "${HOME}/XcodeBuiltProducts")
		(debug-mode))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
		(literal "${HOME}/")
(literal "${HOME}"))
	(require-all
		(extension "com.apple.identityservices.deliver")
		(literal "${HOME}/Library/IdentityServices/")
(literal "${HOME}/Library/IdentityServices"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(require-not (literal "${FRONTEND_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(literal "/dev/aes_0")
			(literal "/dev/urandom")
(literal "/dev/random")
			(literal "/dev/dtracehelper")
			(literal "/dev/null")
(literal "/dev/zero")
			(literal "${HOME}/Library/ConfigurationProfiles/PublicInfo/")
(literal "${HOME}/Library/ConfigurationProfiles/PublicInfo")
(literal "${HOME}/Library/UserConfigurationProfiles/PublicInfo/")
(literal "${HOME}/Library/UserConfigurationProfiles/PublicInfo")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo/")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library/")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
(literal "/private/var/db/datadetectors/sys/")
(literal "/private/var/db/datadetectors/sys")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/ptmx")
			(literal "${FRONTEND_HOME}/Library/Fonts/")
(literal "${FRONTEND_HOME}/Library/Fonts")
			(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed")
			(literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal "${FRONTEND_HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
			(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
			(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
			(literal "${HOME}/Library/Logs/PersistentConnection/com.apple.homed")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.homed")
			(literal "/private/var/containers/Data/System/com.apple.geod/")
(literal "/private/var/containers/Data/System/com.apple.geod")
			(literal "${HOME}/Library/Preferences/com.apple.carrier.plist")
			(literal "${HOME}/Library/Caches/GeoServices/")
(literal "${HOME}/Library/Caches/GeoServices")
			(literal "${HOME}/Library/Carrier Bundles/Overlay/")
(literal "${HOME}/Library/Carrier Bundles/Overlay")
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
			(require-all
				(literal "/private/var/db/diagnostics/")
(literal "/private/var/db/diagnostics")
				(require-any
					(require-entitlement "com.apple.private.logging.diagnostic")
					(require-entitlement "com.apple.diagnosticd.diagnostic")))
			(require-all
				(literal "/private/var/db/uuidtext/")
(literal "/private/var/db/uuidtext")
				(require-any
					(require-entitlement "com.apple.private.logging.diagnostic")
					(require-entitlement "com.apple.diagnosticd.diagnostic")))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
			(require-all
				(vnode-type TTY)
				(literal "/dev/ttyp[TODO]")
(literal "/dev/ptyp[TODO]"))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(require-any
					(literal "/private/etc/hosts")
					(literal "/private/etc/group")
(literal "/private/etc/passwd")
(literal "/private/etc/protocols")
(literal "/private/etc/services")
					(literal "/")
					(require-all
						(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-journal")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-shm")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-wal")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
						(process-attribute 4)
						(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))
					(require-all
						(literal "${HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal "${HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
						(process-attribute 4)
						(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
				(literal "${FRONTEND_HOME}/")
(literal "${FRONTEND_HOME}"))
			(require-all
				(literal "/private/etc/master.passwd")
				(uid 0))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Assets/")
(literal "${FRONTEND_HOME}/Library/Assets")
				(extension "com.apple.assets.read"))
			(require-all
				(literal "/private/var/MobileAsset/")
(literal "/private/var/MobileAsset")
				(extension "com.apple.assets.read"))
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
				(literal "${HOME}/")
(literal "${HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
				(literal "${HOME}/")
(literal "${HOME}"))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
				(extension "com.apple.tcc.kTCCServiceAddressBook")
				(require-not (require-entitlement "com.apple.Contacts.database-deny")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/AddressBook/")
(literal "${FRONTEND_HOME}/Library/AddressBook")
				(extension "com.apple.tcc.kTCCServiceAddressBook")
				(require-not (require-entitlement "com.apple.Contacts.database-deny"))))))
(allow file-read-data
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision")))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(literal "${FRONTEND_HOME}/Library/Caches")
	(literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal "${FRONTEND_HOME}/Library/Mobile Documents")
	(literal "${FRONTEND_HOME}")
	(literal "${FRONTEND_HOME}/Library/Preferences")
	(literal "${HOME}/Library/Carrier Bundles/")
(literal "${HOME}/Library/Carrier Bundles")
	(literal "${FRONTEND_HOME}/Library/PPTDevice")
	(literal "${FRONTEND_HOME}/Library/Logs/awd")
	(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed")
	(literal "/private/var/run/syslog")
	(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
	(literal "${FRONTEND_HOME}/Library/Caches/powerlog.launchd")
	(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter")
	(literal "${FRONTEND_HOME}/Library")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(vnode-type DIRECTORY)
	(literal "${FRONTEND_HOME}")
	(literal "${FRONTEND_HOME}/Library/Preferences")
	(require-entitlement "com.apple.bulletinboard.dataprovider")
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Caches"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(literal "${FRONTEND_HOME}/")
(literal "${FRONTEND_HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Logs/awd"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection")))
(allow file-read-xattr
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/PerUID/")
(literal "${HOME}/.DocumentRevisions-V100/PerUID")
(literal "/private/var/.DocumentRevisions-V100/PerUID/")
(literal "/private/var/.DocumentRevisions-V100/PerUID")
		(extension "com.apple.revisiond.revision")))
(allow file-write*
	(literal "${FRONTEND_HOME}/Library/Logs/awd/awd-homed.log")
(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/HomeKit")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.VideoConference/logs/homed_")
(literal "${FRONTEND_HOME}/Library/Application Support/com.apple.Home/")
(literal "${FRONTEND_HOME}/Library/Application Support/com.apple.Home")
(literal "${FRONTEND_HOME}/Library/HomeConfiguration/")
(literal "${FRONTEND_HOME}/Library/HomeConfiguration")
(literal "${FRONTEND_HOME}/Library/homed/")
(literal "${FRONTEND_HOME}/Library/homed")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(literal "${PROCESS_TEMP_DIR}/")
(literal "${PROCESS_TEMP_DIR}")
	(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.HomeKit")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "${HOME}/.DocumentRevisions-V100/staging/")
(literal "${HOME}/.DocumentRevisions-V100/staging")
(literal "/private/var/.DocumentRevisions-V100/staging/")
(literal "/private/var/.DocumentRevisions-V100/staging")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(require-not (literal "${FRONTEND_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.homed")
			(literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal "${FRONTEND_HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
			(literal "${HOME}/Library/Logs/PersistentConnection/com.apple.homed")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.homed")
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "${FRONTEND_HOME}/Library/AddressBook/")
				(extension "com.apple.tcc.kTCCServiceAddressBook")
				(require-not (require-entitlement "com.apple.Contacts.database-deny")))
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed/")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.homed"))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/DiagnosticLogs"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Logs/CrashReporter"))
	(require-all
		(require-not (literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "${PROCESS_TEMP_DIR}/")
(literal "${PROCESS_TEMP_DIR}"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Logs/awd"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(literal "/dev/ttyp[TODO]")
(literal "/dev/ptyp[TODO]"))
	(require-all
		(require-not (literal "/dev/urandom")
(literal "/dev/random"))
		(require-any
			(literal "/dev/null")
(literal "/dev/zero")
			(literal "/dev/dtracehelper"))))
(allow file-write-mode
	(require-all
		(extension "com.apple.sandbox.pty")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
(allow file-write-unlink
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "${PROCESS_TEMP_DIR}/")
(literal "${PROCESS_TEMP_DIR}"))
	(require-all
		(extension "com.apple.identityservices.deliver")
		(literal "${HOME}/Library/IdentityServices/")
(literal "${HOME}/Library/IdentityServices")))
(allow file-write-xattr
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
(allow iokit-open
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "IOSurfaceSendRight")
	(iokit-user-client-class "RootDomainUserClient"))
(allow iokit-get-properties)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.ctkd.token-client")
(global-name "com.apple.CoreAuthentication.daemon.libxpc")
(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.hangtracerd")
(global-name "com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.duetknowledged.activity")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.lsd.open")
(global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.assertiond.processassertionconnection")
(global-name "com.apple.xpcd")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.containermanagerd")
(global-name "com.apple.logd.events")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.agent")
(global-name "com.apple.logd")
(global-name "com.apple.system.logger")
	(global-name "com.apple.tccd")
(global-name "com.apple.lsd.advertisingidentifiers")
(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.Honeybee.event-notify")
(global-name "com.apple.PairingManager")
(global-name "com.apple.corefollowup.agent")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.apsd")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.awdd")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.coreduetd.knowledge")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.coresymbolicationd")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(global-name "com.apple.lsd.xpc")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.fig.movie")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.asset")
(global-name "com.apple.coremedia.asset.xpc")
(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.videocompositor")
(global-name "com.apple.coremedia.virtualframebuffer.xpc")
(global-name "com.apple.coremedia.systemcontroller.xpc")
(global-name "com.apple.coremedia.sandboxserver.xpc")
(global-name "com.apple.coremedia.capturesession")
(global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.recorder")
(global-name "com.apple.coremedia.player.xpc")
(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.coremedia.assetimagegenerator")
(global-name "com.apple.coremedia.assetimagegenerator.xpc")
(global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.remaker")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.figcpecryptor")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.marco")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.bird.token")
(global-name "com.apple.FileProvider")
	(global-name "com.apple.bird")
	(global-name "com.apple.librariand")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.GSSCred")
(global-name "com.apple.cookied")
(global-name "com.apple.nsurlstorage-cache")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.helper")
(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
(global-name "com.apple.SystemConfiguration.DNSConfiguration")
(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(require-all
		(global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.request")
		(require-entitlement "com.apple.appstored.install-apps"))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(require-entitlement "com.apple.networkd.advisory_socket")
			(require-entitlement "com.apple.networkd.disable_opportunistic")
			(require-entitlement "com.apple.networkd.modify_settings")
			(require-entitlement "com.apple.networkd.persistent_interface")
			(require-entitlement "com.apple.networkd_privileged")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.appstored.update-apps"))
	(require-all
		(global-name "com.apple.logd.admin")
		(require-any
			(require-entitlement "com.apple.private.logging.diagnostic")
			(require-entitlement "com.apple.diagnosticd.diagnostic")))
	(require-all
		(global-name "com.apple.symptom_diagnostics")
		(require-entitlement "com.apple.symptom_diagnostics.report"))
	(require-all
		(global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.request")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.passd.trusted-device-enrollment-info-provider")
		(require-entitlement "com.apple.private.passkit.trusted-device-enrollment-info"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(global-name "com.apple.springboard.statusbarservices")
		(require-entitlement "com.apple.springboard.statusbarstyleoverrides"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name-regex #".+")))
(allow network*
	(local tcp "*:*")
	(remote udp "*:*")
	(remote tcp "*:*")
	(local udp "*:*"))
(allow network-inbound
	(require-all
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension "com.apple.app-sandbox.read-write")
		(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")))
(allow network-outbound
	(require-all
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$"))
		(require-any
			(remote tcp "*:*")
			(literal "/private/var/run/mDNSResponder")
			(literal "/private/var/run/syslog")
			(control-name "com.apple.network.statistics")
(control-name "com.apple.netsrc")
			(require-all
				(extension "com.apple.app-sandbox.read-write")
				(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents"))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Mobile Documents/")
(literal "${FRONTEND_HOME}/Library/Mobile Documents")
				(require-any
					(extension "com.apple.librarian.ubiquity-container")
					(require-entitlement "com.apple.private.librarian.container-proxy"))))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.demo-settings")
(preference-domain "com.apple.pairedsync")
(preference-domain "com.apple.NanoRegistry")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.VideoConference")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.CoreDuet")
(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.homed")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(preference-domain "com.apple.demo-settings")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow user-preference-write
	(preference-domain "com.apple.homed"))
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow pseudo-tty)
(allow system-privilege)
