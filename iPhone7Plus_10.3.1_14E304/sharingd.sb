(version 1)
(deny default)
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(literal "${HOME}/Library/Caches/com.apple.sharingd/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "${HOME}/Library/Caches/com.apple.sharingd/"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(literal "/System/Library/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "/System/Library/"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(literal "${HOME}/Downloads/com.apple.AirDrop/")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sharing.airdrop.readonly"))
	(require-all
		(literal "${HOME}/Library/Mobile Documents/")
		(extension "com.apple.librarian.ubiquity-container")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(literal "${HOME}/Media/"))
	(require-all
		(literal "${HOME}/Media/Photos/ ${HOME}/Media/PhotosDebug/")
		(require-any
			(extension-class "com.apple.mediaserverd.read")
			(extension-class "com.apple.mediaserverd.read-write")))
	(require-all
		(literal "${HOME}/Media/PhotoData/")
		(require-any
			(extension-class "com.apple.mediaserverd.read")
			(extension-class "com.apple.mediaserverd.read-write")))
	(require-all
		(literal "${HOME}/Media/DCIM/")
		(require-any
			(extension-class "com.apple.mediaserverd.read")
			(extension-class "com.apple.mediaserverd.read-write")))
	(require-all
		(literal "${HOME}/Media/MediaAnalysis/")
		(require-any
			(extension-class "com.apple.mediaserverd.read")
			(extension-class "com.apple.mediaserverd.read-write")))
	(require-all
		(literal "${HOME}/Media/Memories/")
		(require-any
			(extension-class "com.apple.mediaserverd.read")
			(extension-class "com.apple.mediaserverd.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(literal "${HOME}/Media/Photos/ ${HOME}/Media/PhotosDebug/")
			(literal "${HOME}/Media/PhotoData/")
			(literal "${HOME}/Media/DCIM/")
			(literal "${HOME}/Media/MediaAnalysis/")
			(literal "${HOME}/Media/Memories/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(literal "${HOME}/Media/Photos/ ${HOME}/Media/PhotosDebug/")
			(literal "${HOME}/Media/PhotoData/")
			(literal "${HOME}/Media/DCIM/")
			(literal "${HOME}/Media/MediaAnalysis/")
			(literal "${HOME}/Media/Memories/")))
	(require-all
		(literal "${HOME}/Media/PhotoStreamsData/")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(literal "${HOME}/Media/PhotoStreamsData/"))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(literal "${HOME}/Library/Caches/com.apple.sharingd/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable")))
(allow file-read*
	(literal "${HOME}/Library/Caches/Checkpoint.plist")
	(literal "/Developer/")
	(literal "${HOME}")
	(literal "")
	(literal "${HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
	(literal "${HOME}/Media/iTunes_Control/Ringtones/ ${HOME}/Media/iTunes_Control/RingtonesPurchases/")
	(literal "${HOME}/Media/Photos/ ${HOME}/Media/PhotosDebug/")
	(literal "${HOME}/Media/PhotoData/")
	(literal "${HOME}/Media/DCIM/")
	(literal "${HOME}/Media/MediaAnalysis/")
	(literal "${HOME}/Media/Memories/")
	(literal "${HOME}/Media/PhotoStreamsData/")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "${HOME}/Library/Preferences/.GlobalPreferences.plist")
	(literal "/private/var/preferences/Logging/")
	(literal "/System/Library/")
	(literal "/usr/lib/")
	(literal "/usr/share/")
	(literal "/private/var/db/timezone/")
	(literal "${HOME}/Library/Sharing/ ${HOME}/Library/SharingLogs/com.apple.sharingd/")
	(literal "${HOME}/Library/Fonts/")
	(literal "${HOME}/Library/Notes/")
	(literal "${HOME}/Downloads/com.apple.AirDrop/")
	(literal "${HOME}/Media/Recordings/")
	(literal "${HOME}/")
	(literal "/usr/libexec")
	(literal "")
	(literal "/AppleInternal/Applications/Sharing.app/")
	(literal "/private/var")
	(literal "/private")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.sharing.airdrop.readonly")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(extension "com.apple.logd.read-only")
	(require-all
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(literal "${HOME}/Library/Application Support/CloudDocs/session/r/")
		(vnode-type REGULAR-FILE)
		(extension "com.apple.clouddocs.version"))
	(require-all
		(literal "${HOME}/Library/Application Support/Ubiquity/genstore/")
		(extension "com.apple.librarian.ubiquity-revision"))
	(require-all
		(regex #"^/private/var/mobile/Library/Caches/com.apple.notes..+.lock$" #"^/private/var/euser[0-9]+/Library/Caches/com.apple.notes..+.lock$" #"^/private/var/[-0-9A-F]+/Library/Caches/com.apple.notes..+.lock$" #"^/private/var/Users/[^/]+/Library/Caches/com.apple.notes..+.lock$")
		(literal "${HOME}/"))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$")
		(literal "${HOME}/"))
	(require-all
		(literal "/AppleInternal/")
		(debug-mode))
	(require-all
		(literal "/usr/local/lib/")
		(debug-mode))
	(require-all
		(literal "${HOME}/XcodeBuiltProducts/")
		(debug-mode))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
		(literal "${HOME}/"))
	(require-all
		(require-not (literal ""))
		(require-not (literal "${HOME}/Media/"))
		(require-any
			(literal "/dev/urandom /dev/random")
			(literal "/dev/null /dev/zero")
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal "/private/var/preferences/com.apple.security.plist")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(literal "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plistcom.apple.persistentconnection.intervalcache.plist.lock .com.apple.persistentconnection.settings.lock.lock")
			(literal "")
			(literal "${HOME}/Library/Caches/com.apple.sharingd/")
			(literal "${HOME}/Library/Fonts/")
			(literal "/dev/aes_0")
			(literal "/dev/dtracehelper")
			(literal "")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library/ /private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Librarydb/datadetectors/sys/")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/ptmx")
			(require-all
				(literal "${HOME}/Library/AddressBook/")
				(extension "com.apple.tcc.kTCCServiceAddressBook")
				(require-not (require-entitlement "com.apple.Contacts.database-deny")))
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.sharingd/"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.sharingd/"))
			(require-all
				(literal "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
				(extension "com.apple.tcc.kTCCServiceAddressBook")
				(require-not (require-entitlement "com.apple.Contacts.database-deny")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/")
				(literal "${HOME}/"))
			(require-all
				(literal "${HOME}/Library/Assets/")
				(extension "com.apple.assets.read"))
			(require-all
				(literal "/private/var/MobileAsset/")
				(extension "com.apple.assets.read"))
			(require-all
				(extension "com.apple.identityservices.deliver")
				(literal "${HOME}/Library/IdentityServices/"))
			(require-all
				(literal "/private/etc/master.passwd")
				(uid 0))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
			(require-all
				(literal "/private/var/db/diagnostics/")
				(require-any
					(require-entitlement "com.apple.private.logging.diagnostic")
					(require-entitlement "com.apple.diagnosticd.diagnostic")))
			(require-all
				(literal "/private/var/db/uuidtext/")
				(require-any
					(require-entitlement "com.apple.private.logging.diagnostic")
					(require-entitlement "com.apple.diagnosticd.diagnostic")))
			(require-all
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(extension "com.apple.sandbox.pty"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
			(require-all
				(vnode-type TTY)
				(literal ""))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(require-any
					(literal "/private/etc/hosts")
					(literal "/private/etc/group /private/etc/passwd /private/etc/protocols services")
					(literal "/")
					(require-all
						(literal "${HOME}/Library/CoreDuet/People/interactionC.db ${HOME}/Library/CoreDuet/People")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "${HOME}/Library/CoreDuet/People/interactionC.db-journal ${HOME}/Library/CoreDuet/People/interactionC.db-shm ${HOME}/Library/CoreDuet/People/interactionC.db-wal")
						(require-entitlement "com.apple.coreduetd.people"))
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
						(process-attribute 4)
						(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))
					(require-all
						(literal "${HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist ${HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
						(process-attribute 4)
						(require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))))
(allow file-read-data
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.revision")))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(literal "${HOME}/Library/Caches")
	(literal "${HOME}/Library/Logs/PersistentConnection ${HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal "${HOME}/Media/MediaAnalysis/")
	(literal "${HOME}/Media/Memories/")
	(literal "${HOME}/Media/Photos/ ${HOME}/Media/PhotosDebug/")
	(literal "${HOME}/Library/PPTDevice")
	(literal "${HOME}/Library/Logs/awd")
	(literal "${HOME}/Library/Caches/powerlog.launchd")
	(literal "${HOME}/Library/Caches/com.apple.sharingd/")
	(literal "/private/var/run/syslog")
	(literal "${HOME}/Downloads")
	(literal "${HOME}/Library")
	(literal "${HOME}/Library/Mobile Documents")
	(literal "${HOME}")
	(literal "${HOME}/Library/Preferences")
	(literal "${HOME}/Media/PhotoData/")
	(literal "${HOME}/Media/DCIM/")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(vnode-type DIRECTORY)
	(literal "${HOME}")
	(literal "${HOME}/Library/Preferences")
	(require-entitlement "com.apple.bulletinboard.dataprovider")
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Library/Caches"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Library/Logs/PersistentConnection ${HOME}/Library/Logs/CrashReporter/PersistentConnection"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(literal "${HOME}/")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(literal "${HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${HOME}/Library/Preferences")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Downloads"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Media/MediaAnalysis ${HOME}/Media/Memories"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Library/Logs/awd")))
(allow file-read-xattr
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.revision")))
(allow file-write*
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(literal "${HOME}/Media/Photos/ ${HOME}/Media/PhotosDebug/")
	(literal "${HOME}/Media/PhotoData/")
	(literal "${HOME}/Media/DCIM/")
	(literal "${HOME}/Media/MediaAnalysis/")
	(literal "${HOME}/Media/Memories/")
	(literal "${HOME}/Library/Sharing/ ${HOME}/Library/SharingLogs/com.apple.sharingd/")
	(literal "${HOME}/Library/Notes/")
	(literal "${HOME}/Downloads/com.apple.AirDrop/")
	(literal "${HOME}/Media/Recordings/")
	(literal "${HOME}/")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(literal "")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(regex #"^/private/var/mobile/Library/Caches/com.apple.notes..+.lock$" #"^/private/var/euser[0-9]+/Library/Caches/com.apple.notes..+.lock$" #"^/private/var/[-0-9A-F]+/Library/Caches/com.apple.notes..+.lock$" #"^/private/var/Users/[^/]+/Library/Caches/com.apple.notes..+.lock$")
		(literal "${HOME}/"))
	(require-all
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(require-not (literal "${HOME}/Media/"))
		(require-any
			(literal "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plistcom.apple.persistentconnection.intervalcache.plist.lock .com.apple.persistentconnection.settings.lock.lock")
			(literal "${HOME}/Library/Caches/com.apple.sharingd/")
			(literal "")
			(require-all
				(vnode-type DIRECTORY)
				(literal "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.sharingd/"))
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "")
				(extension "com.apple.tcc.kTCCServiceAddressBook")
				(require-not (require-entitlement "com.apple.Contacts.database-deny")))
			(require-all
				(extension "com.apple.sandbox.system-container")
				(require-entitlement "com.apple.security.system-container"))
			(require-all
				(extension "com.apple.sandbox.system-group")
				(require-any
					(require-entitlement "com.apple.security.system-group-containers")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
					(require-entitlement "com.apple.security.system-groups")
					(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/com\.apple\.sharing/")
				(literal "${HOME}/"))
			(require-all
				(vnode-type REGULAR-FILE)
				(literal "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.sharingd/")))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Downloads"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${HOME}/Media/MediaAnalysis ${HOME}/Media/Memories"))
	(require-all
		(require-not (literal ""))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(literal "${HOME}/Library/Caches"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${HOME}/Library/Logs/awd"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${HOME}/Library/Logs/PersistentConnection ${HOME}/Library/Logs/CrashReporter/PersistentConnection")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(literal ""))
	(require-all
		(require-not (literal "/dev/urandom /dev/random"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/null /dev/zero"))))
(allow file-write-flags
	(literal "${HOME}/Downloads"))
(allow file-write-mode
	(literal "${HOME}/Downloads")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-unlink
	(require-all
		(literal "${HOME}/Library/IdentityServices/")
		(extension "com.apple.identityservices.deliver")))
(allow file-write-xattr
	(literal "${HOME}/Downloads")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
(allow iokit-get-properties)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.hangtracerd com.apple.ReportCrash.SimulateCrash")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.duetknowledged.activity com.apple..lsdlsdicons com.apple..open appsupport.cplogd assertiond.processassertionconnection xpcd coreservices.lsuseractivitymanager.xpc")
	(global-name "com.apple.apsd")
	(global-name "com.apple.containermanagerd com.apple.logd.events")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.cfprefsd.daemon com.apple.cfprefsd.agent logd system.logger")
	(global-name "com.apple.tccd com.apple.lsd.advertisingidentifiers com.apple.lsd.openurl")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.MobileInternetSharing")
	(global-name "com.apple.passd.assertions com.apple.passd.library NPKCompanionAgent.library")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.absd")
	(global-name "com.apple.ak.anisette.xpc")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.awdd")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.bulletinboard.settingsconnection")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.coreduetd.context com.apple.coreduetd.knowledgebase")
	(global-name "com.apple.coreservices.appleid.authentication")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.managedconfiguration.profiled")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.studentd")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller")
	(global-name "com.apple.voicememod.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.lsd.modifydb")
	(global-name "com.apple.calaccessd")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.fig.movie")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.assetasset.xpc figcontentkeysession.xpc")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.coremedia.assetcacheinspector com.apple.coremedia.audiodeviceclock.xpc com.apple.coremedia.audioprocessingtap.xpc videocompositor virtualframebuffer.xpc systemcontroller.xpc sandboxserver.xpc capturesession capturesource recorder player.xpc formatreader.xpc")
	(global-name "com.apple.coremedia.assetimagegeneratorassetimagegenerator.xpc remotequeue remaker")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.MediaRemote.daemon com.apple.MediaRemote.isrunning com.apple.MediaRemote.nowplayingserver")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.figcpecryptor")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.marco")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.bird.token com.apple.FileProvider")
	(global-name "com.apple.bird")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.librariand")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SystemConfiguration.helper com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability com.apple.SystemConfiguration.DNSConfiguration com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.ctkd.token-client com.apple.CoreAuthentication.daemon.libxpc com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.GSSCred com.apple.cookied com.apple.nsurlstorage-cache")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name")
		(global-name ""))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.appstored.update-apps"))
	(require-all
		(global-name "com.apple.appstored.xpc.jobmanager com.apple.appstored.xpc.request")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.appstored.xpc.jobmanager com.apple.appstored.xpc.request")
		(require-entitlement "com.apple.appstored.install-apps"))
	(require-all
		(global-name "com.apple.passd.trusted-device-enrollment-info-provider")
		(require-entitlement "com.apple.private.passkit.trusted-device-enrollment-info"))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(require-entitlement "com.apple.networkd.advisory_socket")
			(require-entitlement "com.apple.networkd.disable_opportunistic")
			(require-entitlement "com.apple.networkd.modify_settings")
			(require-entitlement "com.apple.networkd.persistent_interface")
			(require-entitlement "com.apple.networkd_privileged")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(global-name "com.apple.symptom_diagnostics")
		(require-entitlement "com.apple.symptom_diagnostics.report"))
	(require-all
		(global-name "com.apple.logd.admin")
		(require-any
			(require-entitlement "com.apple.private.logging.diagnostic")
			(require-entitlement "com.apple.diagnosticd.diagnostic")))
	(require-all
		(global-name "com.apple.springboard.statusbarservices")
		(require-entitlement "com.apple.springboard.statusbarstyleoverrides"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name")
		(local-name ""))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider")))
(allow network-inbound
	(local tcp "*:*")
	(local udp "*:*")
	(require-all
		(literal "${HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension "com.apple.app-sandbox.read-write")
		(literal "${HOME}/Library/Mobile Documents/")))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.demo-settings com.apple.pairedsync com.apple.NanoRegistry")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.CoreDuet com.apple.PeoplePicker")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.eventkit com.apple.coreduet.logging com.apple.wirelessproxd.debug")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.MultitouchSupport")
	(preference-domain "com.apple.appleaccount")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.mobilenotes")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.Sharing")
	(preference-domain "com.apple.sharingd")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.marco")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(preference-domain "com.apple.demo-settings")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow user-preference-write
	(preference-domain "com.apple.Sharing")
	(preference-domain "com.apple.sharingd"))
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow pseudo-tty)
(allow system-privilege)
