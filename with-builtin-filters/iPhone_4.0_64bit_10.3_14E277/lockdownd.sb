(version 1)
(deny default)
(allow file-link)
(allow file-read*
	(subpath "/usr/share/")
	(subpath "/private/var/db/timezone/")
	(literal "/private/var/preferences/com.apple.security.plist")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/run/lockdown.sock")
	(subpath "/private/var/run/lockdown/")
	(require-any (subpath "/private/var/root/Library/Lockdown/")
(subpath "/private/var/root/Library/Preferences/com.apple.mobile.lockdownd.plist")
(subpath "/private/var/preferences/SystemConfiguration/"))
	(subpath "/Developer/")
	(subpath "/private/var/logs/")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(literal "/dev/aes_0")
	(require-any (literal "/dev/urandom")
(literal "/dev/random"))
	(literal "/dev/dtracehelper")
	(require-any (literal "/dev/null")
(literal "/dev/zero"))
	(require-any (subpath "${HOME}/Library/ConfigurationProfiles/PublicInfo/")
(subpath "${HOME}/Library/UserConfigurationProfiles/PublicInfo/")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo/"))
	(extension "com.apple.logd.read-only")
	(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library/")
(subpath "/private/var/db/datadetectors/sys/"))
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
	(literal "/dev/ptmx")
	(literal "${FRONTEND_HOME}/Library/Caches/Checkpoint.plist")
	(subpath "${HOME}/Media/")
	(require-any (subpath "/Applications/Preferences.app/")
(subpath "/AppleInternal/Lockdown/")
(subpath "/usr/libexec/lockdownd")
(subpath "/private/var/db/launchd.db/com.apple.launchd/overrides.plist"))
	(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
	(literal "/usr/libexec")
	(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
	(subpath "${HOME}/Library/Carrier Bundles/Overlay/")
	(literal "${HOME}/Library/Preferences/com.apple.carrier.plist")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "${HOME}/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/private/var/preferences/Logging/")
	(subpath "/System/Library/")
	(subpath "/usr/lib/")
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
		(subpath "${HOME}/"))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
		(subpath "${HOME}/"))
	(require-all
		(subpath "/AppleInternal/")
		(debug-mode))
	(require-all
		(subpath "/usr/local/lib/")
		(debug-mode))
	(require-all
		(subpath "${HOME}/XcodeBuiltProducts/")
		(debug-mode))
	(require-all
		(literal "/private/etc/master.passwd")
		(uid 0))
	(require-all
		(literal "/private/var/run/lockdown_first_run")
		(vnode-type REGULAR-FILE))
	(require-all
		(require-any (subpath "${HOME}/Applications/")
(subpath "${HOME}/Library/Caches/com.apple.WebAppCache/")
(subpath "${HOME}/Library/Calendar/")
(subpath "${HOME}/Library/Notes/")
(subpath "${HOME}/Library/Voicemail/"))
		(vnode-type DIRECTORY))
	(require-all
		(subpath "${HOME}/Containers/")
		(vnode-type DIRECTORY))
	(require-all
		(subpath "${HOME}/Media/")
		(vnode-type DIRECTORY))
	(require-all
		(subpath "${PROCESS_TEMP_DIR}/MediaCache/")
		(vnode-type DIRECTORY))
	(require-all
		(subpath "/private/var/containers/")
		(vnode-type DIRECTORY))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle$" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/Info\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/Info\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/\.lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/\.lproj$" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/[^/]+\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/[^/]+\.lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/[^/]+\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/[^/]+\.lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.bundle/Info\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.bundle/Info\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.bundle/Info\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj$")
		(subpath "${HOME}/"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(subpath "/private/var/db/diagnostics/")
		(require-any
			(require-entitlement "com.apple.private.logging.diagnostic")
			(require-entitlement "com.apple.diagnosticd.diagnostic")))
	(require-all
		(subpath "/private/var/db/uuidtext/")
		(require-any
			(require-entitlement "com.apple.private.logging.diagnostic")
			(require-entitlement "com.apple.diagnosticd.diagnostic")))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(vnode-type TTY)
		(require-any (literal "/dev/ttyp[a-f0-9]")
(literal "/dev/ptyp[a-f0-9]")))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)
		(require-any
			(literal "/private/etc/hosts")
			(require-any (literal "/private/etc/group")
(literal "/private/etc/passwd")
(literal "/private/etc/protocols")
(literal "/private/etc/services"))
			(subpath "/")
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People"))
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-journal")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-shm")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-wal"))
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
				(process-attribute 4)
				(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))
			(require-all
				(require-any (literal "${HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal "${HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist"))
				(process-attribute 4)
				(require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(subpath "${HOME}/Library/Carrier Bundles/")
	(literal "/private/var/run/syslog")
	(literal "${FRONTEND_HOME}/Library/Caches/powerlog.launchd")
	(literal "${FRONTEND_HOME}")
	(literal "${FRONTEND_HOME}/Library/Preferences")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow file-write*
	(subpath "${HOME}/Media/")
	(require-any (subpath "/private/var/root/Library/Lockdown/")
(subpath "/private/var/root/Library/Preferences/com.apple.mobile.lockdownd.plist")
(subpath "/private/var/preferences/SystemConfiguration/"))
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(subpath "/private/var/logs/")
	(literal "/private/var/run/lockdown.sock")
	(subpath "/private/var/run/lockdown/")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(literal "/private/var/run/lockdown_first_run")
		(vnode-type REGULAR-FILE))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(vnode-type TTY)
		(require-any (literal "/dev/ttyp[a-f0-9]")
(literal "/dev/ptyp[a-f0-9]")))
	(require-all
		(require-not (require-any (literal "/dev/urandom")
(literal "/dev/random")))
		(require-any
			(literal "/dev/dtracehelper")
			(require-any (literal "/dev/null")
(literal "/dev/zero"))))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-mode
	(literal "/private/var/db/timezone")
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-xattr
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
(allow iokit-open
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
	(require-any (iokit-user-client-class "AppleEffaceableStorageUserClient")
(iokit-user-client-class "AppleNANDFTLUserClient")))
(allow iokit-set-properties
	(iokit-property "auto-boot"))
(allow iokit-get-properties)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(require-any (global-name "com.apple.SystemConfiguration.helper")
(global-name "com.apple.SystemConfiguration.PPPController"))
	(require-any (global-name "com.apple.SystemConfiguration.SCNetworkReachability")
(global-name "com.apple.SystemConfiguration.DNSConfiguration")
(global-name "com.apple.SystemConfiguration.NetworkInformation"))
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.AOSNotification")
(global-name "com.apple.mobile.assertion_agent")
(global-name "com.apple.mobile.installation_proxy")
(global-name "com.apple.mobile.insecure_notification_proxy")
(global-name "com.apple.mobile.notification_proxy")
(global-name "com.apple.afcd")
(global-name "com.apple.atc2")
(global-name "com.apple.crashreportcopymobile")
(global-name "com.apple.crash_mover")
(global-name "com.apple.streaming_zip_conduit")
(global-name "com.apple.syslog_relay")
(global-name "lockdown."))
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.mobile.installd")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.wifi.manager")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.ait.client")
	(global-name "com.apple.atc")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.ctkd.token-client")
(global-name "com.apple.CoreAuthentication.daemon.libxpc")
(global-name "com.apple.managedconfiguration.profiled.public"))
	(global-name "com.apple.lockdown.host_watcher")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.webinspector")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.hangtracerd")
(global-name "com.apple.ReportCrash.SimulateCrash"))
	(require-any (global-name "com.apple.duetknowledged.activity")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.lsd.open")
(global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.assertiond.processassertionconnection")
(global-name "com.apple.xpcd")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(require-any (global-name "com.apple.containermanagerd")
(global-name "com.apple.logd.events"))
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.agent")
(global-name "com.apple.logd")
(global-name "com.apple.system.logger"))
	(require-any (global-name "com.apple.tccd")
(global-name "com.apple.lsd.advertisingidentifiers")
(global-name "com.apple.lsd.openurl"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.securityd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.commcenter.xpc")
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.symptom_diagnostics")
		(require-entitlement "com.apple.symptom_diagnostics.report"))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.request"))
		(require-entitlement "com.apple.appstored.install-apps"))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.request"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name"))
	(require-all
		(global-name "com.apple.springboard.statusbarservices")
		(require-entitlement "com.apple.springboard.statusbarstyleoverrides"))
	(require-all
		(global-name "com.apple.logd.admin")
		(require-any
			(require-entitlement "com.apple.private.logging.diagnostic")
			(require-entitlement "com.apple.diagnosticd.diagnostic")))
	(require-all
		(global-name "com.apple.passd.trusted-device-enrollment-info-provider")
		(require-entitlement "com.apple.private.passkit.trusted-device-enrollment-info"))
	(require-all
		(global-name "com.apple.appstored.xpc.updates")
		(require-entitlement "com.apple.appstored.update-apps"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people")))
(allow network-inbound
	(local tcp "*:*")
	(literal "/private/var/run/lockdown.sock")
	(subpath "/private/var/run/lockdown/"))
(allow network-outbound
	(require-all
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-any
			(require-all
				(literal "/private/var/run/lockbot")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$")))
			(require-all
				(literal "/private/var/run/mDNSResponder")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$")))
			(require-all
				(require-any (control-name "com.apple.network.statistics")
(control-name "com.apple.netsrc"))
				(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$")))
			(require-all
				(literal "/private/var/run/syslog")
				(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$"))))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.carrier")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(preference-domain "com.apple.demo-settings")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow pseudo-tty)
(allow system-privilege)
