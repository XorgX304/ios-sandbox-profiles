(version 1)
(deny default)
(allow file-issue-extension
	(extension-class "com.apple.quicklook.readonly")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(extension "com.apple.librarian.ubiquity-container")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(require-all
				(extension "com.apple.sandbox.container")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
				(subpath "${FRONTEND_HOME}/"))
			(require-all
				(extension "com.apple.sandbox.container")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
				(subpath "${FRONTEND_HOME}/"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/SpringBoard/PushStore/Attachments/")
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.usernotifications.attachments.read-only"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library/"))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly"))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache/")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache/")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache/")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/Books/")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/Podcasts/")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/Purchases/")
		(extension "com.apple.tcc.kTCCServiceMediaLibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(extension-class "com.apple.nsurlstorage.extension-cache")
		(require-any (subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/")
(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any (subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/")
(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any (subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/")
(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "${FRONTEND_HOME}/Media/DCIM/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath "${FRONTEND_HOME}/Library/Cookies/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "${FRONTEND_HOME}/Library/Cookies/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(subpath "${FRONTEND_HOME}/Library/Mail/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-only")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-only")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mail/")
		(extension-class "com.apple.mediaserverd.read")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath "${FRONTEND_HOME}/Library/Mail/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "${FRONTEND_HOME}/Library/Mail/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(debug-mode)
		(extension-class "com.apple.sharing.airdrop.readonly")
		(subpath "${FRONTEND_HOME}/Library/Caches/com.apple.navd/NavTraces/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/CallServices/Ringtones/")
		(extension-class "com.apple.mediaserverd.read")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.InCallService")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(subpath "${FRONTEND_HOME}/Library/Calendar/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilecal")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(subpath "${FRONTEND_HOME}/Library/ReplayKit/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ReplayKit.RPVideoEditorExtension")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any (subpath "${FRONTEND_HOME}/Library/OnDemandResources/AssetPacks/")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks/"))
		(extension "com.apple.odr-assets"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any (subpath "${FRONTEND_HOME}/Library/OnDemandResources/AssetPacks/")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks/"))
		(extension "com.apple.odr-assets"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Assets/")
		(extension "com.apple.assets.read")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(subpath "/private/var/MobileAsset/")
		(extension "com.apple.assets.read")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(extension "com.apple.librarian.ubiquity-container")
		(extension-class "com.apple.mediaserverd.read"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.app-sandbox.read-write"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-only")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.absolute-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-only")
				(extension "com.apple.tcc.kTCCServicePhotos"))
			(require-all
				(extension "com.apple.security.exception.files.home-relative-path.read-write")
				(extension "com.apple.tcc.kTCCServicePhotos"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/")
		(extension "com.apple.avasset.read-only")
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/"))))
(allow file-link
	(require-not (subpath "${FRONTEND_HOME}/Media/"))
	(require-all
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow file-map-executable
	(require-any (subpath "/System/Library/Frameworks/")
(subpath "/System/Library/PrivateFrameworks/"))
	(extension "com.apple.sandbox.executable")
	(subpath "/System/Library/")
	(subpath "/usr/lib/")
	(subpath "/Developer/")
	(require-entitlement "com.apple.private.amfi.can-execute-cdhash")
	(require-entitlement "com.apple.private.amfi.can-execute-cdhash")
	(require-all
		(extension "com.apple.app-sandbox.read")
		(require-entitlement "com.apple.private.amfi.can-execute-cdhash"))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/")))
(allow file-read*
	(literal "${HOME}/Library/Preferences/com.apple.carrier.plist")
	(subpath "${HOME}/Library/Carrier Bundles/Overlay/")
	(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
	(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
	(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
		(subpath "${HOME}/"))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Carrier Bundles/")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))
			(require-entitlement "com.apple.security.exception.carrier-bundle.read")))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
		(subpath "${HOME}/"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Application Support/Ubiquity/genstore/")
		(extension "com.apple.librarian.ubiquity-revision"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Application Support/CloudDocs/session/r/")
		(vnode-type REGULAR-FILE)
		(extension "com.apple.clouddocs.version"))
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath "/private/var/.DocumentRevisions-V100/staging/")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath "/private/var/.DocumentRevisions-V100/staging/")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(subpath "/private/var/.DocumentRevisions-V100/staging/")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath "/private/var/.DocumentRevisions-V100/PerUID/")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath "/private/var/.DocumentRevisions-V100/PerUID/")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(vnode-type SYMLINK)
		(subpath "/private/var/.DocumentRevisions-V100/PerUID/")
		(extension "com.apple.revisiond.revision"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(require-not (literal "/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs"))
		(require-any
			(literal "/private/var/Managed Preferences/mobile/com.apple.camera.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.assistant.support.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.appleaccount.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.adtracking.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.WebFoundation.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.MapKit.internal.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.LaunchServices.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.GMM.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.ConfigServer.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.AdLib.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.AOSNotification.public.notbackedup.plist")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")
			(extension "com.apple.sandbox.executable")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.pairedsync.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.NanoRegistry.plist"))
			(literal "/private/var/Managed Preferences/mobile/com.apple.logging.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.demo-settings.plist")
			(require-any (subpath "/System/Library/Frameworks/")
(subpath "/System/Library/PrivateFrameworks/"))
			(subpath "/Developer/")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(literal "${HOME}/Library/Preferences/.GlobalPreferences.plist")
			(subpath "/private/var/preferences/Logging/")
			(subpath "/System/Library/")
			(subpath "/usr/lib/")
			(subpath "/usr/share/")
			(subpath "/private/var/db/timezone/")
			(literal "/private/var/preferences/com.apple.security.plist")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
			(require-any (literal "/private/var/Managed Preferences/mobile/mediaremote.plist")
(literal "/private/var/Managed Preferences/mobile/itdbprepserver.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.voicemail.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.softwareupdateservicesd.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.preferences.network.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.preferences.datetime.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.nike.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.network.eapclient.tls.TrustExceptions.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.mobilevpn.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.mobiletimer.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.mobilestoresettings.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.mobileme.fmf.assistant.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.mobile.SyncMigrator.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.messagesbadgecontroller.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.managedconfiguration.janitor.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.madrid.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.itdbprep.server.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.imagent.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.gamekit.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.certui.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.atc.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.apsd.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.XCTest.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.VoiceMemos.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.OTASyncState.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.MobileAddressBook.plist"))
			(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.aggregated.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.youtubeframework.plist"))
			(literal "/private/var/Managed Preferences/mobile/com.apple.videos.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.ubd.plist")
			(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.preferences-sounds.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.celestial.plist"))
			(literal "/private/var/Managed Preferences/mobile/com.apple.preferences.sounds.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.persistentconnection.plist")
			(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.persistentconnection-mcc.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.dataaccess.dataaccessd.plist"))
			(literal "/private/var/Managed Preferences/mobile/com.apple.mobileslideshow.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.mobilenotes.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.mms_override.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.mmcs.plist")
			(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.TTY.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.iqagent.plist"))
			(literal "/private/var/Managed Preferences/mobile/com.apple.imessage.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.imdsmsrecordstore.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.gamed.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.compass.plist")
			(require-all
				(subpath "${FRONTEND_HOME}/Library/SpringBoard/PushStore/Attachments/")
				(extension "com.apple.usernotifications.attachments.read-only"))
			(require-all
				(subpath "/AppleInternal/")
				(debug-mode))
			(require-all
				(subpath "/usr/local/lib/")
				(debug-mode))
			(require-all
				(subpath "${HOME}/XcodeBuiltProducts/")
				(debug-mode))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.books.plist")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Cookies")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm"))
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
				(require-any
					(require-entitlement "com.apple.media.ringtones.read-only")
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilemail"))))
			(require-all
				(require-any (subpath "${FRONTEND_HOME}/Media/Purchases/")
(subpath "${FRONTEND_HOME}/Media/iTunes_Control/Ringtones/"))
				(require-any
					(require-entitlement "com.apple.media.ringtones.read-only")
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilemail"))))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.AppStore.plist")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.MobileStore.plist")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache/")
				(require-entitlement "com.apple.itunesstored.private"))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
				(require-any
					(require-entitlement "com.apple.system.get-wallpaper")
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
(literal "${FRONTEND_HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
(literal "${FRONTEND_HOME}/Library/SpringBoard/LockBackground.cpbitmap")
(literal "${FRONTEND_HOME}/Library/SpringBoard/HomeBackground.cpbitmap"))
				(require-any
					(require-entitlement "com.apple.system.get-wallpaper")
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
(literal "${FRONTEND_HOME}/Library/SpringBoard/LockVideo.mov")
(literal "${FRONTEND_HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
(literal "${FRONTEND_HOME}/Library/SpringBoard/HomeVideo.mov")
(literal "${FRONTEND_HOME}/Library/SpringBoard/OriginalHomeVideo.mov")
(literal "${FRONTEND_HOME}/Library/SpringBoard/OriginalLockVideo.mov"))
				(require-any
					(require-entitlement "com.apple.system.get-wallpaper")
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
				(require-entitlement "com.apple.media.ringtones.read-write"))
			(require-all
				(require-any (subpath "${FRONTEND_HOME}/Media/Purchases/")
(subpath "${FRONTEND_HOME}/Media/iTunes_Control/Ringtones/"))
				(require-entitlement "com.apple.media.ringtones.read-write"))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
				(require-any
					(require-entitlement "com.apple.media.ringtones.read-only")
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilemail"))))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Calendar/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/DataAccess/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Logs/Mail/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.assistant.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.nanoprefsyncd.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.stocks.watchkitextension")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Safari/")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilesafari")
						(entitlement-value "com.apple.webbookmarksd")
						(entitlement-value "com.apple.safarifetcherd")
						(entitlement-value "com.apple.Safari.SocialHelper")
						(entitlement-value "com.apple.mobilemail")
						(entitlement-value "com.apple.mobilenotes"))))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.youtube.dp.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilesafari")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Cookies/")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilesafari")
						(entitlement-value "com.apple.webbookmarksd")
						(entitlement-value "com.apple.safarifetcherd")
						(entitlement-value "com.apple.Safari.SocialHelper"))))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.WebFoundation.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.webbookmarksd")
						(entitlement-value "com.apple.safarifetcherd")
						(entitlement-value "com.apple.Safari.SocialHelper")
						(entitlement-value "com.apple.mobilesafari"))))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/Safari/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilesafari")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/DCIM/")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilesafari")
						(entitlement-value "com.apple.webapp"))))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/Caches/com.apple.notes.objectcreation.lock")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.notes.sharedstore.lock"))
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilemail")
						(entitlement-value "com.apple.mobilenotes"))))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Notes/")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilemail")
						(entitlement-value "com.apple.mobilenotes"))))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.stocks.watchkitextension")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Mail/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.OTASyncState.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.dataaccess.launchd")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.OTASyncAgent.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.MailAccount-ExtProperties.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(require-any (subpath "/Library/Application Support/Mail/Plugins/")
(subpath "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist")
(subpath "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Caches/DataAccess/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.skyhookwireless.wps.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.NanoMailKit.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.GMM.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.weather.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.nanoprefsyncd.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/GeoJSON")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/SMS/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/CallServices/Ringtones/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.InCallService")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.ios.StoreKitUIService")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-shm")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices/AppPurchaseHistory.6.sqlitedb-wal"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.ios.StoreKitUIService")))
			(require-all
				(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.Carousel$")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.PassbookUIService")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.cloud.quota.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.PassbookUIService")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/")
(subpath "${HOME}/Library/ConfigurationProfiles/")
(subpath "${HOME}/Library/UserConfigurationProfiles/"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.demo-settings.plist")
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.DataAccess.BehaviorOptions.plist")
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
				(require-entitlement "com.apple.system.set-alert-tone"))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(require-any (literal "${HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.nanoprefsyncd.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.PassbookUIService")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.stocks\.bridge$")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.stocks.watchkitextension")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.internal.Voltaire.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Maps")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.mail.composition.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
				(subpath "${FRONTEND_HOME}/")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/Podcasts/")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/Books/")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/Purchases/")
				(extension "com.apple.tcc.kTCCServiceMediaLibrary")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/iTunes_Control/")
				(extension "com.apple.tcc.kTCCServiceMediaLibrary")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(require-any (subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/")
(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.cloud.quota.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.iCloudDriveApp")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.homesharing.plist")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.medialibrary.plist")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb")
(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes"))
				(extension "com.apple.tcc.kTCCServiceMediaLibrary")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm")
(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
				(extension "com.apple.tcc.kTCCServiceMediaLibrary")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Cookies")
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm"))
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(literal "/usr/libexec")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.safarifetcherd")
						(entitlement-value "com.apple.webbookmarksd"))))
			(require-all
				(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilesafari")
						(require-any (entitlement-value "com.apple.Maps")
(entitlement-value "com.apple.SafariViewService"))
						(entitlement-value "com.apple.webapp"))))
			(require-all
				(require-any (literal "${HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal "${HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist"))
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilesafari")
						(require-any (entitlement-value "com.apple.Maps")
(entitlement-value "com.apple.SafariViewService"))
						(entitlement-value "com.apple.webapp"))))
			(require-all
				(subpath "${FRONTEND_HOME}/Library/WebClips/")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilesafari")
						(entitlement-value "com.apple.webapp"))))
			(require-all
				(require-not (regex #"^/private/var/mobile/Library/Preferences/com.apple.apsalerts.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.apsalerts.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.apsalerts.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.apsalerts.plist"))
				(require-any
					(require-all
						(subpath "${FRONTEND_HOME}/Library/AddressBook/")
						(extension "com.apple.tcc.kTCCServiceAddressBook")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.mobilecal.alarmengine.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.locationd.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.GEO.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.AppSupport.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(subpath "${HOME}/Library/Carrier Bundles/Overlay/")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "${HOME}/Library/Preferences/com.apple.carrier.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.CoreDuet.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.mobilecal.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.icloud.findmydeviced.public.notbackedup.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.icloud.findmydeviced.postwipe.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.AOSNotification.public.notbackedup.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.PeoplePicker.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(subpath "${FRONTEND_HOME}/Library/Fonts/")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.iokit.IOMobileGraphicsFamily.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")
						(extension "com.apple.tcc.kTCCServiceAddressBook")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(literal "/private/var/Managed Preferences/mobile/com.apple.DataMigration.plist")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(extension "com.apple.sandbox.application-group")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath "${FRONTEND_HOME}/")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(extension "com.apple.sandbox.application-group")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
						(subpath "${FRONTEND_HOME}/")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(require-any (subpath "${FRONTEND_HOME}/Media/iTunes_Control/Artwork/")
(subpath "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/"))
						(extension "com.apple.tcc.kTCCServiceMediaLibrary"))
					(require-all
						(require-not (literal "${FRONTEND_HOME}/Library/Caches/GeoServices/tguid.bin"))
						(require-any
							(literal "/private/var/Managed Preferences/mobile/com.apple.telephonyutilities.dialassist.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.preferences.sounds.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.mt.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.UIKit.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.Accessibility.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.CoreMotion.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.Sharing.plist")
							(subpath "${FRONTEND_HOME}/Library/Caches/com.apple.UIStatusBar/")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache/")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist")
							(subpath "${FRONTEND_HOME}/Library/Fonts/")
							(literal "/private/var/Managed Preferences/mobile/com.apple.EmojiPreferences.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.Preferences.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.iapd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.assistant.backedup.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.assistant.support.plist")
							(extension "com.apple.app-sandbox.read-write")
							(extension "com.apple.app-sandbox.read")
							(literal "${FRONTEND_HOME}/Library/Caches/Checkpoint.plist")
							(require-any (subpath "${FRONTEND_HOME}/Library/VoiceServices/Assets/")
(subpath "${FRONTEND_HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice/")
(subpath "${FRONTEND_HOME}/Library/Dictionaries/")
(subpath "/private/var/Managed Preferences/mobile/com.apple.voiceservices.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.VoiceOverTouch.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.SpeakSelection.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.WebUI.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.InputModePreferences.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.lookup.shared.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.preferences/SystemConfiguration/com.apple.sinaweibo.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.preferences/SystemConfiguration/com.apple.twitter.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.preferences/SystemConfiguration/com.apple.facebook.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.preferences/SystemConfiguration/com.apple.linkedin.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.preferences/SystemConfiguration/com.apple.linkedin.plistLibrary/Dictionaries/"))
							(literal "/private/var/Managed Preferences/mobile/com.apple.keyboard.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.nanoprefsyncd.plist")
							(literal "/com.apple.xpc.launchd.bootstrap.plist")
							(subpath "${FRONTEND_HOME}/Library/Caches/com.apple.keyboards/")
							(literal "/private/var/Managed Preferences/mobile/com.apple.MobileAsset.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.GEO.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.da.plist")
							(literal "${FRONTEND_HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.mediaremote.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.camera.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.mobileslideshow.plist")
							(require-any (subpath "${FRONTEND_HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist")
(subpath "/Library/Ringtones/"))
							(subpath "${HOME}/Library/Caches/GeoServices/")
							(subpath "/private/var/containers/Data/System/com.apple.geod/")
							(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.opengl.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.Metal.plist"))
							(literal "/private/var/Managed Preferences/mobile/com.apple.iokit.IOMobileGraphicsFamily.plist")
							(literal "${FRONTEND_HOME}/Library/Caches/DateFormats.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.MapKit.internal.plist")
							(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.mediaaccessibility.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.coreanimation.plist"))
							(literal "/private/var/Managed Preferences/mobile/com.apple.marco.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.logging.plist")
							(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
							(literal "${HOME}/Library/Preferences/.GlobalPreferences.plist")
							(require-all
								(subpath "${FRONTEND_HOME}/Library/Assets/")
								(extension "com.apple.assets.read"))
							(require-all
								(subpath "/private/var/MobileAsset/")
								(extension "com.apple.assets.read"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.ToneLibrary$")
								(subpath "${FRONTEND_HOME}/"))
							(require-all
								(require-any (subpath "${FRONTEND_HOME}/Media/PhotoData/Metadata/")
(subpath "${FRONTEND_HOME}/Media/PhotoData/Sync/FaceAlbumThumbnails/")
(subpath "${FRONTEND_HOME}/Media/PhotoData/syncInfo.plist")
(subpath "${FRONTEND_HOME}/Media/PhotoData/Thumbnails/"))
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(literal "/private/var/Managed Preferences/mobile/com.apple.coreaudio.plist")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
								(subpath "${FRONTEND_HOME}/"))
							(require-all
								(subpath "${FRONTEND_HOME}/Media/")
								(extension "com.apple.avasset.read-only")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(literal "/private/var/Managed Preferences/mobile/com.apple.coremedia.plist")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath "/private/var/.DocumentRevisions-V100/PerUID/")
								(extension "com.apple.revisiond.revision"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath "/private/var/.DocumentRevisions-V100/PerUID/")
								(extension "com.apple.revisiond.revision"))
							(require-all
								(vnode-type SYMLINK)
								(subpath "/private/var/.DocumentRevisions-V100/PerUID/")
								(extension "com.apple.revisiond.revision"))
							(require-all
								(literal "/private/var/Managed Preferences/mobile/com.apple.avfoundation.plist")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath "/private/var/.DocumentRevisions-V100/staging/")
								(extension "com.apple.revisiond.staging"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath "/private/var/.DocumentRevisions-V100/staging/")
								(extension "com.apple.revisiond.staging"))
							(require-all
								(vnode-type SYMLINK)
								(subpath "/private/var/.DocumentRevisions-V100/staging/")
								(extension "com.apple.revisiond.staging"))
							(require-all
								(subpath "${FRONTEND_HOME}/Library/Application Support/CloudDocs/session/r/")
								(vnode-type REGULAR-FILE)
								(extension "com.apple.clouddocs.version"))
							(require-all
								(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
								(require-any
									(extension "com.apple.librarian.ubiquity-container")
									(require-entitlement "com.apple.private.librarian.container-proxy")))
							(require-all
								(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
								(subpath "${FRONTEND_HOME}/"))
							(require-all
								(subpath "${FRONTEND_HOME}/Library/Application Support/Ubiquity/genstore/")
								(extension "com.apple.librarian.ubiquity-revision"))
							(require-all
								(require-any (subpath "${FRONTEND_HOME}/Library/OnDemandResources/AssetPacks/")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks/"))
								(extension "com.apple.odr-assets"))
							(require-all
								(extension "com.apple.replayd.read-only")
								(subpath "${FRONTEND_HOME}/Library/ReplayKit/"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/\.GlobalPreferences$")
								(subpath "${FRONTEND_HOME}/"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
								(subpath "${FRONTEND_HOME}/"))
							(require-all
								(literal "/private/var/Managed Preferences/mobile/com.apple.itunesstored.plist")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(literal "/private/var/Managed Preferences/mobile/com.apple.mobileipod.plist")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(literal "/private/var/Managed Preferences/mobile/com.apple.corevideo.plist")
								(extension "com.apple.tcc.kTCCServicePhotos"))
							(require-all
								(extension "com.apple.tcc.kTCCServicePhotos")
								(literal "${FRONTEND_HOME}/Media/PhotoData/Photos.sqlite")
								(process-attribute 4))
							(require-all
								(require-not (require-any (subpath "${FRONTEND_HOME}/Library/FairPlay/")
(subpath "/usr/sbin/fairplayd")))
								(require-not (subpath "${FRONTEND_HOME}/Media/"))
								(require-any
									(literal "/dev/ptmx")
									(literal "/dev/aes_0")
									(require-any (literal "/dev/random")
(literal "/dev/urandom"))
									(literal "/dev/dtracehelper")
									(require-any (literal "/dev/null")
(literal "/dev/zero"))
									(require-any (subpath "/private/var/db/datadetectors/sys/")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library/"))
									(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo/")
(subpath "${HOME}/Library/ConfigurationProfiles/PublicInfo/")
(subpath "${HOME}/Library/UserConfigurationProfiles/PublicInfo/"))
									(literal "${HOME}/Library/Caches/com.apple.MobileGestalt.plist")
									(require-all
										(extension "com.apple.sandbox.system-container")
										(require-entitlement "com.apple.security.system-container"))
									(require-all
										(extension "com.apple.sandbox.system-container")
										(require-entitlement "com.apple.security.system-container"))
									(require-all
										(extension "com.apple.sandbox.system-group")
										(require-any
											(require-entitlement "com.apple.security.system-groups")
											(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
											(require-entitlement "com.apple.security.system-group-containers")
											(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
									(require-all
										(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
										(extension "com.apple.sandbox.pty"))
									(require-all
										(extension "com.apple.sandbox.system-group")
										(require-any
											(require-entitlement "com.apple.security.system-groups")
											(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
											(require-entitlement "com.apple.security.system-group-containers")
											(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
									(require-all
										(literal "/private/var/Managed Preferences/mobile/com.apple.bulletinboard.plist")
										(require-entitlement "com.apple.bulletinboard.dataprovider"))
									(require-all
										(vnode-type TTY)
										(require-any (literal "/dev/ttyp[a-f0-9]")
(literal "/dev/ptyp[a-f0-9]")))
									(require-all
										(vnode-type BLOCK-DEVICE)
										(vnode-type CHARACTER-DEVICE)
										(require-any
											(subpath "/")
											(literal "/private/etc/hosts")
											(require-any (literal "/private/etc/group")
(literal "/private/etc/passwd")
(literal "/private/etc/protocols")
(literal "/private/etc/services"))
											(require-all
												(require-any (literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People"))
												(require-entitlement "com.apple.coreduetd.people"))
											(require-all
												(require-any (literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-journal")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-shm")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-wal"))
												(require-entitlement "com.apple.coreduetd.people")))))))))))))
(allow file-read-data
	(require-all
		(vnode-type SOCKET)
		(literal "${HOME}/Library/ExternalAccessory/ea")))
(allow file-read-metadata
	(vnode-type DIRECTORY)
	(vnode-type SYMLINK)
	(literal "${FRONTEND_HOME}")
	(literal "/private/var/run/syslog")
	(literal "${FRONTEND_HOME}/Library/Preferences")
	(subpath "${HOME}/Library/Carrier Bundles/")
	(literal "${FRONTEND_HOME}/Library/Caches/powerlog.launchd")
	(literal "${FRONTEND_HOME}/Library")
	(literal "${FRONTEND_HOME}/Library/Caches/com.apple.DictionaryServices")
	(literal "${FRONTEND_HOME}/Library/PPTDevice")
	(literal "/private/var")
	(literal "${FRONTEND_HOME}/Library/GameKit/Data")
	(literal "/private/var/run/printd")
	(literal "${FRONTEND_HOME}/Library/Mobile Documents")
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Caches/sharedCaches")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Caches/sharedCaches")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Caches/sharedCaches")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Caches/sharedCaches")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(require-any (literal "${FRONTEND_HOME}/Library/com.apple.iTunesStore")
(literal "${FRONTEND_HOME}/Library/com.apple.iTunesStore/LocalStorage"))
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Caches")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.ios.StoreKitUIService")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.PassbookUIService")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.PassbookUIService")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(subpath "${HOME}/Library/Carrier Bundles/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(subpath "${FRONTEND_HOME}/")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Caches")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (literal "${FRONTEND_HOME}/Library/com.apple.iTunesStore")
(literal "${FRONTEND_HOME}/Library/com.apple.iTunesStore/LocalStorage"))
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata\.plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata\.plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata\.plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata\.plist$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Caches/com.apple.DictionaryServices"))
	(require-all
		(literal "${FRONTEND_HOME}")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send")))
(allow file-write*
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(require-all
		(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Cookies")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(require-any (literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm"))
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Cookies")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/WebClips/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webapp"))))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.youtube.dp.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Cookies/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper"))))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Safari/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilesafari")
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper")
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(require-any (literal "${FRONTEND_HOME}/Library/Caches/com.apple.notes.objectcreation.lock")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.notes.sharedstore.lock"))
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Notes/")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.mobilemail")
				(entitlement-value "com.apple.mobilenotes"))))
	(require-all
		(require-any (literal "${HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Calendar/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/DataAccess/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Logs/Mail/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
		(subpath "${FRONTEND_HOME}/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mail/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.OTASyncState.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.OTASyncAgent.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.MailAccount-ExtProperties.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.mail.composition.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.cloud.quota.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com\.apple\.NanoMail")
		(subpath "${FRONTEND_HOME}/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")
		(subpath "${FRONTEND_HOME}/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.internal.Voltaire.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.assistant.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.skyhookwireless.wps.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.NanoMailKit.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.GMM.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/GeoJSON")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/SMS/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")
		(subpath "${FRONTEND_HOME}/")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/AddressBook/")
		(extension "com.apple.tcc.kTCCServiceAddressBook")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(require-not (literal "${FRONTEND_HOME}/Library/Preferences/com.apple.springboard.plist"))
		(require-not (literal "${FRONTEND_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-not (literal "${FRONTEND_HOME}/Library/Caches/DateFormats.plist"))
		(require-any
			(require-any (literal "${HOME}/Library/Preferences/com.apple.Preferences.plist")
(literal "${HOME}/Library/Preferences/com.apple.EmojiPreferences.plist"))
			(subpath "${FRONTEND_HOME}/Library/Caches/com.apple.keyboards/")
			(extension "com.apple.app-sandbox.read-write")
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
				(require-any
					(extension "com.apple.librarian.ubiquity-container")
					(require-entitlement "com.apple.private.librarian.container-proxy")))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath "/private/var/.DocumentRevisions-V100/staging/")
				(extension "com.apple.revisiond.staging"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath "/private/var/.DocumentRevisions-V100/staging/")
				(extension "com.apple.revisiond.staging"))
			(require-all
				(vnode-type SYMLINK)
				(subpath "/private/var/.DocumentRevisions-V100/staging/")
				(extension "com.apple.revisiond.staging"))
			(require-all
				(subpath "${FRONTEND_HOME}/Media/")
				(require-any
					(require-all
						(extension "com.apple.sandbox.system-container")
						(require-entitlement "com.apple.security.system-container"))
					(require-all
						(extension "com.apple.sandbox.system-group")
						(require-any
							(require-entitlement "com.apple.security.system-groups")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
							(require-entitlement "com.apple.security.system-group-containers")
							(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))))))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath "/private/var/.DocumentRevisions-V100/staging/")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath "/private/var/.DocumentRevisions-V100/staging/")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(vnode-type SYMLINK)
		(subpath "/private/var/.DocumentRevisions-V100/staging/")
		(extension "com.apple.revisiond.staging"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.springboard.plist")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/Ringtones.plist")
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(require-any (subpath "${FRONTEND_HOME}/Media/Purchases/")
(subpath "${FRONTEND_HOME}/Media/iTunes_Control/Ringtones/"))
		(require-entitlement "com.apple.media.ringtones.read-write"))
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache/")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.itunesstored.plist")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Cookies")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(require-any (literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-wal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Library/Cookies/com.apple.itunesstored.2.sqlitedb-shm"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Cookies")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/Books/")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/iTunes_Control/")
		(extension "com.apple.tcc.kTCCServiceMediaLibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(require-any (subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/")
(subpath "${FRONTEND_HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Music")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.cloud.quota.plist")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(require-any (literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb")
(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes"))
		(extension "com.apple.tcc.kTCCServiceMediaLibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(require-any (literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal")
(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm")
(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))
		(extension "com.apple.tcc.kTCCServiceMediaLibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Media/iTunes_Control/iTunes")
		(extension "com.apple.tcc.kTCCServiceMediaLibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.mobileipod.plist")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.itunesstored.plist")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2"))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/DeviceRegistry")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(require-not (literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches/sharedCaches")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(vnode-type DIRECTORY)
				(require-any (literal "${FRONTEND_HOME}/Library/com.apple.iTunesStore")
(literal "${FRONTEND_HOME}/Library/com.apple.iTunesStore/LocalStorage"))
				(require-any
					(require-entitlement "com.apple.private.signing-identifier"
						(entitlement-value "com.apple.mobilesafari"))
					(require-entitlement "com.apple.private.signing-identifier"
						(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
					(require-entitlement "com.apple.container2")))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches")
				(require-entitlement "com.apple.private.signing-identifier"
					(require-any
						(entitlement-value "com.apple.mobilemail")
						(entitlement-value "com.apple.mobilenotes"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any (literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.dataaccess.launchd")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.mobilemail")))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches/com.apple.storeservices")
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.ios.StoreKitUIService")))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches/com.apple.DictionaryServices"))
			(require-all
				(require-not (require-any (literal "${FRONTEND_HOME}/Library/Preferences/com.apple.Accessibility.plist")
(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.UIKit.plist")))
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Caches/sharedCaches")
				(require-entitlement "com.apple.itunesstored.private")))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(vnode-type TTY)
		(require-any (literal "/dev/ttyp[a-f0-9]")
(literal "/dev/ptyp[a-f0-9]")))
	(require-all
		(require-not (require-any (literal "/dev/random")
(literal "/dev/urandom")))
		(require-any
			(literal "/dev/dtracehelper")
			(require-any (literal "/dev/null")
(literal "/dev/zero"))))
	(require-all
		(vnode-type SOCKET)
		(literal "${HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty")))
(allow file-write-mode
	(require-all
		(extension "com.apple.sandbox.pty")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
(allow file-write-unlink
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/Podcasts/")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(subpath "${FRONTEND_HOME}/Media/Purchases/")
		(extension "com.apple.tcc.kTCCServiceMediaLibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences/com.apple.dataaccess.launchd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-write-xattr
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
(allow iokit-open
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(require-any (iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelSharedUserClient")
(iokit-user-client-class "IOAccelSharedUserClient2")
(iokit-user-client-class "IOAccelSubmitter2"))
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "IOHIDLibUserClient")
	(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
	(iokit-user-client-class "IOSurfaceSendRight")
	(extension "com.apple.security.exception.iokit-user-client-class")
	(require-all
		(iokit-user-client-class "AppleMobileFileIntegrityUserClient")
		(require-entitlement "com.apple.private.amfi.can-load-cdhash"))
	(require-all
		(iokit-user-client-class "AppleKeyStoreUserClient")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(iokit-user-client-class "IOMobileFramebufferUserClient")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(iokit-user-client-class "IOSurfaceRootUserClient")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(iokit-user-client-class "RootDomainUserClient")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail"))))
(allow iokit-get-properties
	(require-any (iokit-property "gyro-interrupt-calibration")
(iokit-property "compass-calibration")
(iokit-property "IOClass")
(iokit-property "IOClassNameOverride")
(iokit-property "IORegistryEntryPropertyKeys"))
	(require-entitlement "com.apple.system.diagnostics.iokit-properties")
	(require-all
		(require-any (iokit-property "3d-imagery")
(iokit-property "3d-maps")
(iokit-property "navigation")
(iokit-property "adaptive-ui"))
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "name")
		(iokit-user-client-class "IOService"))
	(require-all
		(require-any (iokit-property "BSD Name")
(iokit-property "HiddenInterface")
(iokit-property "IO80211Band")
(iokit-property "IO80211RSNDone")
(iokit-property "IO80211ChannelFrequency")
(iokit-property "IO80211ChannelBandwidth")
(iokit-property "IO80211Channel")
(iokit-property "IORequiredPacketFilters")
(iokit-property "IOPrimaryInterface")
(iokit-property "IOMediaHeaderLength")
(iokit-property "IOMediaAddressLength")
(iokit-property "IOMaxTransferUnit")
(iokit-property "IONetworkRootType")
(iokit-property "IONetworkData")
(iokit-property "IOInterfaceUnit")
(iokit-property "IOInterfaceType")
(iokit-property "IOInterfaceState")
(iokit-property "IOInterfaceNamePrefix")
(iokit-property "IOInterfaceFlags")
(iokit-property "IOInterfaceExtraFlags")
(iokit-property "IOFeatures")
(iokit-property "IOControllerEnabled")
(iokit-property "IOBuiltin")
(iokit-property "IOActivePacketFilters")
(iokit-property "NetworkConfigurationOverrides"))
		(iokit-user-client-class "IONetworkInterface"))
	(require-all
		(iokit-property "name")
		(iokit-user-client-class "IONetworkInterface"))
	(require-all
		(iokit-property "IOFeatures")
		(iokit-user-client-class "IONetworkController"))
	(require-all
		(iokit-property "SupportAlwaysOnCompass")
		(iokit-user-client-class "AppleSPUHIDDriver"))
	(require-all
		(require-any (iokit-property "bitrate-")
(iokit-property "encoding")
(iokit-property "decoding")
(iokit-property "tnr-mode"))
		(iokit-user-client-class "IOService"))
	(require-all
		(require-any (iokit-property "auto-focus")
(iokit-property "flash")
(iokit-property "front-")
(iokit-property "front-max-video-")
(iokit-property "front-hdr")
(iokit-property "front-flash-capability")
(iokit-property "front-burst")
(iokit-property "front-burst-image-duration")
(iokit-property "front-auto-hdr")
(iokit-property "video-stills")
(iokit-property "video-cap")
(iokit-property "rear-slowmo")
(iokit-property "rear-max-video-")
(iokit-property "rear-max-slomo-video-fps-")
(iokit-property "rear-hdr")
(iokit-property "rear-hdr-on")
(iokit-property "rear-burst")
(iokit-property "rear-burst-image-duration")
(iokit-property "rear-auto-hdr")
(iokit-property "post-effects")
(iokit-property "panorama")
(iokit-property "live-photo-capture")
(iokit-property "live-effects"))
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "name")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "product-id")
		(iokit-user-client-class "IOService"))
	(require-all
		(require-any (iokit-property "display-rotation")
(iokit-property "display-scale")
(iokit-property "software-behavior")
(iokit-property "no-sdio-devices"))
		(iokit-user-client-class "IOService"))
	(require-all
		(require-any (iokit-property "#address-cells")
(iokit-property "AAPL,phandle")
(iokit-property "unique-chip-id")
(iokit-property "uid-aes-key")
(iokit-property "system-trusted")
(iokit-property "software-bundle-version")
(iokit-property "security-domain")
(iokit-property "secure-boot")
(iokit-property "root-matching")
(iokit-property "random-seed")
(iokit-property "production-cert")
(iokit-property "board-id")
(iokit-property "bootp-response")
(iokit-property "boot-nonce")
(iokit-property "mix-n-match-prevention-status")
(iokit-property "mac-address-wifi0")
(iokit-property "mac-address-ethernet0")
(iokit-property "mac-address-bluetooth0")
(iokit-property "image4-supported")
(iokit-property "gid-aes-key")
(iokit-property "firmware-version")
(iokit-property "effective-security-mode-sep")
(iokit-property "effective-security-mode-ap")
(iokit-property "effective-production-status-sep")
(iokit-property "effective-production-status-ap")
(iokit-property "dram-vendor")
(iokit-property "dram-vendor-id")
(iokit-property "die-id")
(iokit-property "development-cert")
(iokit-property "debug-enabled")
(iokit-property "crypto-hash-method")
(iokit-property "consistent-debug-root")
(iokit-property "chip-id")
(iokit-property "chip-epoch")
(iokit-property "certificate-security-mode")
(iokit-property "certificate-production-status"))
		(require-entitlement "fairplay-client")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "name")
		(require-entitlement "fairplay-client")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "boot-manifest-hash")
		(require-entitlement "fairplay-client")
		(iokit-user-client-class "IOService"))
	(require-all
		(require-any (iokit-property "device_type")
(iokit-property "device-type"))
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "soc-generation")
		(process-attribute 4)
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(require-any (iokit-property "AdapterInfo")
(iokit-property "AtCriticalLevel")
(iokit-property "Voltage")
(iokit-property "MaxCapacity")
(iokit-property "IsCharging")
(iokit-property "FullyCharged")
(iokit-property "ExternalConnected")
(iokit-property "ExternalChargeCapable")
(iokit-property "CurrentCapacity")
(iokit-property "CapacityEstimated"))
		(iokit-connection "IOPMPowerSource"))
	(require-all
		(require-any (iokit-property "battery-data")
(iokit-property "BatteryData")
(iokit-property "Serial"))
		(require-entitlement "fairplay-client")
		(iokit-connection "IOPMPowerSource"))
	(require-all
		(require-any (iokit-property "model")
(iokit-property "region-info")
(iokit-property "regulatory-model-number"))
		(iokit-user-client-class "IOPlatformExpertDevice"))
	(require-all
		(require-any (iokit-property "DisplayPipePlaneBaseAlignment")
(iokit-property "DisplayPipeStrideRequirements")
(iokit-property "hdcp-hoover-protocol"))
		(iokit-user-client-class "IOMobileFramebuffer"))
	(require-all
		(iokit-property "PerformanceStatistics")
		(iokit-user-client-class "IOMobileFramebuffer"))
	(require-all
		(iokit-property "AppleJPEG")
		(iokit-user-client-class "AppleJPEGDriver"))
	(require-all
		(require-any (iokit-property "AGXParameterBufferMaxSize")
(iokit-property "BaseAddressAlignmentRequirement")
(iokit-property "PerformanceStatisticsAccum")
(iokit-property "IOGLES")
(iokit-property "InternalStatisticsAccm")
(iokit-property "InternalStatistics")
(iokit-property "MetalPluginName")
(iokit-property "MetalPluginClassName"))
		(iokit-user-client-class "IOAcceleratorES"))
	(require-all
		(iokit-property "PerformanceStatistics")
		(iokit-user-client-class "IOAcceleratorES"))
	(require-all
		(iokit-property "Protocol Characteristics")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "udid-version")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-connection "AppleSynopsysOTGDevice")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-property-regex #"die-id$" #"chip-id$" #"board-id$" #".+((die|chip)|board)-id$")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-property "boot-manifest-hash")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(require-any (iokit-property "root-ticket-hash")
(iokit-property "IOCPUID")
(iokit-property "device-imei")
(iokit-property "backlight-marketing-table"))
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(require-any (iokit-property "IOAccessoryBatteryPack")
(iokit-property "IOAccessoryInterfaceDeviceInfo")
(iokit-property "IOAccessoryID")
(iokit-property "IODeviceMemory")
(iokit-property "controllers")
(iokit-property "config-number")
(iokit-property "CrashReporter-ID")
(iokit-property "Device Characteristics")
(iokit-property "AppleDiagnostic"))
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-property-regex #"[Cc]alibration" #".+[Cc]alibration")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-property-regex #"UUID" #"-uuid" #".+UUID" #".+-uuid")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-property-regex #"serial-number" #"SerialNum" #"-snum" #".+serial-number" #".+SerialNum" #".+-snum")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")))
	(require-all
		(iokit-property-regex #"-mac-address" #"mac-address-" #".+-mac-address" #".+mac-address-")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")
			(require-entitlement "com.apple.wifi.manager-access")))
	(require-all
		(iokit-property "IOMACAddress")
		(require-any
			(require-entitlement "fairplay-client")
			(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))
			(require-entitlement "com.apple.system.get-hardware-identifiers")
			(require-entitlement "com.apple.wifi.manager-access")))
	(require-all
		(iokit-property "iommu-present")
		(iokit-user-client-class "IOPlatformDevice")))
(allow ipc-posix-sem
	(semaphore-owner self)
	(require-all
		(extension "com.apple.sandbox.application-group")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow ipc-posix-shm*
	(require-any (ipc-posix-name "stack-logs")
(ipc-posix-name "OA-")
(ipc-posix-name "/FSM-"))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow ipc-posix-shm-read*
	(require-any (ipc-posix-name "apple.shm.notification_center")
(ipc-posix-name "apple.cfprefs."))
	(ipc-posix-name-regex #"^Apple MIDI in [0-9]+$" #"^Apple MIDI out [0-9]+$")
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(require-all
		(ipc-posix-name-regex #"^AppleABL\.." #"^AppleABL\..+")
		(require-entitlement "inter-app-audio")))
(allow ipc-posix-shm-write-create
	(ipc-posix-name-regex #"^/mono\.[0-9]+$"))
(allow ipc-posix-shm-write-data
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$")
	(ipc-posix-name-regex #"^Apple MIDI in [0-9]+$" #"^Apple MIDI out [0-9]+$")
	(require-all
		(ipc-posix-name-regex #"^AppleABL\.." #"^AppleABL\..+")
		(require-entitlement "inter-app-audio")))
(allow ipc-posix-shm-write-unlink
	(ipc-posix-name-regex #"^gdt-[0-9A-Za-z]+-c$" #"^gdt-[0-9A-Za-z]+-s$"))
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.fig.movie")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.coremedia.admin")
	(require-any (global-name "com.apple.coremedia.asset")
(global-name "com.apple.coremedia.asset.xpc"))
	(require-any (global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.capturesession")
(global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.videocompositor")
(global-name "com.apple.coremedia.recorder"))
	(require-any (global-name "com.apple.coremedia.assetimagegenerator")
(global-name "com.apple.coremedia.assetimagegenerator.xpc")
(global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.remotequeue"))
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.assertiond.processassertionconnection")
(global-name "com.apple.xpcd")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.lsd.open")
(global-name "com.apple.lsd")
(global-name "com.apple.duetknowledged.activity"))
	(require-any (global-name "com.apple.tccd")
(global-name "com.apple.lsd.advertisingidentifiers")
(global-name "com.apple.lsd.openurl"))
	(global-name "com.apple.coremedia.endpoint.xpc")
	(require-any (global-name "com.apple.logd.events")
(global-name "com.apple.containermanagerd"))
	(require-any (global-name "com.apple.logd")
(global-name "com.apple.system.logger")
(global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.agent"))
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.pegasus")
	(require-any (global-name "com.apple.bird.token")
(global-name "com.apple.FileProvider"))
	(global-name "com.apple.bird")
	(global-name "com.apple.librariand")
	(global-name "com.apple.revisiond")
	(require-any (global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
(global-name "com.apple.pairedsyncd.syncstate"))
	(global-name "com.apple.lsd.mapdb")
	(require-any (global-name "com.apple.ReportCrash.SimulateCrash")
(global-name "com.apple.hangtracerd"))
	(require-any (global-name "com.apple.usymptomsd")
(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
(global-name "com.apple.SystemConfiguration.DNSConfiguration")
(global-name "com.apple.SystemConfiguration.NetworkInformation"))
	(require-any (global-name "com.apple.symptomsd")
(global-name "com.apple.trustd")
(global-name "com.apple.commcenter.cupolicy.xpc")
(global-name "com.apple.SystemConfiguration.helper")
(global-name "com.apple.SystemConfiguration.PPPController"))
	(global-name "com.apple.securityd")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.nehelper")
	(require-any (global-name "com.apple.GSSCred")
(global-name "com.apple.cookied")
(global-name "com.apple.cfnetwork.AuthBrokerAgent")
(global-name "com.apple.cfnetwork.cfnetworkagent")
(global-name "com.apple.nsurlstorage-cache"))
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.ctkd.token-client")
(global-name "com.apple.CoreAuthentication.daemon.libxpc")
(global-name "com.apple.managedconfiguration.profiled.public"))
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(require-any (global-name "PurplePPTServer")
(global-name "com.apple.dataaccess.dataaccessd.active")
(global-name "com.apple.passd.in-app-payment"))
	(global-name "PurpleSystemAppPort")
	(global-name "PurpleSystemEventPort")
	(require-any (global-name "com.apple.AdSheetPad.server")
(global-name "com.apple.AdSheetPhone.server")
(global-name "com.apple.MediaControl.daemon")
(global-name "com.apple.MobileAccessoryUpdater")
(global-name "com.apple.MobileFileIntegrity")
(global-name "com.apple.Music.MPMusicPlayerMigServer")
(global-name "com.apple.ReportCrash")
(global-name "com.apple.ReportCrash.DirectoryService")
(global-name "com.apple.ReportCrash.Jetsam")
(global-name "com.apple.ReportCrash.SafetyNet")
(global-name "com.apple.ReportCrash.StackShot")
(global-name "com.apple.VoiceOverTouch.xpc")
(global-name "com.apple.airplay.sender.xpc")
(global-name "com.apple.appleprofilepolicyd")
(global-name "com.apple.assetsd.keepDaemonAlive")
(global-name "com.apple.assetsd.messagingServer")
(global-name "com.apple.assetsd.notificationServer")
(global-name "com.apple.audio.AudioConverterServer")
(global-name "com.apple.audio.AudioFileServer")
(global-name "com.apple.audio.AudioUnitServer")
(global-name "com.apple.backboard.checkin")
(global-name "com.apple.backboard.watchdog")
(global-name "com.apple.backboard.workspaceserverconnection")
(global-name "com.apple.bypassBasebandAutoBooter.msgport")
(global-name "com.apple.callkit.callsourcehost")
(global-name "com.apple.clouddbd")
(global-name "com.apple.commcenter.dm-helper")
(global-name "com.apple.commcenter.mobile-helper")
(global-name "com.apple.coremedia.audioprocessingtap")
(global-name "com.apple.coremedia.cpe")
(global-name "com.apple.coremedia.cpe.xpc")
(global-name "com.apple.coremedia.cpeprotector")
(global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.decompressionsession")
(global-name "com.apple.coremedia.formatreader")
(global-name "com.apple.coremedia.formatreader.xpc")
(global-name "com.apple.coremedia.videoqueue")
(global-name "com.apple.coremedia.wirelessdisplay")
(global-name "com.apple.coremedia.wirelessdisplayserver")
(global-name "com.apple.cvmsCompAgent_armv7")
(global-name "com.apple.datamigrator.dz")
(global-name "com.apple.distributed_notifications@0v3")
(global-name "com.apple.gamed.note")
(global-name "com.apple.iTunesStore.daemon.notifications.public")
(global-name "com.apple.iTunesStore.daemon.public")
(global-name "com.apple.iapauthd")
(global-name "com.apple.iapauthd.xpc")
(global-name "com.apple.imavagent.embedded.auth")
(global-name "com.apple.instruments.server.mig")
(global-name "com.apple.mDNSResponder")
(global-name "com.apple.managedconfiguration.mdmdpush-dev")
(global-name "com.apple.managedconfiguration.mdmdpush-prod")
(global-name "com.apple.managedconfiguration.mdmdservice")
(global-name "com.apple.mediastream.sharing-nowake")
(global-name "com.apple.midiserver")
(global-name "com.apple.mobile.softwareupdated")
(global-name "com.apple.mobileipod.MPMusicPlayerControllerInternal")
(global-name "com.apple.mobileipod.MPMusicPlayerMigServer")
(global-name "com.apple.mobileipod.MPMusicPlayerMigServerExists")
(global-name "com.apple.parsecd")
(global-name "com.apple.prdaily")
(global-name "com.apple.sandboxd")
(global-name "com.apple.scrod")
(global-name "com.apple.spotlight.SearchAgent")
(global-name "com.apple.springboard.UIKit.migserver")
(global-name "com.apple.springboard.alerts")
(global-name "com.apple.springboard.remotenotifications")
(global-name "com.apple.springboard.watchdogserver")
(global-name "com.apple.telephonyutilities.callservicesdaemon.voip")
(global-name "com.apple.telephonyutilities.remotelogdaemon")
(global-name "com.apple.testmanagerd")
(global-name "com.apple.videoconference.avconference")
(global-name "com.apple.vsassetd")
(global-name "com.apple.wapi.client")
(global-name "com.apple.watchconnectivity.complication")
(global-name "com.apple.wcd")
(global-name "com.apple.weibod.server"))
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.FSEvents")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.GameController.gamecontrollerd")
	(require-any (global-name "com.apple.MediaRemote.daemon")
(global-name "com.apple.MediaRemote.isrunning")
(global-name "com.apple.MediaRemote.nowplayingserver"))
	(global-name "com.apple.MobileInternetSharing")
	(require-any (global-name "com.apple.Music.MPMusicPlayerControllerInternal")
(global-name "com.apple.Music.MPMusicPlayerMigServerExists"))
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.mediaremoted.xpc")
	(require-any (global-name "com.apple.passd.assertions")
(global-name "com.apple.passd.library")
(global-name "com.apple.NPKCompanionAgent.library"))
	(require-any (global-name "com.apple.siri.context.service")
(global-name "com.apple.KeyboardServices.TextReplacementService")
(global-name "com.apple.UIKit.pasteboardd")
(global-name "com.apple.UIKit.KeyboardManagement")
(global-name "com.apple.pasteboard.pasted")
(global-name "com.apple.dictationd.recognition")
(global-name "com.apple.airplaydiagnostics.server")
(global-name "com.apple.accessibility.gax.backboard")
(global-name "com.apple.ondemandd.client")
(global-name "com.apple.voiceservices.keepalive")
(global-name "com.apple.TextInput.shortcuts")
(global-name "com.apple.TextInput.rdt")
(global-name "com.apple.TextInput.emoji")
(global-name "com.apple.TextInput")
(global-name "UIASTNotificationCenter")
(global-name "ScripterServer"))
	(global-name-regex #"^com\.apple\.uikit\.viewservice\..+")
	(require-any (global-name "com.apple.TextInput.lexicon-server")
(global-name "com.apple.uikit.GestureServer")
(global-name "com.apple.UIKit.KeyboardManagement.hosted")
(global-name "com.apple.backboard.TouchDeliveryPolicyServer")
(global-name "com.apple.backboard.hid.focus")
(global-name "com.apple.iphone.axserver-systemwide")
(global-name "com.apple.frontboard.workspace"))
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.VoiceOverTouch")
	(require-any (global-name "com.apple.assertiond.extension")
(global-name "com.apple.WebBookmarks.webbookmarksd")
(global-name "com.apple.webfilterd"))
	(global-name "com.apple.ait.client")
	(global-name "com.apple.apsd")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.atc")
	(require-any (global-name "com.apple.audio.hapticd")
(global-name "com.apple.audio.AURemoteIOServer")
(global-name "com.apple.accessibility.mediaaccessibilityd")
(global-name "com.apple.assistant.dictation"))
	(global-name "com.apple.awdd")
	(global-name "com.apple.accessibility.AXBackBoardServer")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.certui.relay")
	(global-name "com.apple.cloudd")
	(local-name "com.apple.assistant.contextprovider.")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.coremedia.audiodeviceclock")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.coremedia.compressionsession")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.assistant.analytics")
	(require-any (global-name "com.apple.coremedia.mutablecomposition")
(global-name "com.apple.coremedia.mutablecomposition.xpc"))
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.corerecents.recentsd")
	(global-name "com.apple.coreservices.appleid.authentication")
	(global-name "com.apple.coresymbolicationd")
	(require-any (global-name "com.apple.cvmsServ")
(global-name "com.apple.gpumemd.source"))
	(global-name "com.apple.dataaccess.dataaccessd")
	(require-any (global-name "com.apple.ExternalAccessory.distributednotification.server")
(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server"))
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.gamecenter")
	(global-name "com.apple.gamed")
	(global-name "com.apple.gizmoappd")
	(require-any (global-name "com.apple.homed.xpc")
(global-name "com.apple.iap2d.distributednotification.server")
(global-name "com.apple.iap2d.xpc")
(global-name "com.apple.iapd.distributednotification.server")
(global-name "com.apple.iapd.xpc")
(global-name "com.apple.iaptransportd.xpc"))
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.backboard.animation-fence-arbiter")
	(require-any (global-name "com.apple.iap2d")
(global-name "com.apple.iaptransportd"))
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.iapd")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.assertiond.expiration")
	(global-name "com.apple.itdbprep.server")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.mDNSResponderHelper")
	(global-name "com.apple.UIKit.statusbarserver")
	(global-name "com.apple.medialibraryd.xpc")
	(global-name "com.apple.mediastream.sharing")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.midiserver.io")
	(global-name "com.apple.mobile.installd")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.sharingd.nsxpc")
	(global-name "com.apple.sharingd")
	(global-name "com.apple.mobilemail.services.xpc")
	(global-name "com.apple.networking.captivenetworksupport")
	(global-name "com.apple.notificationcenter.widgetcontrollerconnection")
	(global-name "com.apple.marco")
	(global-name "com.apple.safarifetcherd")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(global-name "com.apple.server.bluetooth.le.pipe.xpc")
	(require-any (global-name "com.apple.iTunesStore.daemon")
(global-name "com.apple.iTunesStore.daemon-notifications")
(global-name "com.apple.iTunesStore.daemon.deatchwatch"))
	(global-name "com.apple.springboard")
	(global-name "com.apple.springboard.blockableservices")
	(global-name "com.apple.springboard.icongeneration")
	(global-name "com.apple.springboard.processinvalidation")
	(global-name "com.apple.syncdefaultsd")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.webinspector")
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(global-name "com.apple.suggestd.suggestionmanager")
		(require-entitlement "com.apple.private.suggestions"))
	(require-all
		(global-name "com.apple.suggestd.contacts")
		(require-entitlement "com.apple.private.suggestions.contacts"))
	(require-all
		(global-name "com.apple.SystemConfiguration.PPPController-priv")
		(require-entitlement "com.apple.networking.vpn.configuration"))
	(require-all
		(global-name "com.apple.suggestd.events")
		(require-entitlement "com.apple.private.suggestions.events"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name"))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.updates"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.suggestd.mail")
		(require-entitlement "com.apple.private.suggestions.mail"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(global-name "com.apple.suggestd.spotlight")
		(require-entitlement "com.apple.private.suggestions.spotlight"))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(require-entitlement "com.apple.networkd.advisory_socket")
			(require-entitlement "com.apple.networkd.disable_opportunistic")
			(require-entitlement "com.apple.networkd.modify_settings")
			(require-entitlement "com.apple.networkd.persistent_interface")
			(require-entitlement "com.apple.networkd_privileged")))
	(require-all
		(global-name "com.apple.audio.AudioSession")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.springboard.backgroundappservices")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.itunescloudd.xpc")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.parsec.subscriptionservice")
		(require-entitlement "com.apple.smoot.subscriptionservice"))
	(require-all
		(global-name "com.apple.FileCoordination")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(global-name "com.apple.FileCoordination")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.PassbookUIService")))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.PassbookUIService")))
	(require-all
		(global-name "com.apple.bulletinboard.observerconnection")
		(require-entitlement "com.apple.bulletinboard.observer"))
	(require-all
		(global-name "com.apple.bulletinboard.settingsconnection")
		(require-entitlement "com.apple.bulletinboard.settings"))
	(require-all
		(global-name "com.apple.bulletinboard.systemstateconnection")
		(require-entitlement "com.apple.bulletinboard.systemstate"))
	(require-all
		(global-name "com.apple.assistant.analytics")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(require-any (global-name "com.apple.nanomaps.xpc.Navigation")
(global-name "com.apple.nanomaps.xpc.Maps"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.routined.registration")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.nanomaps.xpc.GeoServices.Navigation")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.Maps.mapspushd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.Maps.SpringBoard")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(global-name "com.apple.bulletinboard.utilitiesconnection")
		(require-entitlement "com.apple.bulletinboard.utilities"))
	(require-all
		(global-name "com.apple.mobilestoredemod")
		(require-entitlement "com.apple.private.mobilestoredemo.enabledemo"))
	(require-all
		(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
		(require-any
			(require-entitlement "com.apple.private.imcore.imremoteurlconnection")
			(require-entitlement "com.apple.private.ids.remoteurlconnection")))
	(require-all
		(global-name "com.apple.biometrickitd")
		(require-entitlement "com.apple.private.bmk.allow"))
	(require-all
		(local-name "com.apple.iphone.axserver")
		(require-entitlement "com.apple.accessibility.api"))
	(require-all
		(global-name "com.apple.icfcallserver")
		(require-entitlement "com.apple.private.icfcallserver"))
	(require-all
		(global-name "com.apple.icloud.findmydeviced")
		(require-any
			(require-entitlement "com.apple.aosnotification.aosnotifyd-access")
			(require-entitlement "com.apple.icloud.findmydeviced.access")))
	(require-all
		(global-name "com.apple.absd")
		(require-entitlement "abs-client"))
	(require-all
		(global-name "com.apple.managedconfiguration.profiled")
		(require-entitlement "com.apple.managedconfiguration.profiled-access"))
	(require-all
		(global-name "com.apple.familycircle.agent")
		(require-entitlement "com.apple.private.familycircle"))
	(require-all
		(global-name "com.apple.mobile.keybagd.UserManager.xpc")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.mobile.keybagd.xpc")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.backupd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.personad.xpc")
		(require-any
			(require-entitlement "com.apple.private.persona.read")
			(require-entitlement "com.apple.private.persona.write")
			(require-entitlement "com.apple.private.contactsui")))
	(require-all
		(global-name "com.apple.adid")
		(require-entitlement "adi-client"))
	(require-all
		(global-name "com.apple.absd")
		(require-entitlement "absinthe-client"))
	(require-all
		(global-name "com.apple.absinthed")
		(require-entitlement "absinthe-client"))
	(require-all
		(global-name "com.apple.aps.alertprovider.xpc")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.coreduetd")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.lskdd")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.unfreed")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.fig.movie")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.mediaserverd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.admin")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (global-name "com.apple.coremedia.asset")
(global-name "com.apple.coremedia.asset.xpc"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.pegasus")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.capturesession")
(global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.videocompositor")
(global-name "com.apple.coremedia.recorder"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (global-name "com.apple.coremedia.assetimagegenerator")
(global-name "com.apple.coremedia.assetimagegenerator.xpc")
(global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.remotequeue"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.endpoint.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coremedia.sandboxserver")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.itunescloudd.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.routined.registration")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.AOSNotification")
		(require-entitlement "com.apple.aosnotification.aosnotifyd-access"))
	(require-all
		(global-name "com.apple.safarifetcherd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(global-name "com.apple.rtcreportingd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(global-name "com.apple.mobilesafari-settings")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebSheet")))
	(require-all
		(global-name "com.apple.itunescloudd.xpc")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(global-name "com.apple.audio.AudioSession")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.springboard.backgroundappservices")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.medialibraryd.xpc")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(global-name "com.apple.mobilemail")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.FileCoordination")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.mobile.keybagd.xpc")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")))
	(require-all
		(global-name "com.apple.springboard.statusbarservices")
		(require-entitlement "com.apple.springboard.statusbarstyleoverrides"))
	(require-all
		(global-name "com.apple.fig.movie")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.mediaserverd")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.admin")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(require-any (global-name "com.apple.coremedia.asset")
(global-name "com.apple.coremedia.asset.xpc"))
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.pegasus")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(require-any (global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.capturesession")
(global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.videocompositor")
(global-name "com.apple.coremedia.recorder"))
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(require-any (global-name "com.apple.coremedia.assetimagegenerator")
(global-name "com.apple.coremedia.assetimagegenerator.xpc")
(global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.remotequeue"))
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.endpoint.xpc")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.coremedia.sandboxserver")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(global-name "com.apple.parsec.subscriptionservice.internal")
		(require-entitlement "com.apple.private.subscriptionservice.internal"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(global-name "com.apple.harvestd.manager")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.coreduetd")
		(require-entitlement "com.apple.coreduetd.allow"))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.allow"))
	(require-all
		(global-name "com.apple.siri.vocabularyupdates")
		(require-any
			(require-entitlement "com.apple.siri.synapse")
			(require-entitlement "com.apple.developer.siri")))
	(require-all
		(global-name "com.apple.cache_delete")
		(require-any
			(require-entitlement "com.apple.mobile.deleted.AllowFreeSpace")
			(require-entitlement "com.apple.private.CacheDelete")))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.cmfsyncagent.embedded.auth")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.identityservicesd.idquery.embedded.auth")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.accountsd.accountmanager")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.ABDatabaseDoctor")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.spotlight.IndexAgent")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.locationd.registration")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.locationd.synchronous")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.locationd.spi")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.bulletindistributord.server")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(global-name "com.apple.identityservicesd.embedded.auth")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (global-name "com.apple.accountsd.accessmanager")
(global-name "com.apple.accountsd.authmanager")
(global-name "com.apple.healthd.restriction"))
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.twitterd.server")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.accountsd.oauthsigner")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.calaccessd")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.calaccessd.xpc")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.twitterd")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.healthd.server")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(global-name "com.apple.replayd")
		(require-not (process-attribute is-plugin))))
(allow mach-register
	(require-all
		(extension "com.apple.security.exception.mach-register.local-name"))
	(require-all
		(extension "com.apple.security.exception.mach-register.global-name"))
	(require-all
		(require-not (global-name-regex #"-idswake$" #".+-idswake$"))
		(require-any
			(local-name "com.apple.iphone.axserver")
			(local-name "com.apple.accessibility.gax.client")
			(local-name "com.apple.assistant.contextprovider.")
			(require-all
				(require-any (global-name "com.apple.Music.MPMusicPlayerControllerInternal")
(global-name "com.apple.Music.MPMusicPlayerMigServerExists"))
				(require-entitlement "com.apple.private.signing-identifier"
					(entitlement-value "com.apple.Music")))
			(require-all
				(extension "com.apple.sandbox.application-group")
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))))
(allow network-inbound
	(local ip "*:*")
	(require-all
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
		(require-any
			(extension "com.apple.librarian.ubiquity-container")
			(require-entitlement "com.apple.private.librarian.container-proxy")))
	(require-all
		(extension "com.apple.app-sandbox.read-write")
		(subpath "${FRONTEND_HOME}/Library/Mobile Documents/"))
	(require-all
		(extension "com.apple.sandbox.container")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
		(subpath "${FRONTEND_HOME}/"))
	(require-all
		(extension "com.apple.sandbox.application-group")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
		(subpath "${FRONTEND_HOME}/")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow network-outbound
	(require-all
		(require-not (literal "/private/var/tmp/launchd/sock"))
		(require-not (regex #"^/private/tmp/launchd-[0-9]+\.[^/]+/sock$"))
		(require-any
			(require-all
				(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
				(require-any
					(extension "com.apple.librarian.ubiquity-container")
					(require-entitlement "com.apple.private.librarian.container-proxy")))
			(require-all
				(extension "com.apple.app-sandbox.read-write")
				(subpath "${FRONTEND_HOME}/Library/Mobile Documents/"))
			(require-all
				(extension "com.apple.sandbox.container")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(subpath "${FRONTEND_HOME}/"))
			(require-all
				(literal "/private/var/run/lockdown.sock")
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
			(require-all
				(require-not (remote tcp "localhost:22"))
				(require-not (remote tcp "localhost:23"))
				(require-not (remote tcp "localhost:873"))
				(require-not (remote tcp "localhost:62078"))
				(require-any
					(literal "/private/var/run/mDNSResponder")
					(require-any (control-name "com.apple.network.statistics")
(control-name "com.apple.netsrc"))
					(literal "/private/var/run/syslog")
					(remote ip "*:*")
					(literal "/private/var/run/printd")
					(require-all
						(extension "com.apple.sandbox.application-group")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath "${FRONTEND_HOME}/")
						(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
					(require-all
						(subpath "${FRONTEND_HOME}/Library/Mobile Documents/")
						(require-any
							(extension "com.apple.librarian.ubiquity-container")
							(require-entitlement "com.apple.private.librarian.container-proxy")))
					(require-all
						(extension "com.apple.app-sandbox.read-write")
						(subpath "${FRONTEND_HOME}/Library/Mobile Documents/"))
					(require-all
						(vnode-type SOCKET)
						(literal "${HOME}/Library/ExternalAccessory/ea")))))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(require-any (preference-domain "com.apple.Preferences")
(preference-domain "com.apple.EmojiPreferences"))
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.VoiceOverTouch")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.corevideo")
	(require-any (preference-domain "com.apple.pairedsync")
(preference-domain "com.apple.NanoRegistry"))
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.logging")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.AdLib")
	(preference-domain "com.apple.ConfigServer")
	(preference-domain "com.apple.GMM")
	(preference-domain "com.apple.LaunchServices")
	(preference-domain "com.apple.OTASyncState")
	(require-any (preference-domain "com.apple.iqagent")
(preference-domain "com.apple.TTY"))
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.adtracking")
	(preference-domain "com.apple.aggregated")
	(preference-domain "com.apple.appleaccount")
	(preference-domain "com.apple.apsd")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.atc")
	(preference-domain "com.apple.camera")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.compass")
	(preference-domain "com.apple.dataaccess.dataaccessd")
	(preference-domain "com.apple.gamed")
	(preference-domain "com.apple.imdsmsrecordstore")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.itdbprep.server")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.mms_override")
	(preference-domain "com.apple.mobilenotes")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.persistentconnection-mcc")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.preferences-sounds")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.avfoundation")
	(require-any (preference-domain "com.apple.softwareupdateservicesd")
(preference-domain "com.apple.voicemail")
(preference-domain "com.apple.MobileAddressBook")
(preference-domain "com.apple.VoiceMemos")
(preference-domain "com.apple.XCTest")
(preference-domain "com.apple.certui")
(preference-domain "com.apple.gamekit")
(preference-domain "com.apple.imagent")
(preference-domain "com.apple.madrid")
(preference-domain "com.apple.managedconfiguration.janitor")
(preference-domain "com.apple.messagesbadgecontroller")
(preference-domain "com.apple.mobile.SyncMigrator")
(preference-domain "com.apple.mobileme.fmf.assistant")
(preference-domain "com.apple.mobilestoresettings")
(preference-domain "com.apple.mobiletimer")
(preference-domain "com.apple.mobilevpn")
(preference-domain "com.apple.network.eapclient.tls.TrustExceptions")
(preference-domain "com.apple.nike")
(preference-domain "com.apple.preferences.datetime")
(preference-domain "com.apple.preferences.network")
(preference-domain "itdbprepserver")
(preference-domain "mediaremote"))
	(preference-domain "com.apple.ubd")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.youtubeframework")
	(preference-domain "com.apple.GEO")
	(require-any (preference-domain "com.apple.opengl")
(preference-domain "com.apple.Metal"))
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(require-any (preference-domain "com.apple.mediaaccessibility")
(preference-domain "com.apple.coreanimation")
(preference-domain "com.apple.preferences.sounds"))
	(preference-domain "com.apple.marco")
	(require-any (preference-domain "com.apple.MapKit.internal")
(preference-domain "com.apple.WebUI")
(preference-domain "com.apple.lookup.shared")
(preference-domain "com.apple.InputModePreferences")
(preference-domain "com.apple.SpeakSelection")
(preference-domain "com.apple.voiceservices")
(preference-domain ".GlobalPreferences"))
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.Sharing")
	(require-all
		(preference-domain "com.apple.nanoprefsyncd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.PassbookUIService")))
	(require-all
		(preference-domain "com.apple.AppSupport")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(require-any (preference-domain "com.apple.icloud.findmydeviced.postwipe")
(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup"))
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.DataMigration")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.nanoprefsyncd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-any
			(require-entitlement "com.apple.media.ringtones.read-only")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilemail"))))
	(require-all
		(preference-domain "com.apple.books")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(require-any (preference-domain "com.apple.AppStore")
(preference-domain "com.apple.MobileStore"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-any
			(require-entitlement "com.apple.system.get-wallpaper")
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.carrier")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.demo-settings")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(preference-domain "com.apple.DataAccess.BehaviorOptions")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.AppSupport")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.GEO")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.locationd")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.coremedia")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.corevideo")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.AOSNotification.public.notbackedup")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.WebFoundation")
		(require-entitlement "com.apple.private.signing-identifier"
			(require-any
				(entitlement-value "com.apple.webbookmarksd")
				(entitlement-value "com.apple.safarifetcherd")
				(entitlement-value "com.apple.Safari.SocialHelper")
				(entitlement-value "com.apple.mobilesafari"))))
	(require-all
		(preference-domain "com.apple.weather")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.mobilecal.alarmengine")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.mobilecal")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.PeoplePicker")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.mail.composition")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (preference-domain "com.apple.MailAccount-ExtProperties")
(preference-domain "com.apple.OTASyncAgent"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.OTASyncState")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(preference-domain "com.apple.nanoprefsyncd")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.stocks.watchkitextension")))
	(require-all
		(preference-domain "com.apple.CoreDuet")
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.coremedia")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.corevideo")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(extension "com.apple.tcc.kTCCServicePhotos"))
	(require-all
		(preference-domain "com.apple.medialibrary")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.GMM")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(require-any (preference-domain "com.apple.NanoMailKit")
(preference-domain "com.apple.internal.Voltaire")
(preference-domain "com.skyhookwireless.wps"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.assistant")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.homesharing")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2"))))
(allow user-preference-write
	(require-any (preference-domain "com.apple.Preferences")
(preference-domain "com.apple.EmojiPreferences"))
	(extension "com.apple.security.exception.shared-preference.read-write")
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.mail.composition")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(require-any (preference-domain "com.apple.MailAccount-ExtProperties")
(preference-domain "com.apple.OTASyncAgent"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.OTASyncState")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-entitlement "com.apple.system.set-alert-tone"))
	(require-all
		(preference-domain "com.apple.mobileipod")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-any
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.mobilesafari"))
			(require-entitlement "com.apple.private.signing-identifier"
				(require-any (entitlement-value "com.apple.iBooks")
(entitlement-value "com.apple.itunesu")))
			(require-entitlement "com.apple.container2")))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.mobilesafari")))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.iCloudDriveApp")))
	(require-all
		(preference-domain "com.apple.GMM")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(require-any (preference-domain "com.apple.NanoMailKit")
(preference-domain "com.apple.internal.Voltaire")
(preference-domain "com.skyhookwireless.wps"))
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.assistant")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.Maps")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-entitlement "com.apple.itunesstored.private")))
(allow process-info-codesignature
	(target self)
	(require-entitlement "com.apple.security.exception.process-info")
	(require-all
		(target others)
		(require-entitlement "com.apple.DiagnosticExtensions.extension"))
	(require-all
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow process-info-dirtycontrol
	(target self))
(allow process-info-rusage
	(target self)
	(require-entitlement "com.apple.security.exception.process-info"))
(allow process-info-pidinfo
	(target self)
	(require-entitlement "com.apple.security.exception.process-info")
	(require-all
		(target others)
		(require-entitlement "com.apple.DiagnosticExtensions.extension"))
	(require-all
		(target others)
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.webbookmarksd"))))
(allow pseudo-tty)
(allow signal
	(target self)
	(require-all
		(target others)
		(require-entitlement "com.apple.DiagnosticExtensions.extension"))
	(require-all
		(target others)
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.webbookmarksd"))))
(allow sysctl-read
	(sysctl-name "net.routetable.")
	(sysctl-name "net.statistics")
	(require-any (sysctl-name "kern.ipc.maxsockbuf")
(sysctl-name "kern.nisdomainname"))
	(sysctl-name "kern.bootsessionuuid")
	(extension "com.apple.security.exception.sysctl.read-write")
	(extension "com.apple.security.exception.sysctl.read-only")
	(require-all
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2."))
		(require-entitlement "com.apple.DiagnosticExtensions.extension"))
	(require-all
		(require-not (sysctl-name "sysctl.proc_native"))
		(require-any
			(require-any (sysctl-name "vm.loadavg")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.activecpu")
(sysctl-name "hw.cachelinesize")
(sysctl-name "hw.cachelinesize_compat")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpufrequency_max")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufamily")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.vectorunit")
(sysctl-name "hw.usermem")
(sysctl-name "hw.tbfrequency_compat")
(sysctl-name "hw.tbfrequency")
(sysctl-name "hw.physmem")
(sysctl-name "hw.physicalcpu_max")
(sysctl-name "hw.physicalcpu")
(sysctl-name "hw.pagesize_compat")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.ncpu")
(sysctl-name "hw.model")
(sysctl-name "hw.memsize")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.l3cachesize_compat")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l2cachesize_compat")
(sysctl-name "hw.l2cachesize")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.l1dcachesize_compat")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "sysctl.name2oid")
(sysctl-name "security.mac.sandbox.sentinel")
(sysctl-name "kern.waketime")
(sysctl-name "kern.version")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.secure_kernel")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.osversion")
(sysctl-name "kern.ostype")
(sysctl-name "kern.osrelease")
(sysctl-name "kern.ngroups")
(sysctl-name "kern.monotoniclock_offset_usecs")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.memorystatus_level")
(sysctl-name "kern.maxfilesperproc")
(sysctl-name "kern.hostid")
(sysctl-name "kern.development")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.boottime")
(sysctl-name "kern.bootargs"))
			(sysctl-name "kern.usrstack64")
			(sysctl-name "kern.maxvnodes")
			(sysctl-name "kern.hostname")
			(sysctl-name "hw.machine")))
	(require-all
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2."))
		(require-entitlement "com.apple.security.exception.process-info"))
	(require-all
		(sysctl-name "kern.proc.all")
		(require-entitlement "com.apple.private.signing-identifier"
			(entitlement-value "com.apple.webbookmarksd")))
	(require-all
		(sysctl-name "kern.proc.pid.")
		(process-attribute 4)
		(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash"))))
(allow system-info
	(require-all
		(info-type "net.link.addr")
		(require-entitlement "fairplay-client")
		(require-not (require-entitlement "com.apple.private.MobileGestalt.AllowedProtectedKeys"))))
(allow system-privilege)
(allow system-socket
	(socket-domain AF_ROUTE)
	(require-all
		(socket-domain AF_SYSTEM)
		(socket-protocol 2))
	(require-all
		(socket-domain 39)
		(require-any
			(require-entitlement "com.apple.network.multipath-tcp")
			(require-entitlement "com.apple.private.signing-identifier"
				(entitlement-value "com.apple.Maps")))))
