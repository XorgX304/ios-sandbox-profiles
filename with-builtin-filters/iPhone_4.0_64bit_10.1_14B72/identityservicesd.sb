(version 1)
(deny default)
(allow file-issue-extension
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-write")
			(extension "com.apple.security.exception.files.home-relative-path.read-write")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "com.apple.security.exception.files.absolute-path.read-only")
			(extension "com.apple.security.exception.files.home-relative-path.read-only")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "com.apple.sandbox.executable"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(subpath "/System/Library/"))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(subpath "/System/Library/"))
	(require-all
		(extension-class "com.apple.identityservices.deliver")
		(subpath "${FRONTEND_HOME}/Library/IdentityServices/"))
	(require-all
		(extension "com.apple.sandbox.executable")
		(extension-class "com.apple.nsurlsessiond.readonly")))
(allow file-link)
(allow file-read*
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(literal "/dev/dtracehelper")
	(require-any (literal "/dev/null")
(literal "/dev/zero"))
	(require-any (subpath "/private/var/db/datadetectors/sys/")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library/"))
	(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo/")
(subpath "${HOME}/Library/ConfigurationProfiles/PublicInfo/")
(subpath "${HOME}/Library/UserConfigurationProfiles/PublicInfo/"))
	(literal "${HOME}/Library/Caches/com.apple.MobileGestalt.plist")
	(literal "/dev/aes_0")
	(require-any (literal "/dev/random")
(literal "/dev/urandom"))
	(literal "/dev/ptmx")
	(literal "${HOME}/Library/Preferences/com.apple.logging.plist")
	(subpath "/Developer/")
	(require-any (literal "${HOME}/Library/Preferences/com.apple.pairedsync.plist")
(literal "${HOME}/Library/Preferences/com.apple.NanoRegistry.plist"))
	(literal "/private/var/Managed Preferences/mobile/com.apple.marco.plist")
	(literal "${HOME}/Library/Preferences/com.apple.marco.plist")
	(subpath "${FRONTEND_HOME}/Library/Logs/CrashReporter/")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.migration.plist")
(literal "${HOME}/Library/Preferences/com.apple.migration.plist"))
	(regex #"^/System/Library/Carrier Bundles//carrier\.plist$" #"^/System/Library/Carrier Bundles/.+/carrier\.plist$")
	(require-any (subpath "${FRONTEND_HOME}/Library/Logs/awd/awd-identityservicesd.log")
(subpath "${FRONTEND_HOME}/Library/Preferences/com.apple.ids.service.")
(subpath "${FRONTEND_HOME}/Library/IdentityServices/")
(subpath "${HOME}/Library/Logs/PersistentConnection/com.apple.identityservicesd")
(subpath "${HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.identityservicesd"))
	(require-any (literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal "${FRONTEND_HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
	(literal "/private/var/Managed Preferences/mobile/com.apple.persistentconnection.plist")
	(literal "${HOME}/Library/Preferences/com.apple.persistentconnection.plist")
	(subpath "${HOME}/Library/Carrier Bundles/Overlay/")
	(literal "${HOME}/Library/Preferences/com.apple.carrier.plist")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "${HOME}/Library/Preferences/.GlobalPreferences.plist")
	(subpath "/private/var/preferences/Logging/")
	(subpath "/System/Library/")
	(subpath "/usr/lib/")
	(subpath "/usr/share/")
	(subpath "/private/var/db/timezone/")
	(subpath "/AppleInternal/")
	(require-any (subpath "${FRONTEND_HOME}/Library/Caches/com.apple.setmme/")
(subpath "/private/var/Managed Preferences/mobile/com.apple.registration.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.ids.subservices.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.ids.deviceproperties.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.identityservices.idstatuscache.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.identityservicesd.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.${HOME}/Library/Preferences/com.apple.registration.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.${HOME}/Library/Preferences/com.apple.imessage.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.${HOME}/Library/Preferences/com.apple.ids.subservices.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.${HOME}/Library/Preferences/com.apple.ids.deviceproperties.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.${HOME}/Library/Preferences/com.apple.identityservices.idstatuscache.plist")
(subpath "/private/var/Managed Preferences/mobile/com.apple.${HOME}/Library/Preferences/com.apple.identityservicesd.plist"))
	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
(literal "${HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
(literal "${HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist"))
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.pairedsync.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.NanoRegistry.plist"))
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
	(subpath "/private/var/tmp/")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.purplebuddy.notbackedup.plist")
(literal "${HOME}/Library/Preferences/com.apple.purplebuddy.notbackedup.plist"))
	(literal "/private/var/preferences/com.apple.security.plist")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.purplebuddy.plist")
(literal "${HOME}/Library/Preferences/com.apple.purplebuddy.plist"))
	(require-any (literal "${HOME}/Library/Preferences/com.apple.DataMigration.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.DataMigration.plist"))
	(literal "/private/var/Managed Preferences/mobile/com.apple.imessage.plist")
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(literal "/private/var/Managed Preferences/mobile/com.apple.demo-settings.plist")
	(literal "${HOME}/Library/Preferences/com.apple.demo-settings.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.da.plist")
	(literal "${HOME}/Library/Preferences/com.apple.da.plist")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.AppSupport.plist")
(literal "${HOME}/Library/Preferences/com.apple.AppSupport.plist"))
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.conference.plist")
(literal "${HOME}/Library/Preferences/com.apple.conference.plist"))
	(extension "com.apple.identityservices.send")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.sandbox.executable")
	(extension "com.apple.security.exception.files.home-relative-path.read-only")
	(literal)
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.facetime.bag.plist")
(literal "${HOME}/Library/Preferences/com.apple.facetime.bag.plist"))
	(extension "com.apple.security.exception.files.absolute-path.read-only")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(literal "/private/var/Managed Preferences/mobile/com.apple.logging.plist")
	(regex #"^/System/Library/Carrier Bundles/\.png$" #"^/System/Library/Carrier Bundles/.+\.png$")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.imessage.bag.plist")
(literal "${HOME}/Library/Preferences/com.apple.imessage.bag.plist"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container"))
	(require-all
		(vnode-type TTY)
		(require-any (literal "/dev/ttyp[a-f0-9]")
(literal "/dev/ptyp[a-f0-9]")))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(literal "${HOME}/Library/Preferences/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(literal "/private/var/Managed Preferences/mobile/com.apple.bulletinboard.plist")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)
		(require-any
			(literal "/private/etc/hosts")
			(require-any (literal "/private/etc/group")
(literal "/private/etc/passwd")
(literal "/private/etc/protocols")
(literal "/private/etc/services"))
			(subpath "/")
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People"))
				(require-entitlement "com.apple.coreduetd.people"))
			(require-all
				(require-any (literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-journal")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-shm")
(literal "${FRONTEND_HOME}/Library/CoreDuet/People/interactionC.db-wal"))
				(require-entitlement "com.apple.coreduetd.people"))))
	(require-all
		(subpath "/AppleInternal/")
		(debug-mode))
	(require-all
		(subpath "/usr/local/lib/")
		(debug-mode))
	(require-all
		(subpath "${HOME}/XcodeBuiltProducts/")
		(debug-mode))
	(require-all
		(require-any (literal "/bin/sh")
(literal "/usr/bin/lskq"))
		(debug-mode))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier\.plist$")
		(subpath "${HOME}/"))
	(require-all
		(literal "/usr/local/bin")
		(debug-mode))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.png$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.png$")
		(subpath "${HOME}/"))
	(require-all
		(regex #"^/private/var/mobile/Library/Carrier Bundles/\.bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle$" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/Info\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/Info\.plist$" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/\.lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/\.lproj$" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/[^/]+\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/\.bundle/[^/]+\.lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/[^/]+\.lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+\.bundle/[^/]+\.lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*\.bundle/Info\.plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*\.bundle/Info\.plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*\.bundle/Info\.plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*\.bundle/|\.bundle/[^/]+)|.+\.bundle/[^/]+)\.lproj$")
		(subpath "${HOME}/"))
	(require-all
		(literal "/dev/tty")
		(debug-mode))
	(require-all
		(literal "/usr/local/bin/figplaySS")
		(debug-mode)))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(vnode-type DIRECTORY)
	(literal "${FRONTEND_HOME}/Library/Caches/powerlog.launchd")
	(literal "${FRONTEND_HOME}/Library/PPTDevice")
	(literal "${FRONTEND_HOME}")
	(literal "${FRONTEND_HOME}/Library/Logs/awd")
	(literal "${FRONTEND_HOME}/Library/Preferences")
	(require-any (literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection"))
	(subpath "${HOME}/Library/Carrier Bundles/")
	(literal "/private/var/run/syslog")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(literal "${FRONTEND_HOME}")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(literal "${FRONTEND_HOME}/Library/Preferences")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(vnode-type DIRECTORY)
		(literal "${FRONTEND_HOME}/Library/Logs/awd"))
	(require-all
		(vnode-type DIRECTORY)
		(require-any (literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection")))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-read-times
	(require-all
		(process-attribute 4)
		(require-any
			(vnode-type DIRECTORY)
			(vnode-type SYMLINK))))
(allow file-write*
	(require-any (subpath "${FRONTEND_HOME}/Library/Logs/awd/awd-identityservicesd.log")
(subpath "${FRONTEND_HOME}/Library/Preferences/com.apple.ids.service.")
(subpath "${FRONTEND_HOME}/Library/IdentityServices/")
(subpath "${HOME}/Library/Logs/PersistentConnection/com.apple.identityservicesd")
(subpath "${HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.identityservicesd"))
	(require-any (literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal "${FRONTEND_HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock")
(literal "${FRONTEND_HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock"))
	(subpath "${FRONTEND_HOME}/Library/Logs/CrashReporter/")
	(literal "${HOME}/Library/Preferences/com.apple.conference.plist")
	(literal "${HOME}/Library/Preferences/com.apple.DataMigration.plist")
	(require-any (literal "${HOME}/Library/Preferences/com.apple.imessage.bag.plist")
(literal "${HOME}/Library/Preferences/com.apple.facetime.bag.plist"))
	(subpath "/private/var/tmp/")
	(require-any (literal "${HOME}/Library/Preferences/com.apple.ids.subservices.plist")
(literal "${HOME}/Library/Preferences/com.apple.ids.deviceproperties.plist")
(literal "${HOME}/Library/Preferences/com.apple.ids.plist")
(literal "${HOME}/Library/Preferences/com.apple.identityservices.idstatuscache.plist")
(literal "${HOME}/Library/Preferences/com.apple.identityservicesd.plist"))
	(extension "com.apple.security.exception.files.home-relative-path.read-write")
	(extension "com.apple.security.exception.files.absolute-path.read-write")
	(extension "com.apple.identityservices.send")
	(regex #"^/private/var/containers/Data/System/[^/]+/")
	(require-all
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/")))
	(require-all
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container")))
(allow file-write-create
	(require-all
		(require-not (literal "${FRONTEND_HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "com.apple.private.safe-move.send"))
			(require-all
				(vnode-type DIRECTORY)
				(literal "${FRONTEND_HOME}/Library/Logs/awd"))
			(require-all
				(vnode-type DIRECTORY)
				(require-any (literal "${HOME}/Library/Logs/PersistentConnection")
(literal "${HOME}/Library/Logs/CrashReporter/PersistentConnection"))))))
(allow file-write-data
	(literal "/dev/ptmx")
	(literal "/dev/aes_0")
	(require-all
		(literal "/dev/tty")
		(debug-mode))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.send"))
	(require-all
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
		(extension "com.apple.sandbox.pty"))
	(require-all
		(vnode-type TTY)
		(require-any (literal "/dev/ttyp[a-f0-9]")
(literal "/dev/ptyp[a-f0-9]")))
	(require-all
		(require-not (require-any (literal "/dev/random")
(literal "/dev/urandom")))
		(require-any
			(literal "/dev/dtracehelper")
			(require-any (literal "/dev/null")
(literal "/dev/zero")))))
(allow file-write-mode
	(require-all
		(extension "com.apple.sandbox.pty")
		(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))
(allow file-write-unlink
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "com.apple.private.safe-move.receive")))
(allow file-write-xattr
	(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$")
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-group")
		(require-any
			(require-entitlement "com.apple.security.system-groups")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")
			(require-entitlement "com.apple.security.system-group-containers")
			(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(extension "com.apple.sandbox.system-container")
		(require-entitlement "com.apple.security.system-container")))
(allow iokit-get-properties)
(allow mach-cross-domain-lookup)
(allow mach-lookup
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(require-any (global-name "com.apple.ReportCrash.SimulateCrash")
(global-name "com.apple.hangtracerd"))
	(require-any (global-name "com.apple.logd.events")
(global-name "com.apple.containermanagerd"))
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.logd")
(global-name "com.apple.system.logger")
(global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.agent"))
	(global-name "com.apple.awdd")
	(require-any (global-name "com.apple.tccd")
(global-name "com.apple.lsd.advertisingidentifiers")
(global-name "com.apple.lsd.openurl"))
	(require-any (global-name "com.apple.ctkd.token-client")
(global-name "com.apple.CoreAuthentication.daemon.libxpc")
(global-name "com.apple.managedconfiguration.profiled.public"))
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.assertiond.processassertionconnection")
(global-name "com.apple.xpcd")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.lsd.open")
(global-name "com.apple.lsd")
(global-name "com.apple.duetknowledged.activity"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.WirelessCoexManager")
	(global-name "com.apple.absd")
	(global-name "com.apple.absinthed")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.fairplayd.versioned")
	(require-any (global-name "com.apple.idscredentialsagent.embedded.auth")
(global-name "com.apple.imtransferservices.IMTransferAgent"))
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.server.bluetooth")
	(global-name-regex #"-idswake$" #".+-idswake$")
	(global-name "com.apple.server.bluetooth.le.pipe.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(require-any (global-name "com.apple.usymptomsd")
(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
(global-name "com.apple.SystemConfiguration.DNSConfiguration")
(global-name "com.apple.SystemConfiguration.NetworkInformation"))
	(require-any (global-name "com.apple.symptomsd")
(global-name "com.apple.trustd")
(global-name "com.apple.commcenter.cupolicy.xpc")
(global-name "com.apple.SystemConfiguration.helper")
(global-name "com.apple.SystemConfiguration.PPPController"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.apsd")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.GSSCred")
(global-name "com.apple.cookied")
(global-name "com.apple.cfnetwork.AuthBrokerAgent")
(global-name "com.apple.cfnetwork.cfnetworkagent")
(global-name "com.apple.nsurlstorage-cache"))
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.networkd")
	(require-any (global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
(global-name "com.apple.pairedsyncd.syncstate"))
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.marco")
	(global-name "com.apple.datamigrator")
	(require-all
		(extension "com.apple.security.exception.mach-lookup.local-name"))
	(require-all
		(global-name "com.apple.bulletinboard.dataproviderconnection")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(extension "com.apple.security.exception.mach-lookup.global-name"))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(require-entitlement "com.apple.networkd.advisory_socket")
			(require-entitlement "com.apple.networkd.disable_opportunistic")
			(require-entitlement "com.apple.networkd.modify_settings")
			(require-entitlement "com.apple.networkd.persistent_interface")
			(require-entitlement "com.apple.networkd_privileged")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(require-entitlement "com.apple.authkit.client")
			(require-entitlement "com.apple.authkit.client.private")
			(require-entitlement "com.apple.authkit.client.internal")
			(require-all
				(process-attribute 4)
				(require-not (require-entitlement "com.apple.private.amfi.can-execute-cdhash")))))
	(require-all
		(global-name "com.apple.audio.SystemSoundServer-iOS")
		(debug-mode))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(require-entitlement "com.apple.coreduetd.people"))
	(require-all
		(require-any (global-name "com.apple.appstored.xpc.jobmanager")
(global-name "com.apple.appstored.xpc.updates"))
		(require-entitlement "com.apple.itunesstored.private"))
	(require-all
		(global-name "com.apple.itunesstored.xpc")
		(require-entitlement "com.apple.itunesstored.private")))
(allow network-inbound
	(local ip "*:*"))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow user-preference-read
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.purplebuddy.notbackedup")
	(preference-domain "com.apple.registration")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.imessage.bag")
	(require-any (preference-domain "com.apple.identityservicesd")
(preference-domain "com.apple.identityservices.idstatuscache")
(preference-domain "com.apple.ids.deviceproperties")
(preference-domain "com.apple.ids.subservices"))
	(preference-domain "com.apple.ids")
	(extension "com.apple.security.exception.shared-preference.read-only")
	(preference-domain "com.apple.carrier")
	(require-any (preference-domain "com.apple.pairedsync")
(preference-domain "com.apple.NanoRegistry"))
	(preference-domain "com.apple.logging")
	(extension "com.apple.security.exception.shared-preference.read-write")
	(preference-domain "com.apple.migration")
	(require-all
		(preference-domain "com.apple.bulletinboard")
		(require-entitlement "com.apple.bulletinboard.dataprovider"))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(debug-mode)))
(allow user-preference-write
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.ids")
	(require-any (preference-domain "com.apple.identityservicesd")
(preference-domain "com.apple.identityservices.idstatuscache")
(preference-domain "com.apple.ids.deviceproperties")
(preference-domain "com.apple.ids.subservices"))
	(preference-domain "com.apple.DataMigration"))
(allow process-exec*
	(require-all
		(literal "/usr/local/bin/figplaySS")
		(debug-mode)))
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow pseudo-tty)
(allow system-privilege)
